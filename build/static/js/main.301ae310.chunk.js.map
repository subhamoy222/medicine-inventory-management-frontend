{"version":3,"sources":["context/SocketContext.js","utils/socketUtils.js","components/Dashboard.js","components/Inventory.js","components/Alerts.js","components/Login.js","components/Register.js","components/Layout.js","components/ViewInventory.js","components/GenerateBillOptions.js","components/PurchaseBillForm.js","components/SellBillForm.js","components/ReturnBillOptions.js","components/PurchaseReturnForm.js","components/PurchaseReturnSearch.js","components/SaleReturnForm.js","components/ExpiryBillForm.js","components/BillGenerationDocs.jsx","components/PurchaseHistory.jsx","components/PartyInvoiceSearch.js","components/Report.js","components/ClientExpiryReturnForm.js","components/ClientExpiryBillGenerator.js","components/SupplierExpiryBillGenerator.js","components/ExpiryBillDocs.js","App.js","reportWebVitals.js","index.js"],"names":["SocketContext","createContext","useSocket","useContext","SocketProvider","_ref","children","socket","setSocket","useState","useEffect","newSocket","io","process","REACT_APP_API_URL","withCredentials","reconnection","reconnectionAttempts","reconnectionDelay","transports","on","console","log","user","JSON","parse","localStorage","getItem","email","emit","error","attemptNumber","disconnect","React","createElement","Provider","value","SOCKET_EVENTS","INVENTORY_UPDATE","PURCHASE_BILL_CREATED","SELL_BILL_CREATED","RETURN_BILL_CREATED","MetricItem","_ref4","label","icon","color","onClick","colorClasses","teal","bg","text","amber","rose","className","ActivityItem","_ref5","title","amount","green","hover","indigo","purple","ActionButton","_ref6","description","gradient","Dashboard","navigate","useNavigate","location","useLocation","inventoryCount","setInventoryCount","lowStockCount","setLowStockCount","expiringSoonCount","setExpiringSoonCount","notifications","setNotifications","setEmail","analyticsData","setAnalyticsData","totalRevenue","averageOrderValue","topSellingMedicines","salesGrowth","activityMetrics","setActivityMetrics","dailySales","monthlySales","activeCustomers","processInventoryData","useCallback","inventoryData","lowStockItems","expiringSoonItems","currentDate","Date","forEach","item","quantity","push","name","itemName","expiryDate","expirationDate","daysToExpire","Math","ceil","daysRemaining","length","lowStockNotifications","map","type","message","expiringSoonNotifications","fetchUserEmail","storedEmail","fetchDashboardData","async","axios","get","params","data","fetchAnalyticsData","token","Error","today","startDate","getFullYear","getMonth","endDate","response","toISOString","split","medicineName","headers","Authorization","Content-Type","salesDetails","sales","reduce","sum","sale","mrp","discount","uniqueInvoices","Set","saleInvoiceNumber","medicineMap","acc","key","Object","entries","sort","_ref2","a","b","slice","_ref3","defaults","common","handleInventoryUpdate","count","Array","isArray","handleDashboardUpdate","off","DASHBOARD_UPDATE","userEmail","handleVisibilityChange","document","visibilityState","addEventListener","removeEventListener","pathname","handleAlertClick","handleLogout","removeItem","xmlns","viewBox","fill","fillRule","d","clipRule","Inventory","inventory","setInventory","filteredInventory","setFilteredInventory","loading","setLoading","setError","searchTerm","setSearchTerm","partyFilter","setPartyFilter","isRefreshing","setIsRefreshing","expiringSoon","setExpiringSoon","lowStock","setLowStock","activeFilter","setActiveFilter","socketCallbacksRef","useRef","inventoryWithPartyName","_item$partyName","partyName","trim","thirtyDaysFromNow","setDate","getDate","expiring","filter","low","userData","initializeSocket","current","subscribeToEvent","event","callback","warn","unsubscribeFromEvent","fetchInventory","fetch","encodeURIComponent","ok","errorData","json","filtered","toLowerCase","includes","batch","some","exp","_id","uniquePartyNames","isExpiringSoon","dateObj","totalInventoryValue","purchaseRate","Package","User","Calendar","toLocaleString","DollarSign","AlertCircle","SearchIcon","placeholder","onChange","e","target","disabled","RefreshCw","header","_item$purchaseRate","_item$mrp","toLocaleDateString","year","month","day","formatDate","pack","toFixed","gstPercentage","Activity","LoadingScreen","AlertCard","alert","getAlertStyles","getIcon","time","Alerts","alerts","setAlerts","selectedCategory","setSelectedCategory","Promise","resolve","setTimeout","lowStockThreshold","expiringSoonThreshold","newAlerts","category","fetchAlerts","filteredAlerts","index","Login","formData","setFormData","password","handleChange","[object Object]","onSubmit","preventDefault","post","status","setItem","err","required","Register","confirmPassword","gstNo","success","setSuccess","verificationStep","setVerificationStep","LoadingOverlay","VerificationSuccess","stroke","strokeLinecap","strokeLinejoin","strokeWidth","_err$response","_err$response$data","cx","cy","r","Layout","Link","to","FaPills","FaClinicMedical","FaChartLine","card","number","stat","href","FaFacebookF","FaTwitter","FaInstagram","social","idx","rel","CardButton","subtitle","GenerateBillOptions","PurchaseBillForm","items","setItems","totalAmount","discountAmount","gstAmount","netAmount","purchaseDetails","setPurchaseDetails","supplierInvoiceNumber","receiptNumber","date","setMessage","handleItemChange","updatedItems","calculatedAmounts","parseFloat","amountAfterDiscount","calculateItemAmounts","handleDetailsChange","totals","rowIndex","keys","field","colIndex","readOnly","colSpan","addItem","purchaseAmount","body","method","stringify","generatePDF","doc","jsPDF","setFontSize","tableData","autoTable","startY","head","theme","headStyles","fillColor","styles","fontSize","save","timestamp","SellBillForm","sellDetails","setSellDetails","gstNumber","searchResults","setSearchResults","searchLoading","setSearchLoading","showAutocomplete","setShowAutocomplete","activeItemIndex","setActiveItemIndex","updateItem","resetItems","initialGstNumber","initialState","batchOptions","availableQuantity","dispatch","useReducer","itemsReducer","state","action","payload","useItems","prev","invoiceNumber","fetchNextInvoiceNumber","resetForm","nextInvoiceNumber","responseData","generateNextInvoiceNumber","fetchInventoryData","debounce","func","delay","timeoutId","_len","arguments","args","_key","clearTimeout","_data$0$mrp","_data$0$purchaseRate","_data$0$gstPercentage","batchNumber","replace","sanitizedBatch","toString","currentItem","cleanBatch","selectedBatch","find","_selectedBatch$mrp","_selectedBatch$purcha","_selectedBatch$gstPer","sgst","cgst","igst","totalGst","handleClickOutside","_item$availableQuanti","_item$availableQuanti2","stopPropagation","result","handleAutocompleteSelect","min","max","step","Number","totalDiscount","rest","sgstAmount","cgstAmount","igstAmount","totalGstAmount","setFillColor","rect","setTextColor","align","tableRows","textColor","fontStyle","halign","bodyStyles","alternateRowStyles","columnStyles","0","cellWidth","1","2","3","4","5","6","7","8","cellPadding","valign","margin","left","right","finalY","lastAutoTable","setFont","undefined","ReturnBillOptions","loadingType","setLoadingType","handleNavigation","API_BASE_URL","PurchaseReturnForm","supplierName","supplierGST","returnableQuantity","originalPurchaseQuantity","soldQuantity","returnedQuantity","currentInventoryQuantity","suppliers","setSuppliers","returnableItems","setReturnableItems","isBillsLoaded","setIsBillsLoaded","calculations","setCalculations","totalGST","interceptor","interceptors","request","use","config","eject","uniqueSuppliers","_err$response2","_err$response2$data","fetchSuppliers","handleLoadBills","_err$response3","_err$response4","_err$response4$data","handleInputChange","returnableItem","calculateTotals","itemTotal","itemDiscount","itemGST","testItem","now","ri","updatedReturnableQuantities","prevState","pdfUrl","pdfResponse","responseType","url","window","URL","createObjectURL","Blob","link","setAttribute","returnBill","returnInvoiceNumber","appendChild","click","remove","revokeObjectURL","pdfError","_err$response5","_err$response5$data","list","id","supplier","addItemRow","inputMode","pattern","splice","removeItemRow","PurchaseReturnSearch","setSupplierName","activeTab","setActiveTab","filters","setFilters","expiryStatus","sortBy","sortOrder","dateRange","priceRange","handleSearch","totalPurchaseValue","purchasedQuantity","totalSaleValue","avgPrice","getExpiryStatus","monthsLeft","filteredResults","useMemo","matchesSearch","matchesExpiry","matchesDateRange","purchaseDate","daysDiff","floor","matchesPriceRange","price","order","localeCompare","renderResults","totalPurchasedQty","totalSoldQty","statCards","SaleReturnForm","customerName","availableBatches","saleBills","setSaleBills","fetchingBills","setFetchingBills","showLoadBillButton","setShowLoadBillButton","checkAuthentication","numericValue","itemTotalAmount","itemDiscountAmount","itemAmountAfterDiscount","itemGstAmount","Map","medicine","set","parseInt","medicineData","updatedSaleBills","returnedItem","_response$data","formattedMedicines","Fragment","scope","handleItemNameChange","matchingMedicines","handleBatchChange","batchIndex","handlePrint","ExpiryBillForm","handleOptionSelect","option","toast","BillGenerationDocs","rate","code","tax","availability","channel","PartyInvoiceSearch","setPartyName","invoices","setInvoices","invoice","MedicineSalesSummary","salesData","setSalesData","setMedicineName","availableMedicines","setAvailableMedicines","suggestions","setSuggestions","showSuggestions","setShowSuggestions","setStartDate","setEndDate","availableParties","setAvailableParties","suggestionTimeoutRef","inputRef","fetchSalesData","uniqueParties","buildSearchParams","dateString","setFullYear","handleFilterSearch","handleSuggestionClick","suggestion","focus","handleInputBlur","handleInputFocus","handleResetFilters","handleDownloadPDF","setProperties","subject","author","creator","totalSales","totalQuantity","formattedDate","total","rowData","lineColor","pageCount","internal","getNumberOfPages","i","setPage","pageSize","height","medicines","fetchAvailableMedicines","htmlFor","ref","onBlur","onFocus","autoComplete","onMouseDown","party","calculateTotal","reject","ClientExpiryReturnForm","notes","selectedItem","setSelectedItem","returnQuantity","originalSaleInvoiceNumber","isLoading","setIsLoading","medicinesList","setMedicinesList","batchesList","setBatchesList","returnItems","setReturnItems","totalValue","setTotalValue","from","fetchClientMedicines","billData","returnBillNumber","tableColumn","top","totalItems","_error$response","_error$response$data","fetchMedicineBatches","batchId","newQuantity","addItemToReturn","findIndex","itemValue","rows","SupplierExpiryBillGenerator","setStep","isAuthenticated","setIsAuthenticated","expiryItems","setExpiryItems","selectedItems","setSelectedItems","summary","setSummary","Boolean","calculateSummary","itemsToCalculate","nextStep","isNaN","getTime","adjustedEndDate","filteredItems","isSelected","selectedStartDate","selectedEndDate","fetchExpiryItems","prevStep","handleSubmit","selectedExpiryItems","_error$response2","_error$response2$data","expiryBillNumber","checked","itemId","handleItemSelection","handleQuantityChange","validQuantity","ExpiryBillDocs","App","Router","Toaster","position","reverseOrder","Routes","Route","path","element","ViewInventory","PurchaseHistory","ClientExpiryBillGenerator","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.301ae310.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst SocketContext = createContext();\r\n\r\nexport const useSocket = () => {\r\n  return useContext(SocketContext);\r\n};\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Only create socket if it doesn't exist\r\n    if (!socket) {\r\n      const newSocket = io(process.env.REACT_APP_API_URL || 'https://medicine-inventory-management-backend.onrender.com', {\r\n        withCredentials: true,\r\n        reconnection: true,\r\n        reconnectionAttempts: 5,\r\n        reconnectionDelay: 1000,\r\n        transports: ['websocket', 'polling']\r\n      });\r\n\r\n      newSocket.on('connect', () => {\r\n        console.log('Socket connected');\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        if (user?.email) {\r\n          newSocket.emit('join', { email: user.email });\r\n        }\r\n      });\r\n\r\n      newSocket.on('disconnect', () => {\r\n        console.log('Socket disconnected');\r\n      });\r\n\r\n      newSocket.on('error', (error) => {\r\n        console.error('Socket error:', error);\r\n      });\r\n\r\n      newSocket.on('reconnect', (attemptNumber) => {\r\n        console.log('Socket reconnected after', attemptNumber, 'attempts');\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        if (user?.email) {\r\n          newSocket.emit('join', { email: user.email });\r\n        }\r\n      });\r\n\r\n      setSocket(newSocket);\r\n    }\r\n\r\n    return () => {\r\n      if (socket) {\r\n        socket.disconnect();\r\n        setSocket(null);\r\n      }\r\n    };\r\n  }, []); // Empty dependency array since we only want to create socket once\r\n\r\n  return (\r\n    <SocketContext.Provider value={socket}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n}; ","import { io } from 'socket.io-client';\n\n// Constants for socket event names\nexport const SOCKET_EVENTS = {\n  INVENTORY_UPDATE: 'inventory_update',\n  PURCHASE_BILL_CREATED: 'purchase_bill_created',\n  SELL_BILL_CREATED: 'sell_bill_created',\n  RETURN_BILL_CREATED: 'return_bill_created'\n};\n\nlet socket = null;\n\n/**\n * Initialize socket connection with user data\n * @param {Object} userData - The user data containing email\n */\nexport const initializeSocket = (userData) => {\n  if (socket) {\n    console.log('Socket already initialized');\n    return;\n  }\n\n  socket = io(process.env.REACT_APP_API_URL || 'https://medicine-inventory-management-backend.onrender.com', {\n    withCredentials: true\n  });\n\n  socket.on('connect', () => {\n    console.log('Socket connected');\n    if (userData && userData.email) {\n      socket.emit('join', userData);\n    }\n  });\n\n  socket.on('disconnect', () => {\n    console.log('Socket disconnected');\n  });\n\n  socket.on('error', (error) => {\n    console.error('Socket error:', error);\n  });\n\n  return socket;\n};\n\n/**\n * Disconnect the socket\n */\nexport const disconnectSocket = () => {\n  if (socket) {\n    socket.disconnect();\n    socket = null;\n  }\n};\n\n/**\n * Subscribe to a socket event\n * @param {string} event - The event name\n * @param {Function} callback - The callback function\n */\nexport const subscribeToEvent = (event, callback) => {\n  if (!socket) {\n    console.warn('Socket not initialized');\n    return;\n  }\n  socket.on(event, callback);\n};\n\n/**\n * Unsubscribe from a socket event\n * @param {string} event - The event name\n * @param {Function} callback - The callback function\n */\nexport const unsubscribeFromEvent = (event, callback) => {\n  if (!socket) {\n    console.warn('Socket not initialized');\n    return;\n  }\n  socket.off(event, callback);\n};\n\nexport default socket; ","import React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useSocket } from '../context/SocketContext';\nimport { SOCKET_EVENTS } from \"../utils/socketUtils.js\";\n\nfunction Dashboard() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const socket = useSocket();\n  const [inventoryCount, setInventoryCount] = useState(0);\n  const [lowStockCount, setLowStockCount] = useState(0);\n  const [expiringSoonCount, setExpiringSoonCount] = useState(0);\n  const [notifications, setNotifications] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [analyticsData, setAnalyticsData] = useState({\n    totalRevenue: 0,\n    averageOrderValue: 0,\n    topSellingMedicines: [],\n    salesGrowth: 0\n  });\n  // Real-time activity metrics\n  const [activityMetrics, setActivityMetrics] = useState({\n    dailySales: \"₹0\",\n    monthlySales: \"₹0\",\n    activeCustomers: 0\n  });\n  \n  // Process inventory data for low stock and expiring items\n  const processInventoryData = useCallback((inventoryData) => {\n    const lowStockThreshold = 10;\n    const expiringSoonThreshold = 30;\n    const lowStockItems = [];\n    const expiringSoonItems = [];\n    const currentDate = new Date();\n\n    inventoryData.forEach((item) => {\n      if (item.quantity <= lowStockThreshold) {\n        lowStockItems.push({\n          name: item.itemName,\n          quantity: item.quantity\n        });\n      }\n\n      if (item.expiryDate) {\n        const expirationDate = new Date(item.expiryDate);\n        const daysToExpire = Math.ceil((expirationDate - currentDate) / (1000 * 3600 * 24));\n        \n        if (daysToExpire > 0 && daysToExpire <= expiringSoonThreshold) {\n          expiringSoonItems.push({\n            name: item.itemName,\n            expiryDate: item.expiryDate,\n            daysRemaining: daysToExpire\n          });\n        }\n      }\n    });\n\n    setLowStockCount(lowStockItems.length);\n    setExpiringSoonCount(expiringSoonItems.length);\n\n    const lowStockNotifications = lowStockItems.map(item => ({\n      type: \"warning\",\n      message: `Low stock: ${item.name} (${item.quantity} units remaining)`,\n    }));\n\n    const expiringSoonNotifications = expiringSoonItems.map(item => ({\n      type: \"warning\",\n      message: `Expiring soon: ${item.name} (${item.daysRemaining} days remaining)`,\n    }));\n\n    setNotifications([...lowStockNotifications, ...expiringSoonNotifications]);\n  }, []);\n\n  const fetchUserEmail = useCallback(() => {\n    const storedEmail = localStorage.getItem(\"email\");\n    setEmail(storedEmail || \"Guest\");\n    return storedEmail;\n  }, []);\n\n  const fetchDashboardData = useCallback(async () => {\n    if (!email) return;\n    try {\n      const inventoryRes = await axios.get('https://medicine-inventory-management-backend.onrender.com/api/inventory', {\n        params: { email }\n      });\n      const inventoryData = inventoryRes.data;\n      setInventoryCount(inventoryData.length);\n      processInventoryData(inventoryData);\n    } catch (error) {\n      console.error(\"Error fetching dashboard data:\", error);\n      setInventoryCount(0);\n      setLowStockCount(0);\n      setExpiringSoonCount(0);\n      setNotifications([{\n        type: \"warning\",\n        message: \"Error loading inventory data\"\n      }]);\n    }\n  }, [email, processInventoryData]);\n\n  const fetchAnalyticsData = useCallback(async () => {\n    if (!email) return;\n    try {\n      const token = localStorage.getItem('authToken');\n      if (!token) {\n        throw new Error('Authentication required');\n      }\n\n      // Set dates to current month\n      const today = new Date();\n      const startDate = new Date(today.getFullYear(), today.getMonth(), 1);\n      const endDate = new Date(today.getFullYear(), today.getMonth() + 1, 0);\n\n      const response = await axios.get('https://medicine-inventory-management-backend.onrender.com/api/bills/medicine-sales', {\n        params: {\n          email,\n          startDate: startDate.toISOString().split('T')[0],\n          endDate: endDate.toISOString().split('T')[0],\n          medicineName: '' // Empty string to get all medicines\n        },\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.data && response.data.salesDetails) {\n        const sales = response.data.salesDetails;\n        \n        // Calculate total revenue\n        const totalRevenue = sales.reduce((sum, sale) => \n          sum + (sale.mrp * sale.quantity - sale.discount), 0);\n\n        // Calculate average order value\n        const uniqueInvoices = [...new Set(sales.map(sale => sale.saleInvoiceNumber))];\n        const averageOrderValue = uniqueInvoices.length > 0 ? totalRevenue / uniqueInvoices.length : 0;\n\n        // Get top selling medicines\n        const medicineMap = sales.reduce((acc, sale) => {\n          const key = sale.itemName;\n          if (!acc[key]) acc[key] = 0;\n          acc[key] += sale.quantity;\n          return acc;\n        }, {});\n\n        const topSellingMedicines = Object.entries(medicineMap)\n          .sort(([,a], [,b]) => b - a)\n          .slice(0, 5)\n          .map(([name, quantity]) => ({ name, quantity }));\n\n        setAnalyticsData({\n          totalRevenue,\n          averageOrderValue,\n          topSellingMedicines,\n          salesGrowth: 0 // This would need historical data comparison\n        });\n      }\n    } catch (error) {\n      console.error(\"Error fetching analytics data:\", error);\n      // Set default values when there's an error\n      setAnalyticsData({\n        totalRevenue: 0,\n        averageOrderValue: 0,\n        topSellingMedicines: [],\n        salesGrowth: 0\n      });\n    }\n  }, [email]);\n\n  // Set up axios default headers for JWT\n  useEffect(() => {\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common[\"Authorization\"];\n    }\n  }, []);\n\n  // Socket event handlers\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleInventoryUpdate = (data) => {\n      console.log('Real-time inventory update received:', data);\n      if (data) {\n        setInventoryCount(data.count || 0);\n        if (data.data && Array.isArray(data.data)) {\n          processInventoryData(data.data);\n        }\n      }\n    };\n\n    const handleDashboardUpdate = (data) => {\n      console.log('Real-time dashboard update received:', data);\n      if (data) {\n        setActivityMetrics({\n          dailySales: data.dailySales || \"₹0\",\n          monthlySales: data.monthlySales || \"₹0\",\n          activeCustomers: data.activeCustomers || 0\n        });\n      }\n    };\n\n    // Remove any existing listeners\n    socket.off(SOCKET_EVENTS.INVENTORY_UPDATE);\n    socket.off(SOCKET_EVENTS.DASHBOARD_UPDATE);\n\n    // Add new listeners\n    socket.on(SOCKET_EVENTS.INVENTORY_UPDATE, handleInventoryUpdate);\n    socket.on(SOCKET_EVENTS.DASHBOARD_UPDATE, handleDashboardUpdate);\n\n    // Join user's room\n    const userEmail = fetchUserEmail();\n    if (userEmail) {\n      socket.emit('join', { email: userEmail });\n    }\n\n    // Initial data fetch\n    if (userEmail) {\n      fetchDashboardData();\n      fetchAnalyticsData();\n    }\n\n    return () => {\n      socket.off(SOCKET_EVENTS.INVENTORY_UPDATE, handleInventoryUpdate);\n      socket.off(SOCKET_EVENTS.DASHBOARD_UPDATE, handleDashboardUpdate);\n    };\n  }, [socket, processInventoryData, fetchUserEmail, fetchDashboardData, fetchAnalyticsData]);\n\n  // Add visibility change handler\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === 'visible') {\n        const userEmail = fetchUserEmail();\n        if (userEmail) {\n          fetchDashboardData();\n          fetchAnalyticsData();\n        }\n      }\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [fetchUserEmail, fetchDashboardData, fetchAnalyticsData]);\n\n  // Add location change handler\n  useEffect(() => {\n    const userEmail = fetchUserEmail();\n    if (userEmail) {\n      fetchDashboardData();\n      fetchAnalyticsData();\n    }\n  }, [location.pathname, fetchUserEmail, fetchDashboardData, fetchAnalyticsData]);\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"email\");\n    localStorage.removeItem(\"authToken\");\n    navigate(\"/login\");\n  };\n\n  const handleAlertClick = () => {\n    navigate('/alerts');\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-teal-50 to-indigo-50 p-6 relative overflow-hidden\">\n      {/* Background elements */}\n      <div className=\"absolute -top-32 -right-32 w-64 h-64 bg-teal-200 rounded-full opacity-20 mix-blend-multiply filter blur-xl animate-blob\"></div>\n      <div className=\"absolute -bottom-32 -left-32 w-64 h-64 bg-indigo-200 rounded-full opacity-20 mix-blend-multiply filter blur-xl animate-blob animation-delay-2000\"></div>\n\n      <div className=\"relative z-10 max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-8 p-4 bg-white/80 backdrop-blur-sm rounded-2xl shadow-sm border border-white\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">\n              Welcome back, {email || \"Guest\"}!\n            </h1>\n            <p className=\"text-gray-600\">Pharmacy Management Dashboard</p>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <span \n              onClick={handleAlertClick}\n              className=\"bg-teal-100 text-teal-800 px-3 py-1 rounded-full text-sm cursor-pointer hover:bg-teal-200 transition-colors\"\n            >\n              {notifications.length} Alerts\n            </span>\n            <button \n              onClick={handleLogout}\n              className=\"flex items-center space-x-2 bg-red-500 text-white px-4 py-2 rounded-full shadow-sm hover:bg-red-600 transition-all\"\n            >\n              <span>Logout</span>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M3 3a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1V4a1 1 0 00-1-1H3zm11.707 4.707a1 1 0 00-1.414-1.414L10 9.586 8.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8\">\n          {/* Inventory Health Card */}\n          <div className=\"bg-white/80 backdrop-blur-sm p-6 rounded-2xl shadow-lg border border-white\">\n            <div className=\"flex items-center space-x-4 mb-6\">\n              <div className=\"p-3 bg-teal-100 rounded-xl\">\n                <span className=\"text-3xl text-teal-600\">💊</span>\n              </div>\n              <h2 className=\"text-xl font-bold text-gray-900\">Inventory Health</h2>\n            </div>\n            <div className=\"space-y-4\">\n              <MetricItem \n                label=\"Total Medicines\"\n                value={inventoryCount}\n                icon=\"📦\"\n                color=\"teal\"\n                onClick={() => navigate(\"/inventory\")}\n              />\n              <MetricItem \n                label=\"Low Stock\"\n                value={lowStockCount}\n                icon=\"⚠️\"\n                color=\"amber\"\n                onClick={handleAlertClick}\n              />\n              <MetricItem \n                label=\"Expiring Soon\"\n                value={expiringSoonCount}\n                icon=\"⌛\"\n                color=\"rose\"\n                onClick={handleAlertClick}\n              />\n            </div>\n          </div>\n\n          {/* Smart Bill Advisor (recommendations feature disabled) */}\n          <div className=\"lg:col-span-2 bg-white/80 backdrop-blur-sm p-6 rounded-2xl shadow-lg border border-white\">\n            <div className=\"flex items-center space-x-4 mb-6\">\n              <div className=\"p-3 bg-indigo-100 rounded-xl\">\n                <span className=\"text-3xl text-indigo-600\">📈</span>\n              </div>\n              <h2 className=\"text-xl font-bold text-gray-900\">Smart Bill Advisor</h2>\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <h3 className=\"font-semibold text-gray-800 mb-4\">Purchase Recommendations</h3>\n                <div className=\"p-4 bg-white rounded-xl shadow-sm text-gray-500\">\n                  Recommendations feature unavailable.\n                  </div>\n              </div>\n              <div className=\"space-y-4\">\n                <h3 className=\"font-semibold text-gray-800 mb-4\">Recent Transactions</h3>\n                <div className=\"grid grid-cols-1 gap-4\">\n                  <ActivityItem \n                    title=\"Today's Sales\"\n                    amount={activityMetrics.dailySales}\n                    icon=\"💰\"\n                    color=\"green\"\n                  />\n                  <ActivityItem \n                    title=\"Monthly Revenue\"\n                    amount={activityMetrics.monthlySales}\n                    icon=\"📆\"\n                    color=\"indigo\"\n                  />\n                  <ActivityItem \n                    title=\"Active Customers\"\n                    amount=\"1,242\"\n                    icon=\"👥\"\n                    color=\"purple\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Enhanced Advanced Analytics Section */}\n        <div className=\"bg-white/80 backdrop-blur-sm p-6 rounded-2xl shadow-lg border border-white mb-8\">\n          <div className=\"flex items-center space-x-4 mb-6\">\n            <div className=\"p-3 bg-purple-100 rounded-xl\">\n              <span className=\"text-3xl text-purple-600\">📊</span>\n            </div>\n            <h2 className=\"text-xl font-bold text-gray-900\">Advanced Analytics</h2>\n          </div>\n          \n          {/* Analytics Cards */}\n          {/* <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n            <div className=\"bg-gradient-to-br from-blue-500 to-indigo-600 p-6 rounded-xl text-white\">\n              <h3 className=\"text-lg font-semibold mb-2\">Total Revenue</h3>\n              <p className=\"text-3xl font-bold\">₹{analyticsData.totalRevenue.toFixed(2)}</p>\n              <p className=\"text-sm opacity-80 mt-2\">Last 30 days</p>\n            </div>\n            \n            <div className=\"bg-gradient-to-br from-emerald-500 to-teal-600 p-6 rounded-xl text-white\">\n              <h3 className=\"text-lg font-semibold mb-2\">Avg. Order Value</h3>\n              <p className=\"text-3xl font-bold\">₹{analyticsData.averageOrderValue.toFixed(2)}</p>\n              <p className=\"text-sm opacity-80 mt-2\">Per transaction</p>\n            </div>\n            \n            <div className=\"bg-gradient-to-br from-purple-500 to-pink-600 p-6 rounded-xl text-white\">\n              <h3 className=\"text-lg font-semibold mb-2\">Top Selling</h3>\n              <div className=\"space-y-1\">\n                {analyticsData.topSellingMedicines.slice(0, 3).map((medicine, index) => (\n                  <p key={index} className=\"text-sm\">\n                    {medicine.name}: {medicine.quantity} units\n                  </p>\n                ))}\n              </div>\n            </div>\n            \n            <div className=\"bg-gradient-to-br from-rose-500 to-red-600 p-6 rounded-xl text-white\">\n              <h3 className=\"text-lg font-semibold mb-2\">Growth</h3>\n              <p className=\"text-3xl font-bold\">\n                {analyticsData.salesGrowth >= 0 ? '+' : ''}{analyticsData.salesGrowth}%\n              </p>\n              <p className=\"text-sm opacity-80 mt-2\">vs. last month</p>\n            </div>\n          </div> */}\n\n          {/* Quick Actions */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <ActionButton \n              label=\"Sales Report\"\n              icon=\"💰\"\n              description=\"Daily/Weekly/Monthly sales trends\"\n              onClick={() => navigate(\"/medicine-sales-summary\")}\n              gradient=\"from-green-400 to-blue-400\"\n            />\n            <ActionButton \n              label=\"Inventory Report\"\n              icon=\"📦\"\n              description=\"Stock levels & valuation\"\n              onClick={() => navigate(\"/view-inventory\")}\n              gradient=\"from-teal-400 to-cyan-400\"\n            />\n            <ActionButton \n              label=\"Purchase History\"\n              icon=\"🕰️\"\n              description=\"Detailed purchase records\"\n              onClick={() => navigate(\"/purchase-history\")}\n              gradient=\"from-purple-500 to-pink-500\"\n            />\n            <ActionButton \n              label=\"Generate Bill\"\n              icon=\"🧾\"\n              description=\"Create new purchase/sell/return bills\"\n              onClick={() => navigate(\"/generate-bill\")}\n              gradient=\"from-blue-400 to-purple-400\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Reusable Components\nconst MetricItem = ({ label, value, icon, color, onClick }) => {\n  const colorClasses = {\n    teal: { bg: \"bg-teal-100\", text: \"text-teal-600\" },\n    amber: { bg: \"bg-amber-100\", text: \"text-amber-600\" },\n    rose: { bg: \"bg-rose-100\", text: \"text-rose-600\" }\n  };\n\n  return (\n    <div \n      onClick={onClick}\n      className=\"flex items-center justify-between p-3 bg-white rounded-xl shadow-sm hover:shadow-md transition-all cursor-pointer\"\n    >\n      <div className=\"flex items-center space-x-3\">\n        <span className={`text-2xl ${colorClasses[color].bg} p-2 rounded-lg ${colorClasses[color].text}`}>\n          {icon}\n        </span>\n        <span className=\"text-gray-700\">{label}</span>\n      </div>\n      <span className={`text-xl font-bold ${colorClasses[color].text}`}>{value}</span>\n    </div>\n  );\n};\n\nconst ActivityItem = ({ title, amount, icon, color }) => {\n  const colorClasses = {\n    green: { bg: \"bg-green-50\", text: \"text-green-600\", hover: \"hover:bg-green-100\" },\n    indigo: { bg: \"bg-indigo-50\", text: \"text-indigo-600\", hover: \"hover:bg-indigo-100\" },\n    purple: { bg: \"bg-purple-50\", text: \"text-purple-600\", hover: \"hover:bg-purple-100\" }\n  };\n\n  return (\n    <div className={`p-4 ${colorClasses[color].bg} rounded-xl ${colorClasses[color].hover} transition-colors`}>\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <span className={`text-2xl ${colorClasses[color].text}`}>{icon}</span>\n          <span className=\"text-gray-700\">{title}</span>\n        </div>\n        <span className={`text-lg font-semibold ${colorClasses[color].text}`}>{amount}</span>\n      </div>\n    </div>\n  );\n};\n\nconst ActionButton = ({ label, icon, description, onClick, gradient }) => (\n  <button \n    onClick={onClick}\n    className={`group relative flex flex-col items-center p-6 rounded-xl bg-gradient-to-br ${gradient} \n      hover:shadow-xl transition-all transform hover:scale-[1.02] min-h-[180px] justify-between\n      overflow-hidden`}\n  >\n    <div className=\"absolute inset-0 bg-black/5 transition-all group-hover:bg-black/10\"></div>\n    <div className=\"z-10 w-full\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <span className=\"text-4xl text-white drop-shadow-md\">{icon}</span>\n        <span className=\"text-white/80 text-sm\">View Report →</span>\n      </div>\n      <div className=\"text-left\">\n        <h3 className=\"text-xl font-bold text-white mb-2\">{label}</h3>\n        <p className=\"text-sm text-white/90 leading-tight\">{description}</p>\n      </div>\n    </div>\n  </button>\n);\n\nexport default Dashboard;\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\r\nimport { SearchIcon, RefreshCw, AlertCircle, Package, Calendar, Tag, User, DollarSign, TrendingUp, Shield, Activity } from 'lucide-react';\r\nimport { initializeSocket, disconnectSocket, subscribeToEvent, unsubscribeFromEvent, SOCKET_EVENTS } from \"../utils/socketUtils.js\";\r\n\r\nconst Inventory = () => {\r\n  const [inventory, setInventory] = useState([]);\r\n  const [filteredInventory, setFilteredInventory] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [partyFilter, setPartyFilter] = useState('');\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  const [expiringSoon, setExpiringSoon] = useState([]);\r\n  const [lowStock, setLowStock] = useState([]);\r\n  const [activeFilter, setActiveFilter] = useState('all');\r\n  \r\n  // Ref for socket event callbacks\r\n  const socketCallbacksRef = useRef({});\r\n\r\n  // Process inventory data function for reuse\r\n  const processInventoryData = useCallback((data) => {\r\n    // Process inventory data - ensure party name is properly handled\r\n    const inventoryWithPartyName = data.map(item => ({\r\n      ...item,\r\n      partyName: item.partyName?.trim() || 'Unknown Supplier', // Handle empty party names\r\n      expiryDate: item.expiryDate ? new Date(item.expiryDate) : null\r\n    }));\r\n\r\n    setInventory(inventoryWithPartyName);\r\n    setFilteredInventory(inventoryWithPartyName);\r\n    \r\n    // Find items expiring in the next 30 days\r\n    const thirtyDaysFromNow = new Date();\r\n    thirtyDaysFromNow.setDate(thirtyDaysFromNow.getDate() + 30);\r\n    \r\n    const expiring = inventoryWithPartyName.filter(item => \r\n      item.expiryDate && item.expiryDate <= thirtyDaysFromNow && item.expiryDate >= new Date()\r\n    );\r\n    setExpiringSoon(expiring);\r\n    \r\n    // Find items with low stock (less than 10 units)\r\n    const low = inventoryWithPartyName.filter(item => item.quantity < 10 && item.quantity > 0);\r\n    setLowStock(low);\r\n  }, []);\r\n\r\n  // Set up WebSocket connection\r\n  useEffect(() => {\r\n    const email = localStorage.getItem('email');\r\n    \r\n    if (email) {\r\n      // Initialize socket connection\r\n      initializeSocket({ email });\r\n      \r\n      // Store callbacks in ref\r\n      socketCallbacksRef.current = {\r\n        handleInventoryUpdate: (data) => {\r\n          console.log('Real-time inventory update received:', data);\r\n          if (data && data.data && Array.isArray(data.data)) {\r\n            // Stop refreshing indicator if it was active\r\n            setIsRefreshing(false);\r\n            setLoading(false);\r\n            \r\n            // Process the real-time inventory data\r\n            processInventoryData(data.data);\r\n          }\r\n        }\r\n      };\r\n      \r\n      // Subscribe to inventory updates\r\n      subscribeToEvent(SOCKET_EVENTS.INVENTORY_UPDATE, socketCallbacksRef.current.handleInventoryUpdate);\r\n    }\r\n    \r\n    // Cleanup function\r\n    return () => {\r\n      if (socketCallbacksRef.current) {\r\n        unsubscribeFromEvent(SOCKET_EVENTS.INVENTORY_UPDATE, socketCallbacksRef.current.handleInventoryUpdate);\r\n      }\r\n      disconnectSocket();\r\n    };\r\n  }, [processInventoryData]);\r\n\r\n  const fetchInventory = async () => {\r\n    try {\r\n      setIsRefreshing(true);\r\n      const email = localStorage.getItem('email');\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!email || !token) {\r\n        throw new Error('Authentication required');\r\n      }\r\n\r\n      const response = await fetch(\r\n        `https://medicine-inventory-management-backend.onrender.com/api/inventory?email=${encodeURIComponent(email)}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n      );\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to fetch inventory');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      // Process the inventory data\r\n      processInventoryData(data);\r\n      \r\n      setError(null);\r\n    } catch (error) {\r\n      console.error('Fetch error:', error);\r\n      setError(error.message || 'An unexpected error occurred');\r\n      setInventory([]);\r\n      setFilteredInventory([]);\r\n    } finally {\r\n      setLoading(false);\r\n      setIsRefreshing(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchInventory();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Filter inventory when search term or party filter changes\r\n    if (inventory.length) {\r\n      let filtered = inventory;\r\n      \r\n      // Apply party filter\r\n      if (partyFilter) {\r\n        filtered = filtered.filter(item => \r\n          item.partyName.toLowerCase().includes(partyFilter.toLowerCase())\r\n        );\r\n      }\r\n      \r\n      // Apply search filter\r\n      if (searchTerm) {\r\n        filtered = filtered.filter(item => \r\n          item.itemName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n          item.batch.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n          (item.description && item.description.toLowerCase().includes(searchTerm.toLowerCase()))\r\n        );\r\n      }\r\n      \r\n      // Apply special filters\r\n      if (activeFilter === 'expiring') {\r\n        filtered = filtered.filter(item => expiringSoon.some(exp => exp._id === item._id));\r\n      } else if (activeFilter === 'lowstock') {\r\n        filtered = filtered.filter(item => item.quantity < 10 && item.quantity > 0);\r\n      }\r\n      \r\n      setFilteredInventory(filtered);\r\n    }\r\n  }, [searchTerm, partyFilter, inventory, activeFilter, expiringSoon]);\r\n\r\n  // Get unique party names for filter\r\n  const uniquePartyNames = [...new Set(inventory.map(item => item.partyName))].sort();\r\n\r\n  // Format date accounting for null values\r\n  const formatDate = (dateObj) => {\r\n    if (!dateObj) return 'Not specified';\r\n    return dateObj.toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  // Check if date is within 30 days\r\n  const isExpiringSoon = (dateObj) => {\r\n    if (!dateObj) return false;\r\n    const thirtyDaysFromNow = new Date();\r\n    thirtyDaysFromNow.setDate(thirtyDaysFromNow.getDate() + 30);\r\n    return dateObj <= thirtyDaysFromNow && dateObj >= new Date();\r\n  };\r\n  \r\n  // Calculate total inventory value\r\n  const totalInventoryValue = inventory.reduce((sum, item) => {\r\n    const itemValue = (item.purchaseRate || 0) * (item.quantity || 0);\r\n    return sum + itemValue;\r\n  }, 0);\r\n\r\n  return (\r\n    <div className=\"bg-slate-50 min-h-screen pb-8\">\r\n      {/* Header with gradient */}\r\n      <div className=\"bg-gradient-to-r from-blue-600 via-purple-500 to-indigo-700 py-8 px-6 shadow-lg\">\r\n        <div className=\"container mx-auto\">\r\n          <h1 className=\"text-3xl font-bold text-white\">Medicine Inventory</h1>\r\n          <p className=\"text-blue-100 mt-2 text-lg\">Manage your pharmaceutical stock efficiently</p>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Dashboard Cards */}\r\n      <div className=\"container mx-auto px-4 -mt-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8\">\r\n          <div className=\"bg-white rounded-lg shadow-lg p-5 border-b-4 border-indigo-500 transition-all hover:shadow-xl\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <div>\r\n                <p className=\"text-gray-500 text-sm font-medium\">Total Medicines</p>\r\n                <p className=\"text-3xl font-bold text-gray-800\">{inventory.length}</p>\r\n                <p className=\"text-indigo-500 text-sm mt-1\">Unique products</p>\r\n              </div>\r\n              <div className=\"bg-indigo-100 p-4 rounded-full\">\r\n                <Package className=\"h-8 w-8 text-indigo-600\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white rounded-lg shadow-lg p-5 border-b-4 border-purple-500 transition-all hover:shadow-xl\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <div>\r\n                <p className=\"text-gray-500 text-sm font-medium\">Unique Suppliers</p>\r\n                <p className=\"text-3xl font-bold text-gray-800\">{uniquePartyNames.length}</p>\r\n                <p className=\"text-purple-500 text-sm mt-1\">Registered partners</p>\r\n              </div>\r\n              <div className=\"bg-purple-100 p-4 rounded-full\">\r\n                <User className=\"h-8 w-8 text-purple-600\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white rounded-lg shadow-lg p-5 border-b-4 border-rose-500 transition-all hover:shadow-xl\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <div>\r\n                <p className=\"text-gray-500 text-sm font-medium\">Expiring Soon</p>\r\n                <p className=\"text-3xl font-bold text-gray-800\">{expiringSoon.length}</p>\r\n                <p className=\"text-rose-500 text-sm mt-1\">Within 30 days</p>\r\n              </div>\r\n              <div className=\"bg-rose-100 p-4 rounded-full\">\r\n                <Calendar className=\"h-8 w-8 text-rose-600\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white rounded-lg shadow-lg p-5 border-b-4 border-emerald-500 transition-all hover:shadow-xl\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <div>\r\n                <p className=\"text-gray-500 text-sm font-medium\">Inventory Value</p>\r\n                <p className=\"text-3xl font-bold text-gray-800\">₹{totalInventoryValue.toLocaleString('en-IN')}</p>\r\n                <p className=\"text-emerald-500 text-sm mt-1\">Total investment</p>\r\n              </div>\r\n              <div className=\"bg-emerald-100 p-4 rounded-full\">\r\n                <DollarSign className=\"h-8 w-8 text-emerald-600\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Alert Cards */}\r\n        {(lowStock.length > 0 || expiringSoon.length > 0) && (\r\n          <div className=\"mb-6 grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            {lowStock.length > 0 && (\r\n              <div className=\"bg-amber-50 border-l-4 border-amber-500 p-4 rounded-md shadow\">\r\n                <div className=\"flex\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <AlertCircle className=\"h-5 w-5 text-amber-600\" />\r\n                  </div>\r\n                  <div className=\"ml-3\">\r\n                    <h3 className=\"text-sm font-medium text-amber-800\">Low Stock Alert</h3>\r\n                    <div className=\"mt-2 text-sm text-amber-700\">\r\n                      <p>You have {lowStock.length} items with low inventory levels.</p>\r\n                    </div>\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"-mx-2 -my-1.5 flex\">\r\n                        <button \r\n                          onClick={() => setActiveFilter('lowstock')}\r\n                          className=\"bg-amber-100 px-3 py-1.5 rounded-md text-sm font-medium text-amber-800 hover:bg-amber-200 focus:outline-none\"\r\n                        >\r\n                          View Items\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {expiringSoon.length > 0 && (\r\n              <div className=\"bg-rose-50 border-l-4 border-rose-500 p-4 rounded-md shadow\">\r\n                <div className=\"flex\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <Calendar className=\"h-5 w-5 text-rose-600\" />\r\n                  </div>\r\n                  <div className=\"ml-3\">\r\n                    <h3 className=\"text-sm font-medium text-rose-800\">Expiry Alert</h3>\r\n                    <div className=\"mt-2 text-sm text-rose-700\">\r\n                      <p>You have {expiringSoon.length} medicines expiring within 30 days.</p>\r\n                    </div>\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"-mx-2 -my-1.5 flex\">\r\n                        <button\r\n                          onClick={() => setActiveFilter('expiring')}\r\n                          className=\"bg-rose-100 px-3 py-1.5 rounded-md text-sm font-medium text-rose-800 hover:bg-rose-200 focus:outline-none\"\r\n                        >\r\n                          View Items\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Filter Pills */}\r\n        <div className=\"bg-white rounded-lg shadow-md p-4 mb-6\">\r\n          <div className=\"flex flex-wrap items-center gap-2\">\r\n            <span className=\"text-gray-700 font-medium\">Quick Filters:</span>\r\n            <button \r\n              onClick={() => setActiveFilter('all')}\r\n              className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${\r\n                activeFilter === 'all' \r\n                  ? 'bg-indigo-600 text-white' \r\n                  : 'bg-gray-100 text-gray-800 hover:bg-gray-200'\r\n              }`}\r\n            >\r\n              All Items\r\n            </button>\r\n            <button \r\n              onClick={() => setActiveFilter('lowstock')}\r\n              className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${\r\n                activeFilter === 'lowstock' \r\n                  ? 'bg-amber-500 text-white' \r\n                  : 'bg-amber-50 text-amber-800 hover:bg-amber-100'\r\n              }`}\r\n            >\r\n              Low Stock ({lowStock.length})\r\n            </button>\r\n            <button \r\n              onClick={() => setActiveFilter('expiring')}\r\n              className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${\r\n                activeFilter === 'expiring' \r\n                  ? 'bg-rose-500 text-white' \r\n                  : 'bg-rose-50 text-rose-800 hover:bg-rose-100'\r\n              }`}\r\n            >\r\n              Expiring Soon ({expiringSoon.length})\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Search and Filters */}\r\n        <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <div className=\"relative\">\r\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                <SearchIcon className=\"h-5 w-5 text-gray-400\" />\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search medicines, batch...\"\r\n                className=\"pl-10 pr-4 py-3 block w-full border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500 transition-colors\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <select\r\n                className=\"block w-full border border-gray-300 rounded-lg py-3 px-4 focus:ring-indigo-500 focus:border-indigo-500 transition-colors\"\r\n                value={partyFilter}\r\n                onChange={(e) => setPartyFilter(e.target.value)}\r\n              >\r\n                <option value=\"\">All Suppliers</option>\r\n                {uniquePartyNames.map((name) => (\r\n                  <option key={name} value={name}>\r\n                    {name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end\">\r\n              <button\r\n                onClick={fetchInventory}\r\n                disabled={isRefreshing}\r\n                className=\"flex items-center justify-center px-5 py-3 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors shadow-md\"\r\n              >\r\n                <RefreshCw className={`h-5 w-5 mr-2 ${isRefreshing ? 'animate-spin' : ''}`} />\r\n                Refresh Data\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        {loading ? (\r\n          <div className=\"bg-white rounded-lg shadow-lg p-12 text-center\">\r\n            <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-indigo-600 mx-auto\"></div>\r\n            <p className=\"text-gray-600 mt-6 text-lg\">Loading inventory data...</p>\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"bg-white rounded-lg shadow-md p-6 border-l-4 border-red-500\">\r\n            <div className=\"flex items-center\">\r\n              <AlertCircle className=\"h-6 w-6 text-red-500 mr-3\" />\r\n              <p className=\"text-red-500 font-medium text-lg\">Error: {error}</p>\r\n            </div>\r\n            <p className=\"mt-2 text-gray-600\">Please try refreshing or check your connection.</p>\r\n            <button \r\n              onClick={fetchInventory}\r\n              className=\"mt-4 px-4 py-2 bg-red-100 text-red-700 rounded-md hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors\"\r\n            >\r\n              Try Again\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\r\n            {filteredInventory.length === 0 ? (\r\n              <div className=\"p-12 text-center\">\r\n                <Package className=\"h-16 w-16 text-gray-400 mx-auto mb-6\" />\r\n                <h3 className=\"text-xl font-medium text-gray-900\">No inventory items found</h3>\r\n                <p className=\"mt-2 text-gray-500 text-lg\">\r\n                  {searchTerm || partyFilter || activeFilter !== 'all' ? \r\n                    \"Try adjusting your search filters\" : \r\n                    \"Add items to your inventory to get started\"}\r\n                </p>\r\n                {(searchTerm || partyFilter || activeFilter !== 'all') && (\r\n                  <button\r\n                    onClick={() => {\r\n                      setSearchTerm('');\r\n                      setPartyFilter('');\r\n                      setActiveFilter('all');\r\n                    }}\r\n                    className=\"mt-6 px-4 py-2 bg-indigo-100 text-indigo-700 rounded-md hover:bg-indigo-200 transition-colors\"\r\n                  >\r\n                    Clear Filters\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full divide-y divide-gray-200\">\r\n                  <thead className=\"bg-gray-50\">\r\n                    <tr>\r\n                      {[\r\n                        'Item Name', 'Batch', 'Supplier', 'Expiry Date', 'Pack',\r\n                        'Quantity', 'Purchase Rate', 'MRP', 'GST (%)', 'Description'\r\n                      ].map((header) => (\r\n                        <th key={header} \r\n                            className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider bg-gradient-to-r from-gray-50 to-gray-100\">\r\n                          {header}\r\n                        </th>\r\n                      ))}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {filteredInventory.map((item) => (\r\n                      <tr \r\n                        key={item._id} \r\n                        className={`hover:bg-blue-50 transition-colors ${\r\n                          item.quantity < 10 && item.quantity > 0 ? 'bg-amber-50' : ''\r\n                        } ${isExpiringSoon(item.expiryDate) ? 'bg-rose-50' : ''}`}\r\n                      >\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <div className=\"font-medium text-gray-900\">{item.itemName}</div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <span className=\"text-gray-600 text-sm\">{item.batch}</span>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <span className=\"inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\r\n                            {item.partyName || 'Unknown Supplier'}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <span className={`text-sm ${\r\n                            isExpiringSoon(item.expiryDate) \r\n                              ? 'text-rose-600 font-medium' \r\n                              : 'text-gray-600'\r\n                          }`}>\r\n                            {formatDate(item.expiryDate)}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n                          {item.pack || 'N/A'}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <span className={`inline-flex items-center px-2.5 py-1 rounded-md text-sm font-medium ${\r\n                            item.quantity < 10 && item.quantity > 0 \r\n                              ? 'bg-amber-100 text-amber-800' \r\n                              : item.quantity > 100 \r\n                                ? 'bg-emerald-100 text-emerald-800' \r\n                                : 'bg-gray-100 text-gray-800'\r\n                          }`}>\r\n                            {item.quantity}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n                          ₹{item.purchaseRate?.toFixed(2) || '0.00'}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 font-medium\">\r\n                          ₹{item.mrp?.toFixed(2) || '0.00'}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n                          {item.gstPercentage || 0}%\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n                          {item.description || '-'}\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Pagination and summary info */}\r\n            <div className=\"bg-gray-50 px-6 py-4 flex items-center justify-between border-t border-gray-200\">\r\n              <div className=\"flex items-center text-gray-600 text-sm\">\r\n                <Activity className=\"h-4 w-4 mr-2 text-indigo-500\" />\r\n                Showing <span className=\"font-medium mx-1\">{filteredInventory.length}</span> of{' '}\r\n                <span className=\"font-medium mx-1\">{inventory.length}</span> items\r\n                {activeFilter !== 'all' && (\r\n                  <span className=\"ml-2\">\r\n                    ({activeFilter === 'lowstock' ? 'Low Stock' : 'Expiring Soon'} filter active)\r\n                  </span>\r\n                )}\r\n              </div>\r\n              {activeFilter !== 'all' && (\r\n                <button\r\n                  onClick={() => setActiveFilter('all')}\r\n                  className=\"text-sm text-indigo-600 hover:text-indigo-900\"\r\n                >\r\n                  Show All Items\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inventory;","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst LoadingScreen = () => (\n  <div className=\"fixed inset-0 bg-gradient-to-br from-blue-500/90 to-purple-600/90 backdrop-blur-sm z-50 flex items-center justify-center\">\n    <div className=\"text-center\">\n      <div className=\"inline-block animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-white mb-4\"></div>\n      <h2 className=\"text-white text-xl font-semibold\">Loading Alerts...</h2>\n    </div>\n  </div>\n);\n\nconst AlertCard = ({ alert, onClick }) => {\n  const getAlertStyles = (type) => {\n    switch (type) {\n      case 'danger':\n        return 'bg-red-100 border-red-500 text-red-700';\n      case 'warning':\n        return 'bg-yellow-100 border-yellow-500 text-yellow-700';\n      case 'success':\n        return 'bg-green-100 border-green-500 text-green-700';\n      default:\n        return 'bg-blue-100 border-blue-500 text-blue-700';\n    }\n  };\n\n  const getIcon = (type) => {\n    switch (type) {\n      case 'danger':\n        return '⚠️';\n      case 'warning':\n        return '⚡';\n      case 'success':\n        return '✅';\n      default:\n        return 'ℹ️';\n    }\n  };\n\n  return (\n    <div \n      onClick={onClick}\n      className={`${getAlertStyles(alert.type)} cursor-pointer transform transition-all duration-300 hover:scale-[1.02] \n        border-l-4 p-4 mb-4 rounded-lg shadow-md hover:shadow-lg flex items-center justify-between`}\n    >\n      <div className=\"flex items-center space-x-3\">\n        <span className=\"text-2xl\">{getIcon(alert.type)}</span>\n        <div>\n          <h3 className=\"font-semibold\">{alert.title}</h3>\n          <p className=\"text-sm opacity-90\">{alert.message}</p>\n        </div>\n      </div>\n      <div className=\"text-sm opacity-75\">\n        {alert.time && new Date(alert.time).toLocaleString()}\n      </div>\n    </div>\n  );\n};\n\nconst Alerts = () => {\n  const [alerts, setAlerts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchAlerts = async () => {\n      try {\n        const email = localStorage.getItem('email');\n        if (!email) {\n          navigate('/login');\n          return;\n        }\n\n        // Simulate API call delay\n        await new Promise(resolve => setTimeout(resolve, 1500));\n\n        // Get inventory data for alerts\n        const response = await axios.get(`https://medicine-inventory-management-backend.onrender.com/api/inventory/${email}`);\n        const inventoryData = response.data;\n\n        const currentDate = new Date();\n        const lowStockThreshold = 10;\n        const expiringSoonThreshold = 30;\n\n        // Process inventory data into alerts\n        const newAlerts = [];\n\n        // Low stock alerts\n        inventoryData.forEach(item => {\n          if (item.quantity <= lowStockThreshold) {\n            newAlerts.push({\n              type: 'danger',\n              title: 'Low Stock Alert',\n              message: `${item.itemName} is running low (${item.quantity} units remaining)`,\n              category: 'inventory',\n              time: new Date().toISOString()\n            });\n          }\n        });\n\n        // Expiring items alerts\n        inventoryData.forEach(item => {\n          if (item.expiryDate) {\n            const expirationDate = new Date(item.expiryDate);\n            const daysToExpire = Math.ceil((expirationDate - currentDate) / (1000 * 3600 * 24));\n            \n            if (daysToExpire > 0 && daysToExpire <= expiringSoonThreshold) {\n              newAlerts.push({\n                type: 'warning',\n                title: 'Expiring Soon',\n                message: `${item.itemName} will expire in ${daysToExpire} days`,\n                category: 'expiry',\n                time: new Date().toISOString()\n              });\n            }\n          }\n        });\n\n        setAlerts(newAlerts);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching alerts:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchAlerts();\n  }, [navigate]);\n\n  const handleAlertClick = (alert) => {\n    setLoading(true);\n    // Simulate navigation delay\n    setTimeout(() => {\n      if (alert.category === 'inventory') {\n        navigate('/inventory');\n      } else if (alert.category === 'expiry') {\n        navigate('/inventory?filter=expiring');\n      }\n    }, 800);\n  };\n\n  const filteredAlerts = selectedCategory === 'all' \n    ? alerts \n    : alerts.filter(alert => alert.category === selectedCategory);\n\n  if (loading) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-blue-50 p-6\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-6 mb-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h1 className=\"text-2xl font-bold text-gray-800\">Alert Center</h1>\n            <div className=\"flex space-x-2\">\n              <button \n                onClick={() => setSelectedCategory('all')}\n                className={`px-4 py-2 rounded-lg transition-all ${\n                  selectedCategory === 'all' \n                    ? 'bg-blue-500 text-white' \n                    : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                }`}\n              >\n                All\n              </button>\n              <button \n                onClick={() => setSelectedCategory('inventory')}\n                className={`px-4 py-2 rounded-lg transition-all ${\n                  selectedCategory === 'inventory' \n                    ? 'bg-blue-500 text-white' \n                    : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                }`}\n              >\n                Inventory\n              </button>\n              <button \n                onClick={() => setSelectedCategory('expiry')}\n                className={`px-4 py-2 rounded-lg transition-all ${\n                  selectedCategory === 'expiry' \n                    ? 'bg-blue-500 text-white' \n                    : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                }`}\n              >\n                Expiry\n              </button>\n            </div>\n          </div>\n          <p className=\"text-gray-600\">\n            You have {filteredAlerts.length} active {selectedCategory === 'all' ? '' : selectedCategory} alerts\n          </p>\n        </div>\n\n        {/* Alerts List */}\n        <div className=\"space-y-4\">\n          {filteredAlerts.length > 0 ? (\n            filteredAlerts.map((alert, index) => (\n              <AlertCard \n                key={index} \n                alert={alert} \n                onClick={() => handleAlertClick(alert)}\n              />\n            ))\n          ) : (\n            <div className=\"bg-white rounded-lg shadow-md p-8 text-center\">\n              <span className=\"text-4xl mb-4 block\">🎉</span>\n              <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">\n                No Active Alerts\n              </h3>\n              <p className=\"text-gray-600\">\n                Everything is running smoothly! We'll notify you when something needs attention.\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Alerts; ","import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"https://medicine-inventory-management-backend.onrender.com/api/users/login\",\r\n        formData\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        // Store both token and email in localStorage\r\n        localStorage.setItem('token', response.data.token);\r\n        localStorage.setItem('email', formData.email.toLowerCase()); // Store email in lowercase\r\n        navigate('/dashboard');\r\n      } else {\r\n        setError('Login failed. Please check your credentials.');\r\n      }\r\n    } catch (err) {\r\n      if (err.response && err.response.data && err.response.data.message) {\r\n        setError(err.response.data.message);\r\n      } else {\r\n        setError('Login failed. Please check your credentials.');\r\n      }\r\n      console.error('Login error:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-indigo-50 to-purple-50 flex items-center justify-center p-4\">\r\n      <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md\">\r\n        <h2 className=\"text-3xl font-bold text-indigo-600 mb-6 text-center\">Login</h2>\r\n        {error && (\r\n          <div className=\"mb-4 p-4 bg-red-100 text-red-700 rounded-lg\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n              className=\"w-full rounded-lg border-2 border-indigo-100 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 p-3 transition-colors\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n              className=\"w-full rounded-lg border-2 border-indigo-100 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 p-3 transition-colors\"\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className=\"w-full px-6 py-3 bg-indigo-600 hover:bg-indigo-700 text-white rounded-lg font-semibold transition-colors disabled:bg-gray-400\"\r\n          >\r\n            {loading ? 'Logging in...' : 'Login'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    gstNo: '',\n  });\n\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [verificationStep, setVerificationStep] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    setLoading(true);\n\n    // Basic validation\n    if (formData.password !== formData.confirmPassword) {\n      setError(\"Passwords don't match\");\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const response = await axios.post('https://medicine-inventory-management-backend.onrender.com/api/users/register', formData);\n      setSuccess(response.data.message);\n      setFormData({ name: '', email: '', password: '', confirmPassword: '', gstNo: '' }); // Reset form\n      setVerificationStep(true);\n      \n      // Redirect to login after 3 seconds\n      setTimeout(() => {\n        navigate('/login');\n      }, 3000);\n    } catch (err) {\n      setError(err.response?.data?.message || 'Registration failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Loading overlay component\n  const LoadingOverlay = () => (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white p-8 rounded-lg shadow-xl text-center\">\n        <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n        <p className=\"text-gray-700 text-lg\">Processing your registration...</p>\n      </div>\n    </div>\n  );\n\n  // Verification success component\n  const VerificationSuccess = () => (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white p-8 rounded-lg shadow-xl text-center max-w-md\">\n        <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n          <svg className=\"w-8 h-8 text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\n          </svg>\n        </div>\n        <h3 className=\"text-xl font-bold text-gray-900 mb-2\">Registration Successful!</h3>\n        <p className=\"text-gray-600 mb-4\">Your account has been created successfully.</p>\n        <p className=\"text-gray-500 text-sm\">Redirecting to login page...</p>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 py-12 px-4 sm:px-6 lg:px-8\">\n      {loading && <LoadingOverlay />}\n      {verificationStep && <VerificationSuccess />}\n      \n      <div className=\"max-w-md mx-auto\">\n        <div className=\"text-center mb-8\">\n          <h2 className=\"text-4xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-purple-600\">\n            Create Your Account\n          </h2>\n          <p className=\"mt-2 text-gray-600\">Join our pharmacy management system</p>\n        </div>\n\n        <div className=\"bg-white rounded-2xl shadow-xl p-8 border border-gray-100\">\n          {error && (\n            <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\n              <div className=\"flex\">\n                <div className=\"flex-shrink-0\">\n                  <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                  </svg>\n                </div>\n                <div className=\"ml-3\">\n                  <p className=\"text-sm text-red-700\">{error}</p>\n                </div>\n              </div>\n            </div>\n          )}\n          \n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Full Name</label>\n              <div className=\"mt-1 relative rounded-md shadow-sm\">\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleChange}\n                  className=\"block w-full px-4 py-3 border-2 border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                  placeholder=\"Enter your full name\"\n                  required\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Email Address</label>\n              <div className=\"mt-1 relative rounded-md shadow-sm\">\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  className=\"block w-full px-4 py-3 border-2 border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                  placeholder=\"Enter your email\"\n                  required\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Password</label>\n              <div className=\"mt-1 relative rounded-md shadow-sm\">\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleChange}\n                  className=\"block w-full px-4 py-3 border-2 border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                  placeholder=\"Create a password\"\n                  required\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Confirm Password</label>\n              <div className=\"mt-1 relative rounded-md shadow-sm\">\n                <input\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                  value={formData.confirmPassword}\n                  onChange={handleChange}\n                  className=\"block w-full px-4 py-3 border-2 border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                  placeholder=\"Confirm your password\"\n                  required\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">GST Number</label>\n              <div className=\"mt-1 relative rounded-md shadow-sm\">\n                <input\n                  type=\"text\"\n                  name=\"gstNo\"\n                  value={formData.gstNo}\n                  onChange={handleChange}\n                  className=\"block w-full px-4 py-3 border-2 border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                  placeholder=\"Enter your GST number\"\n                  required\n                />\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                disabled={loading}\n                className=\"w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {loading ? (\n                  <div className=\"flex items-center\">\n                    <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    Creating Account...\n                  </div>\n                ) : (\n                  'Create Account'\n                )}\n              </button>\n            </div>\n          </form>\n\n          <div className=\"mt-6 text-center\">\n            <p className=\"text-sm text-gray-600\">\n              Already have an account?{' '}\n              <button\n                onClick={() => navigate('/login')}\n                className=\"font-medium text-blue-600 hover:text-blue-500 transition-colors duration-200\"\n              >\n                Sign in\n              </button>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaFacebookF, FaTwitter, FaInstagram, FaPills, FaClinicMedical, FaChartLine } from 'react-icons/fa';\r\n\r\nconst Layout = () => {\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen bg-gradient-to-b from-blue-50 to-purple-50\">\r\n      {/* Navbar */}\r\n      <nav className=\"bg-gradient-to-r from-purple-600 to-blue-600 shadow-lg\">\r\n        <div className=\"container mx-auto px-4 py-4\">\r\n          <div className=\"flex flex-wrap justify-between items-center\">\r\n            <Link to=\"/\" className=\"flex items-center space-x-2\">\r\n              <FaPills className=\"text-white text-3xl animate-pulse\" />\r\n              <h1 className=\"text-white text-2xl font-bold font-mono hover:text-purple-200 transition-colors\">\r\n                MedInventory Pro\r\n              </h1>\r\n            </Link>\r\n            \r\n            <div className=\"flex space-x-4 mt-2 sm:mt-0\">\r\n              <Link to=\"/login\">\r\n                <button className=\"bg-white/10 backdrop-blur-sm text-white px-6 py-2 rounded-full \r\n                  hover:bg-white/20 hover:scale-105 transition-all shadow-md hover:shadow-lg\r\n                  font-semibold flex items-center space-x-2\">\r\n                  <span>Login</span>\r\n                </button>\r\n              </Link>\r\n              <Link to=\"/register\">\r\n                <button className=\"bg-pink-500 text-white px-6 py-2 rounded-full \r\n                  hover:bg-pink-600 hover:scale-105 transition-all shadow-md hover:shadow-lg\r\n                  font-semibold flex items-center space-x-2\">\r\n                  <span>Get Started</span>\r\n                  <span className=\"text-lg\">🚀</span>\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      {/* Main content */}\r\n      <main className=\"flex-grow container mx-auto text-center py-16 px-4\">\r\n        <div className=\"max-w-4xl mx-auto mb-16\">\r\n          <h2 className=\"text-5xl font-bold mb-6 bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent\">\r\n            Revolutionizing Pharmacy Management\r\n          </h2>\r\n          <p className=\"text-xl text-gray-700 mb-8 leading-relaxed\">\r\n            Transform your pharmacy operations with our AI-powered inventory solution. \r\n            <span className=\"block mt-2 text-purple-600 font-semibold\">\r\n              Real-time tracking • Automated alerts • Smart analytics\r\n            </span>\r\n          </p>\r\n        </div>\r\n\r\n        {/* Feature Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 px-4\">\r\n          {[\r\n            {\r\n              icon: FaClinicMedical,\r\n              title: \"Smart Inventory\",\r\n              description: \"AI-powered stock predictions and expiration tracking\",\r\n              color: \"from-purple-500 to-blue-500\"\r\n            },\r\n            {\r\n              icon: FaPills,\r\n              title: \"Medicine Tracking\",\r\n              description: \"Batch-level tracking with real-time updates\",\r\n              color: \"from-pink-500 to-orange-500\"\r\n            },\r\n            {\r\n              icon: FaChartLine,\r\n              title: \"Advanced Analytics\",\r\n              description: \"Interactive dashboards & sales insights\",\r\n              color: \"from-teal-400 to-blue-400\"\r\n            }\r\n          ].map((card, index) => (\r\n            <div \r\n              key={index}\r\n              className=\"group bg-white rounded-xl shadow-xl p-6 hover:shadow-2xl transition-all \r\n                        duration-300 hover:-translate-y-2 border-2 border-transparent hover:border-purple-200\"\r\n            >\r\n              <div className={`bg-gradient-to-br ${card.color} w-16 h-16 rounded-xl mb-4 \r\n                             mx-auto flex items-center justify-center text-white text-3xl \r\n                             group-hover:rotate-12 transition-transform`}>\r\n                <card.icon />\r\n              </div>\r\n              <h3 className=\"text-2xl font-bold mb-2 text-gray-800\">{card.title}</h3>\r\n              <p className=\"text-gray-600\">{card.description}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Stats Section */}\r\n        <div className=\"mt-16 grid grid-cols-2 md:grid-cols-4 gap-4 max-w-4xl mx-auto\">\r\n          {[\r\n            { number: \"500+\", label: \"Pharmacies Trust Us\" },\r\n            { number: \"1M+\", label: \"Medicines Tracked\" },\r\n            { number: \"24/7\", label: \"Support\" },\r\n            { number: \"99.9%\", label: \"Accuracy\" }\r\n          ].map((stat, index) => (\r\n            <div \r\n              key={index}\r\n              className=\"bg-white/50 backdrop-blur-sm p-4 rounded-xl border border-purple-100 \r\n                        hover:bg-white hover:shadow-lg transition-all\"\r\n            >\r\n              <div className=\"text-3xl font-bold text-purple-600 mb-1\">{stat.number}</div>\r\n              <div className=\"text-sm text-gray-600 font-medium\">{stat.label}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </main>\r\n\r\n      {/* Footer */}\r\n      <footer className=\"bg-gradient-to-r from-purple-900 to-blue-900 text-white py-8\">\r\n        <div className=\"container mx-auto px-4\">\r\n          <div className=\"flex flex-col md:flex-row justify-between items-center space-y-6 md:space-y-0\">\r\n            <div className=\"text-center md:text-left\">\r\n              <h3 className=\"text-2xl font-bold mb-2\">MedInventory Pro</h3>\r\n              <p className=\"text-gray-300\">© 2023 All rights reserved</p>\r\n            </div>\r\n            \r\n            <div className=\"flex space-x-6\">\r\n              {[\r\n                { href: \"#\", icon: FaFacebookF, color: \"hover:text-blue-400\" },\r\n                { href: \"#\", icon: FaTwitter, color: \"hover:text-cyan-400\" },\r\n                { href: \"#\", icon: FaInstagram, color: \"hover:text-pink-400\" }\r\n              ].map((social, idx) => (\r\n                <a \r\n                  key={idx}\r\n                  href={social.href}\r\n                  className={`text-2xl transition-transform hover:scale-125 ${social.color}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <social.icon />\r\n                </a>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"mt-8 text-center text-gray-300 text-sm\">\r\n            <p>Healthcare powered by technology 💊</p>\r\n            <p className=\"mt-2\">Need help? <a href=\"mailto:support@medinventory.com\" className=\"underline hover:text-white\">Contact us</a></p>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;","// // src/components/ViewInventory.js\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function ViewInventory() {\r\n//   const [inventory, setInventory] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetchInventory();\r\n//   }, []);\r\n\r\n//   const fetchInventory = async () => {\r\n//     try {\r\n//       const response = await axios.get('http://localhost:5000/api/inventory'); // Ensure this endpoint matches your backend\r\n//       setInventory(response.data); // Assuming response.data is an array of inventory items\r\n//     } catch (error) {\r\n//       console.error('Error fetching inventory:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"view-inventory-container\">\r\n//       <h2 className=\"text-lg font-semibold mb-4\">Inventory List</h2>\r\n//       <table className=\"min-w-full bg-white border border-gray-300\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th className=\"border-b p-2\">Item Name</th>\r\n//             <th className=\"border-b p-2\">Quantity</th>\r\n//             <th className=\"border-b p-2\">Purchase Rate</th>\r\n//             <th className=\"border-b p-2\">MRP</th>\r\n//             <th className=\"border-b p-2\">Expiry Date</th>\r\n//             <th className=\"border-b p-2\">Batch</th>\r\n//             <th className=\"border-b p-2\">GST (%)</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {inventory.map((item) => (\r\n//             <tr key={item._id}>\r\n//               <td className=\"border-b p-2\">{item.itemName}</td>\r\n//               <td className=\"border-b p-2\">{item.quantity}</td>\r\n//               <td className=\"border-b p-2\">{item.purchaseRate}</td>\r\n//               <td className=\"border-b p-2\">{item.mrp}</td>\r\n//               <td className=\"border-b p-2\">{new Date(item.expiryDate).toLocaleDateString()}</td>\r\n//               <td className=\"border-b p-2\">{item.batch}</td>\r\n//               <td className=\"border-b p-2\">{item.gstPercentage}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ViewInventory;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function ViewInventory() {\r\n//   const [inventory, setInventory] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetchInventory();\r\n//   }, []);\r\n\r\n//   const fetchInventory = async () => {\r\n//     try {\r\n//       // Get the logged-in user's email from localStorage\r\n//       const email = localStorage.getItem('email');\r\n//       console.log(\"Retrieved email:\", email);  // Check if email is being fetched correctly\r\n//       if (!email) {\r\n//         console.error('No email found in localStorage');\r\n//         return;\r\n//       }\r\n\r\n//       // Use the email directly in the API call\r\n//       const response = await axios.get(`http://localhost:5000/api/inventory/${email}`);\r\n//       console.log(\"Inventory response:\", response.data);  // Check the response data\r\n//       setInventory(response.data); // Assuming response.data is an array of inventory items\r\n//     } catch (error) {\r\n//       console.error('Error fetching inventory:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"view-inventory-container\">\r\n//       <h2 className=\"text-lg font-semibold mb-4\">Inventory List</h2>\r\n//       {console.log(\"Inventory State:\", inventory)}  {/* Check the inventory state */}\r\n//       {inventory.length > 0 ? (\r\n//         <table className=\"min-w-full bg-white border border-gray-300\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th className=\"border-b p-2\">Item Name</th>\r\n//               <th className=\"border-b p-2\">Batch</th>\r\n//               <th className=\"border-b p-2\">Expiry Date</th>\r\n//               <th className=\"border-b p-2\">Pack</th>\r\n//               <th className=\"border-b p-2\">Quantity</th>\r\n//               <th className=\"border-b p-2\">Purchase Rate</th>\r\n//               <th className=\"border-b p-2\">MRP</th>\r\n//               <th className=\"border-b p-2\">GST (%)</th>\r\n//               <th className=\"border-b p-2\">Description</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {inventory.map((item) => (\r\n//               <tr key={item._id}>\r\n//                 <td className=\"border-b p-2\">{item.itemName}</td>\r\n//                 <td className=\"border-b p-2\">{item.batch}</td>\r\n//                 <td className=\"border-b p-2\">{new Date(item.expiryDate).toLocaleDateString()}</td>\r\n//                 <td className=\"border-b p-2\">{item.pack}</td>\r\n//                 <td className=\"border-b p-2\">{item.quantity}</td>\r\n//                 <td className=\"border-b p-2\">{item.purchaseRate}</td>\r\n//                 <td className=\"border-b p-2\">{item.mrp}</td>\r\n//                 <td className=\"border-b p-2\">{item.gstPercentage}</td>\r\n//                 <td className=\"border-b p-2\">{item.description || 'N/A'}</td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       ) : (\r\n//         <p>No inventory items available.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ViewInventory;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { SearchIcon, RefreshCw, AlertCircle, Package, Calendar, Tag, User, DollarSign, TrendingUp, Shield, Activity } from 'lucide-react';\r\n\r\nconst Inventory = () => {\r\n  const [inventory, setInventory] = useState([]);\r\n  const [filteredInventory, setFilteredInventory] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [partyFilter, setPartyFilter] = useState('');\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  const [expiringSoon, setExpiringSoon] = useState([]);\r\n  const [lowStock, setLowStock] = useState([]);\r\n  const [activeFilter, setActiveFilter] = useState('all');\r\n\r\n  const fetchInventory = async () => {\r\n    try {\r\n      setIsRefreshing(true);\r\n      const email = localStorage.getItem('email');\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!email || !token) {\r\n        throw new Error('Authentication required');\r\n      }\r\n\r\n      const response = await fetch(\r\n        `https://medicine-inventory-management-backend.onrender.com/api/inventory?email=${encodeURIComponent(email)}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n      );\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to fetch inventory');\r\n      }\r\n      \r\n      const data = await response.json();\r\n\r\n      // Process inventory data - ensure party name is properly handled\r\n      const inventoryWithPartyName = data.map(item => ({\r\n        ...item,\r\n        partyName: item.partyName?.trim() || 'Unknown Supplier', // Handle empty party names\r\n        expiryDate: item.expiryDate ? new Date(item.expiryDate) : null\r\n      }));\r\n\r\n      setInventory(inventoryWithPartyName);\r\n      setFilteredInventory(inventoryWithPartyName);\r\n      \r\n      // Find items expiring in the next 30 days\r\n      const thirtyDaysFromNow = new Date();\r\n      thirtyDaysFromNow.setDate(thirtyDaysFromNow.getDate() + 30);\r\n      \r\n      const expiring = inventoryWithPartyName.filter(item => \r\n        item.expiryDate && item.expiryDate <= thirtyDaysFromNow && item.expiryDate >= new Date()\r\n      );\r\n      setExpiringSoon(expiring);\r\n      \r\n      // Find items with low stock (less than 10 units)\r\n      const low = inventoryWithPartyName.filter(item => item.quantity < 10 && item.quantity > 0);\r\n      setLowStock(low);\r\n      \r\n      setError(null);\r\n    } catch (error) {\r\n      console.error('Fetch error:', error);\r\n      setError(error.message || 'An unexpected error occurred');\r\n      setInventory([]);\r\n      setFilteredInventory([]);\r\n    } finally {\r\n      setLoading(false);\r\n      setIsRefreshing(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchInventory();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Filter inventory when search term or party filter changes\r\n    if (inventory.length) {\r\n      let filtered = inventory;\r\n      \r\n      // Apply party filter\r\n      if (partyFilter) {\r\n        filtered = filtered.filter(item => \r\n          item.partyName.toLowerCase().includes(partyFilter.toLowerCase())\r\n        );\r\n      }\r\n      \r\n      // Apply search filter\r\n      if (searchTerm) {\r\n        filtered = filtered.filter(item => \r\n          item.itemName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n          item.batch.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n          (item.description && item.description.toLowerCase().includes(searchTerm.toLowerCase()))\r\n        );\r\n      }\r\n      \r\n      // Apply special filters\r\n      if (activeFilter === 'expiring') {\r\n        filtered = filtered.filter(item => expiringSoon.some(exp => exp._id === item._id));\r\n      } else if (activeFilter === 'lowstock') {\r\n        filtered = filtered.filter(item => item.quantity < 10 && item.quantity > 0);\r\n      }\r\n      \r\n      setFilteredInventory(filtered);\r\n    }\r\n  }, [searchTerm, partyFilter, inventory, activeFilter, expiringSoon]);\r\n\r\n  // Get unique party names for filter\r\n  const uniquePartyNames = [...new Set(inventory.map(item => item.partyName))].sort();\r\n\r\n  // Format date accounting for null values\r\n  const formatDate = (dateObj) => {\r\n    if (!dateObj) return 'Not specified';\r\n    return dateObj.toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  // Check if date is within 30 days\r\n  const isExpiringSoon = (dateObj) => {\r\n    if (!dateObj) return false;\r\n    const thirtyDaysFromNow = new Date();\r\n    thirtyDaysFromNow.setDate(thirtyDaysFromNow.getDate() + 30);\r\n    return dateObj <= thirtyDaysFromNow && dateObj >= new Date();\r\n  };\r\n  \r\n  // Calculate total inventory value\r\n  const totalInventoryValue = inventory.reduce((sum, item) => {\r\n    const itemValue = (item.purchaseRate || 0) * (item.quantity || 0);\r\n    return sum + itemValue;\r\n  }, 0);\r\n\r\n  return (\r\n    <div className=\"bg-slate-50 min-h-screen pb-8\">\r\n      {/* Header with gradient */}\r\n      <div className=\"bg-gradient-to-r from-blue-600 via-purple-500 to-indigo-700 py-8 px-6 shadow-lg\">\r\n        <div className=\"container mx-auto\">\r\n          <h1 className=\"text-3xl font-bold text-white\">Medicine Inventory</h1>\r\n          <p className=\"text-blue-100 mt-2 text-lg\">Manage your pharmaceutical stock efficiently</p>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Dashboard Cards */}\r\n      <div className=\"container mx-auto px-4 -mt-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8\">\r\n          <div className=\"bg-white rounded-lg shadow-lg p-5 border-b-4 border-indigo-500 transition-all hover:shadow-xl\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <div>\r\n                <p className=\"text-gray-500 text-sm font-medium\">Total Medicines</p>\r\n                <p className=\"text-3xl font-bold text-gray-800\">{inventory.length}</p>\r\n                <p className=\"text-indigo-500 text-sm mt-1\">Unique products</p>\r\n              </div>\r\n              <div className=\"bg-indigo-100 p-4 rounded-full\">\r\n                <Package className=\"h-8 w-8 text-indigo-600\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white rounded-lg shadow-lg p-5 border-b-4 border-purple-500 transition-all hover:shadow-xl\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <div>\r\n                <p className=\"text-gray-500 text-sm font-medium\">Unique Suppliers</p>\r\n                <p className=\"text-3xl font-bold text-gray-800\">{uniquePartyNames.length}</p>\r\n                <p className=\"text-purple-500 text-sm mt-1\">Registered partners</p>\r\n              </div>\r\n              <div className=\"bg-purple-100 p-4 rounded-full\">\r\n                <User className=\"h-8 w-8 text-purple-600\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white rounded-lg shadow-lg p-5 border-b-4 border-rose-500 transition-all hover:shadow-xl\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <div>\r\n                <p className=\"text-gray-500 text-sm font-medium\">Expiring Soon</p>\r\n                <p className=\"text-3xl font-bold text-gray-800\">{expiringSoon.length}</p>\r\n                <p className=\"text-rose-500 text-sm mt-1\">Within 30 days</p>\r\n              </div>\r\n              <div className=\"bg-rose-100 p-4 rounded-full\">\r\n                <Calendar className=\"h-8 w-8 text-rose-600\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white rounded-lg shadow-lg p-5 border-b-4 border-emerald-500 transition-all hover:shadow-xl\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <div>\r\n                <p className=\"text-gray-500 text-sm font-medium\">Inventory Value</p>\r\n                <p className=\"text-3xl font-bold text-gray-800\">₹{totalInventoryValue.toLocaleString('en-IN')}</p>\r\n                <p className=\"text-emerald-500 text-sm mt-1\">Total investment</p>\r\n              </div>\r\n              <div className=\"bg-emerald-100 p-4 rounded-full\">\r\n                <DollarSign className=\"h-8 w-8 text-emerald-600\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Alert Cards */}\r\n        {(lowStock.length > 0 || expiringSoon.length > 0) && (\r\n          <div className=\"mb-6 grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            {lowStock.length > 0 && (\r\n              <div className=\"bg-amber-50 border-l-4 border-amber-500 p-4 rounded-md shadow\">\r\n                <div className=\"flex\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <AlertCircle className=\"h-5 w-5 text-amber-600\" />\r\n                  </div>\r\n                  <div className=\"ml-3\">\r\n                    <h3 className=\"text-sm font-medium text-amber-800\">Low Stock Alert</h3>\r\n                    <div className=\"mt-2 text-sm text-amber-700\">\r\n                      <p>You have {lowStock.length} items with low inventory levels.</p>\r\n                    </div>\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"-mx-2 -my-1.5 flex\">\r\n                        <button \r\n                          onClick={() => setActiveFilter('lowstock')}\r\n                          className=\"bg-amber-100 px-3 py-1.5 rounded-md text-sm font-medium text-amber-800 hover:bg-amber-200 focus:outline-none\"\r\n                        >\r\n                          View Items\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {expiringSoon.length > 0 && (\r\n              <div className=\"bg-rose-50 border-l-4 border-rose-500 p-4 rounded-md shadow\">\r\n                <div className=\"flex\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <Calendar className=\"h-5 w-5 text-rose-600\" />\r\n                  </div>\r\n                  <div className=\"ml-3\">\r\n                    <h3 className=\"text-sm font-medium text-rose-800\">Expiry Alert</h3>\r\n                    <div className=\"mt-2 text-sm text-rose-700\">\r\n                      <p>You have {expiringSoon.length} medicines expiring within 30 days.</p>\r\n                    </div>\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"-mx-2 -my-1.5 flex\">\r\n                        <button\r\n                          onClick={() => setActiveFilter('expiring')}\r\n                          className=\"bg-rose-100 px-3 py-1.5 rounded-md text-sm font-medium text-rose-800 hover:bg-rose-200 focus:outline-none\"\r\n                        >\r\n                          View Items\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Filter Pills */}\r\n        <div className=\"bg-white rounded-lg shadow-md p-4 mb-6\">\r\n          <div className=\"flex flex-wrap items-center gap-2\">\r\n            <span className=\"text-gray-700 font-medium\">Quick Filters:</span>\r\n            <button \r\n              onClick={() => setActiveFilter('all')}\r\n              className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${\r\n                activeFilter === 'all' \r\n                  ? 'bg-indigo-600 text-white' \r\n                  : 'bg-gray-100 text-gray-800 hover:bg-gray-200'\r\n              }`}\r\n            >\r\n              All Items\r\n            </button>\r\n            <button \r\n              onClick={() => setActiveFilter('lowstock')}\r\n              className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${\r\n                activeFilter === 'lowstock' \r\n                  ? 'bg-amber-500 text-white' \r\n                  : 'bg-amber-50 text-amber-800 hover:bg-amber-100'\r\n              }`}\r\n            >\r\n              Low Stock ({lowStock.length})\r\n            </button>\r\n            <button \r\n              onClick={() => setActiveFilter('expiring')}\r\n              className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${\r\n                activeFilter === 'expiring' \r\n                  ? 'bg-rose-500 text-white' \r\n                  : 'bg-rose-50 text-rose-800 hover:bg-rose-100'\r\n              }`}\r\n            >\r\n              Expiring Soon ({expiringSoon.length})\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Search and Filters */}\r\n        <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <div className=\"relative\">\r\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                <SearchIcon className=\"h-5 w-5 text-gray-400\" />\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search medicines, batch...\"\r\n                className=\"pl-10 pr-4 py-3 block w-full border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500 transition-colors\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <select\r\n                className=\"block w-full border border-gray-300 rounded-lg py-3 px-4 focus:ring-indigo-500 focus:border-indigo-500 transition-colors\"\r\n                value={partyFilter}\r\n                onChange={(e) => setPartyFilter(e.target.value)}\r\n              >\r\n                <option value=\"\">All Suppliers</option>\r\n                {uniquePartyNames.map((name) => (\r\n                  <option key={name} value={name}>\r\n                    {name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end\">\r\n              <button\r\n                onClick={fetchInventory}\r\n                disabled={isRefreshing}\r\n                className=\"flex items-center justify-center px-5 py-3 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors shadow-md\"\r\n              >\r\n                <RefreshCw className={`h-5 w-5 mr-2 ${isRefreshing ? 'animate-spin' : ''}`} />\r\n                Refresh Data\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        {loading ? (\r\n          <div className=\"bg-white rounded-lg shadow-lg p-12 text-center\">\r\n            <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-indigo-600 mx-auto\"></div>\r\n            <p className=\"text-gray-600 mt-6 text-lg\">Loading inventory data...</p>\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"bg-white rounded-lg shadow-md p-6 border-l-4 border-red-500\">\r\n            <div className=\"flex items-center\">\r\n              <AlertCircle className=\"h-6 w-6 text-red-500 mr-3\" />\r\n              <p className=\"text-red-500 font-medium text-lg\">Error: {error}</p>\r\n            </div>\r\n            <p className=\"mt-2 text-gray-600\">Please try refreshing or check your connection.</p>\r\n            <button \r\n              onClick={fetchInventory}\r\n              className=\"mt-4 px-4 py-2 bg-red-100 text-red-700 rounded-md hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors\"\r\n            >\r\n              Try Again\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\r\n            {filteredInventory.length === 0 ? (\r\n              <div className=\"p-12 text-center\">\r\n                <Package className=\"h-16 w-16 text-gray-400 mx-auto mb-6\" />\r\n                <h3 className=\"text-xl font-medium text-gray-900\">No inventory items found</h3>\r\n                <p className=\"mt-2 text-gray-500 text-lg\">\r\n                  {searchTerm || partyFilter || activeFilter !== 'all' ? \r\n                    \"Try adjusting your search filters\" : \r\n                    \"Add items to your inventory to get started\"}\r\n                </p>\r\n                {(searchTerm || partyFilter || activeFilter !== 'all') && (\r\n                  <button\r\n                    onClick={() => {\r\n                      setSearchTerm('');\r\n                      setPartyFilter('');\r\n                      setActiveFilter('all');\r\n                    }}\r\n                    className=\"mt-6 px-4 py-2 bg-indigo-100 text-indigo-700 rounded-md hover:bg-indigo-200 transition-colors\"\r\n                  >\r\n                    Clear Filters\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full divide-y divide-gray-200\">\r\n                  <thead className=\"bg-gray-50\">\r\n                    <tr>\r\n                      {[\r\n                        'Item Name', 'Batch', 'Supplier', 'Expiry Date', 'Pack',\r\n                        'Quantity', 'Purchase Rate', 'MRP', 'GST (%)', 'Description'\r\n                      ].map((header) => (\r\n                        <th key={header} \r\n                            className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider bg-gradient-to-r from-gray-50 to-gray-100\">\r\n                          {header}\r\n                        </th>\r\n                      ))}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {filteredInventory.map((item) => (\r\n                      <tr \r\n                        key={item._id} \r\n                        className={`hover:bg-blue-50 transition-colors ${\r\n                          item.quantity < 10 && item.quantity > 0 ? 'bg-amber-50' : ''\r\n                        } ${isExpiringSoon(item.expiryDate) ? 'bg-rose-50' : ''}`}\r\n                      >\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <div className=\"font-medium text-gray-900\">{item.itemName}</div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <span className=\"text-gray-600 text-sm\">{item.batch}</span>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <span className=\"inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\r\n                            {item.partyName || 'Unknown Supplier'}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <span className={`text-sm ${\r\n                            isExpiringSoon(item.expiryDate) \r\n                              ? 'text-rose-600 font-medium' \r\n                              : 'text-gray-600'\r\n                          }`}>\r\n                            {formatDate(item.expiryDate)}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n                          {item.pack || 'N/A'}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <span className={`inline-flex items-center px-2.5 py-1 rounded-md text-sm font-medium ${\r\n                            item.quantity < 10 && item.quantity > 0 \r\n                              ? 'bg-amber-100 text-amber-800' \r\n                              : item.quantity > 100 \r\n                                ? 'bg-emerald-100 text-emerald-800' \r\n                                : 'bg-gray-100 text-gray-800'\r\n                          }`}>\r\n                            {item.quantity}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n                          ₹{item.purchaseRate?.toFixed(2) || '0.00'}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 font-medium\">\r\n                          ₹{item.mrp?.toFixed(2) || '0.00'}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n                          {item.gstPercentage || 0}%\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n                          {item.description || '-'}\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Pagination and summary info */}\r\n            <div className=\"bg-gray-50 px-6 py-4 flex items-center justify-between border-t border-gray-200\">\r\n              <div className=\"flex items-center text-gray-600 text-sm\">\r\n                <Activity className=\"h-4 w-4 mr-2 text-indigo-500\" />\r\n                Showing <span className=\"font-medium mx-1\">{filteredInventory.length}</span> of{' '}\r\n                <span className=\"font-medium mx-1\">{inventory.length}</span> items\r\n                {activeFilter !== 'all' && (\r\n                  <span className=\"ml-2\">\r\n                    ({activeFilter === 'lowstock' ? 'Low Stock' : 'Expiring Soon'} filter active)\r\n                  </span>\r\n                )}\r\n              </div>\r\n              {activeFilter !== 'all' && (\r\n                <button\r\n                  onClick={() => setActiveFilter('all')}\r\n                  className=\"text-sm text-indigo-600 hover:text-indigo-900\"\r\n                >\r\n                  Show All Items\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inventory;","// import React from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// function GenerateBillOptions() {\r\n//   console.log('Rendering GenerateBillOptions'); // Ensure this logs\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   return (\r\n//     <div className=\"bill-options-container\">\r\n//       <h2 className=\"text-center text-lg font-bold mb-6\">Select Bill Type</h2>\r\n//       <div className=\"flex flex-col items-center space-y-4\">\r\n//         <button\r\n//           onClick={() => navigate('/purchase-bill')}\r\n//           className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n//         >\r\n//           Purchase Bill\r\n//         </button>\r\n//         <button\r\n//           onClick={() => navigate('/sell-bill')}\r\n//           className=\"bg-green-500 text-white px-4 py-2 rounded\"\r\n//         >\r\n//           Sell Bill\r\n//         </button>\r\n//         <button\r\n//           onClick={() => navigate('/return-bill')}\r\n//           className=\"bg-yellow-500 text-white px-4 py-2 rounded\"\r\n//         >\r\n//           Return Bill\r\n//         </button>\r\n//         <button\r\n//           onClick={() => navigate('/expiry-bill')}\r\n//           className=\"bg-red-500 text-white px-4 py-2 rounded\"\r\n//         >\r\n//           Expiry Bill\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default GenerateBillOptions;\r\n\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction GenerateBillOptions() {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 flex flex-col items-center justify-center p-8 relative overflow-hidden\">\r\n      {/* Decorative Elements */}\r\n      <div className=\"absolute -top-32 -right-32 w-64 h-64 bg-purple-200 rounded-full opacity-20 mix-blend-multiply filter blur-xl animate-blob\"></div>\r\n      <div className=\"absolute -bottom-32 -left-32 w-64 h-64 bg-blue-200 rounded-full opacity-20 mix-blend-multiply filter blur-xl animate-blob animation-delay-2000\"></div>\r\n      \r\n      {/* Main Content */}\r\n      <div className=\"relative z-10 max-w-4xl w-full\">\r\n        {/* Header Section */}\r\n        <div className=\"text-center mb-12 space-y-6\">\r\n          <h2 className=\"text-5xl font-bold text-gray-900 mb-4 bg-clip-text bg-gradient-to-r from-blue-600 to-purple-600\">\r\n            Smart Bill Generation\r\n          </h2>\r\n          <p className=\"text-xl text-gray-700 leading-relaxed\">\r\n            Streamline your pharmacy's financial operations with our intuitive bill management system. \r\n            Select a bill type below to maintain perfect records and optimize your inventory flow.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Bill Type Grid */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-16\">\r\n          <CardButton\r\n            title=\"Purchase Bill\"\r\n            subtitle=\"Record incoming stock\"\r\n            gradient=\"from-teal-500 to-cyan-600\"\r\n            icon=\"📥\"\r\n            onClick={() => navigate('/purchase-bill')}\r\n          />\r\n          <CardButton\r\n            title=\"Sell Bill\"\r\n            subtitle=\"Track customer sales\"\r\n            gradient=\"from-indigo-500 to-blue-600\"\r\n            icon=\"💰\"\r\n            onClick={() => navigate('/sell-bill')}\r\n          />\r\n          <CardButton\r\n            title=\"Return Bill\"\r\n            subtitle=\"Manage product returns\"\r\n            gradient=\"from-purple-500 to-fuchsia-600\"\r\n            icon=\"🔄\"\r\n            onClick={() => navigate('/return-bill')}\r\n          />\r\n          <CardButton\r\n            title=\"Expiry Bill\"\r\n            subtitle=\"Handle expired stock\"\r\n            gradient=\"from-rose-500 to-pink-600\"\r\n            icon=\"⚠️\"\r\n            onClick={() => navigate('/expiry-bill')}\r\n          />\r\n        </div>\r\n\r\n        {/* Support Section */}\r\n        <div className=\"text-center bg-white/80 backdrop-blur-sm p-8 rounded-2xl shadow-lg border border-white\">\r\n          <h3 className=\"text-2xl font-semibold text-gray-900 mb-4\">Need Assistance?</h3>\r\n          <p className=\"text-gray-700 mb-6\">\r\n            Our support team is ready to help you optimize your billing processes.\r\n          </p>\r\n          <div className=\"flex justify-center space-x-4\">\r\n            <button className=\"px-6 py-2 bg-gray-900 text-white rounded-full hover:bg-gray-800 transition-all\">\r\n              Contact Support\r\n            </button>\r\n            <button \r\n  className=\"px-6 py-2 border-2 border-gray-300 text-gray-700 rounded-full hover:border-gray-400 transition-all\"\r\n  onClick={() => navigate('/documentation/bill-generation')}\r\n>\r\n  Documentation\r\n</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Reusable Card Button Component\r\nconst CardButton = ({ title, subtitle, gradient, icon, onClick }) => (\r\n  <button\r\n    onClick={onClick}\r\n    className={`group bg-gradient-to-br ${gradient} text-white p-6 rounded-xl shadow-xl transform transition-all duration-300 hover:-translate-y-2 hover:shadow-2xl active:scale-95`}\r\n  >\r\n    <div className=\"flex items-start space-x-4\">\r\n      <span className=\"text-4xl bg-white/20 p-4 rounded-lg\">{icon}</span>\r\n      <div className=\"text-left\">\r\n        <h3 className=\"text-2xl font-bold mb-2\">{title}</h3>\r\n        <p className=\"text-white/90\">{subtitle}</p>\r\n      </div>\r\n    </div>\r\n  </button>\r\n);\r\n\r\nexport default GenerateBillOptions;","import React, { useState, useEffect } from \"react\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { useSocket } from '../context/SocketContext';\nimport { useNavigate } from 'react-router-dom';\nimport { SOCKET_EVENTS } from '../utils/socketUtils';\n\nconst PurchaseBillForm = () => {\n  const socket = useSocket();\n  const navigate = useNavigate();\n  const [items, setItems] = useState([\n    {\n      itemName: \"\",\n      batch: \"\",\n      expiryDate: \"\",\n      pack: \"\",\n      quantity: \"\",\n      purchaseRate: \"\",\n      mrp: \"\",\n      gstPercentage: \"\",\n      discount: \"\",\n      totalAmount: \"\",\n      discountAmount: \"\",\n      gstAmount: \"\",\n      netAmount: \"\"\n    },\n  ]);\n\n  const [purchaseDetails, setPurchaseDetails] = useState({\n    supplierInvoiceNumber: \"\",\n    receiptNumber: \"\",\n    partyName: \"\",\n    date: \"\",\n  });\n\n  const [message, setMessage] = useState(\"\");\n\n  // Add socket event listener for inventory updates\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleInventoryUpdate = (data) => {\n      console.log('Inventory update received in purchase form:', data);\n      // Clear success message after 3 seconds\n      if (message.includes(\"successfully\")) {\n        setTimeout(() => {\n          setMessage(\"\");\n        }, 3000);\n      }\n    };\n\n    socket.on(SOCKET_EVENTS.INVENTORY_UPDATE, handleInventoryUpdate);\n\n    return () => {\n      socket.off(SOCKET_EVENTS.INVENTORY_UPDATE, handleInventoryUpdate);\n    };\n  }, [socket, message]);\n\n  const calculateItemAmounts = (item) => {\n    const quantity = parseFloat(item.quantity || 0);\n    const purchaseRate = parseFloat(item.purchaseRate || 0);\n    const discount = parseFloat(item.discount || 0);\n    const gstPercentage = parseFloat(item.gstPercentage || 0);\n\n    // Calculate total amount\n    const totalAmount = quantity * purchaseRate;\n    \n    // Calculate discount amount\n    const discountAmount = (totalAmount * discount) / 100;\n    \n    // Calculate amount after discount\n    const amountAfterDiscount = totalAmount - discountAmount;\n    \n    // Calculate GST amount\n    const gstAmount = (amountAfterDiscount * gstPercentage) / 100;\n    \n    // Calculate net amount\n    const netAmount = amountAfterDiscount + gstAmount;\n\n    return {\n      totalAmount: totalAmount.toFixed(2),\n      discountAmount: discountAmount.toFixed(2),\n      gstAmount: gstAmount.toFixed(2),\n      netAmount: netAmount.toFixed(2)\n    };\n  };\n\n  const handleItemChange = (index, event) => {\n    const { name, value } = event.target;\n    const updatedItems = [...items];\n    updatedItems[index][name] = value;\n\n    // Calculate amounts when relevant fields change\n    if (['quantity', 'purchaseRate', 'discount', 'gstPercentage'].includes(name)) {\n      const calculatedAmounts = calculateItemAmounts(updatedItems[index]);\n      updatedItems[index] = {\n        ...updatedItems[index],\n        ...calculatedAmounts\n      };\n    }\n\n    setItems(updatedItems);\n  };\n\n  const handleDetailsChange = (event) => {\n    const { name, value } = event.target;\n    setPurchaseDetails({ ...purchaseDetails, [name]: value });\n  };\n\n  const addItem = () => {\n    setItems([\n      ...items,\n      {\n        itemName: \"\",\n        batch: \"\",\n        expiryDate: \"\",\n        pack: \"\",\n        quantity: \"\",\n        purchaseRate: \"\",\n        mrp: \"\",\n        gstPercentage: \"\",\n        discount: \"\",\n        totalAmount: \"\",\n        discountAmount: \"\",\n        gstAmount: \"\",\n        netAmount: \"\"\n      },\n    ]);\n  };\n\n  const generatePDF = () => {\n    const doc = new jsPDF();\n    doc.setFontSize(16);\n    doc.text(\"Purchase Bill\", 14, 15);\n\n    // Add purchase details\n    doc.setFontSize(10);\n    doc.text(`Supplier Invoice: ${purchaseDetails.supplierInvoiceNumber}`, 14, 25);\n    doc.text(`Receipt Number: ${purchaseDetails.receiptNumber}`, 14, 30);\n    doc.text(`Party Name: ${purchaseDetails.partyName}`, 14, 35);\n    doc.text(`Date: ${purchaseDetails.date}`, 14, 40);\n\n    // Table headers\n    const headers = [\n      \"Item Name\",\n      \"Batch\",\n      \"Quantity\",\n      \"Rate\",\n      \"Total\",\n      \"Discount\",\n      \"GST\",\n      \"Net Amount\"\n    ];\n\n    // Table data\n    const tableData = items.map(item => [\n      item.itemName,\n      item.batch,\n      item.quantity,\n      item.purchaseRate,\n      item.totalAmount,\n      item.discountAmount,\n      item.gstAmount,\n      item.netAmount\n    ]);\n\n    // Add totals row\n    const totals = {\n      totalAmount: items.reduce((sum, item) => sum + parseFloat(item.totalAmount || 0), 0).toFixed(2),\n      discountAmount: items.reduce((sum, item) => sum + parseFloat(item.discountAmount || 0), 0).toFixed(2),\n      gstAmount: items.reduce((sum, item) => sum + parseFloat(item.gstAmount || 0), 0).toFixed(2),\n      netAmount: items.reduce((sum, item) => sum + parseFloat(item.netAmount || 0), 0).toFixed(2)\n    };\n\n    tableData.push(['', '', '', 'Total:', totals.totalAmount, totals.discountAmount, totals.gstAmount, totals.netAmount]);\n\n    // Add table\n    doc.autoTable({\n      startY: 45,\n      head: [headers],\n      body: tableData,\n      theme: 'grid',\n      headStyles: { fillColor: [41, 128, 185] },\n      styles: { fontSize: 8 }\n    });\n\n    doc.save(\"PurchaseBill.pdf\");\n  };\n\n  const createPurchaseBill = async () => {\n    const email = localStorage.getItem(\"email\");\n    const token = localStorage.getItem(\"token\");\n\n    if (!email || !token) {\n      setMessage(\"User is not authenticated. Please log in again.\");\n      return;\n    }\n\n    const purchaseAmount = items.reduce(\n      (sum, item) => sum + parseFloat(item.totalAmount || 0),\n      0\n    );\n    const totalAmount = purchaseAmount;\n    const discountAmount = items.reduce(\n      (sum, item) => sum + parseFloat(item.discountAmount || 0),\n      0\n    );\n    const gstAmount = items.reduce(\n      (sum, item) => sum + parseFloat(item.gstAmount || 0),\n      0\n    );\n    const netAmount = items.reduce(\n      (sum, item) => sum + parseFloat(item.netAmount || 0),\n      0\n    );\n\n    const body = {\n      ...purchaseDetails,\n      purchaseAmount,\n      totalAmount,\n      discountAmount,\n      gstAmount,\n      netAmount,\n      email,\n      items: items.map((item) => ({\n        ...item,\n        quantity: parseFloat(item.quantity || 0),\n        purchaseRate: parseFloat(item.purchaseRate || 0),\n        discount: parseFloat(item.discount || 0),\n        gstPercentage: parseFloat(item.gstPercentage || 0),\n        totalAmount: parseFloat(item.totalAmount || 0),\n        discountAmount: parseFloat(item.discountAmount || 0),\n        gstAmount: parseFloat(item.gstAmount || 0),\n        netAmount: parseFloat(item.netAmount || 0)\n      })),\n    };\n\n    try {\n      const response = await fetch(\"https://medicine-inventory-management-backend.onrender.com/api/bills/purchase\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`,\n        },\n        body: JSON.stringify(body),\n      });\n\n      if (response.ok) {\n        setMessage(\"Purchase bill created and inventory updated successfully!\");\n        generatePDF();\n        \n        // Emit purchase bill created event\n        if (socket) {\n          socket.emit('purchase_bill_created', {\n            email,\n            items: body.items,\n            timestamp: new Date().toISOString()\n          });\n        }\n\n        // Clear form\n        setItems([{\n          itemName: \"\",\n          batch: \"\",\n          expiryDate: \"\",\n          pack: \"\",\n          quantity: \"\",\n          purchaseRate: \"\",\n          mrp: \"\",\n          gstPercentage: \"\",\n          discount: \"\",\n          totalAmount: \"\",\n          discountAmount: \"\",\n          gstAmount: \"\",\n          netAmount: \"\"\n        }]);\n        setPurchaseDetails({\n          supplierInvoiceNumber: \"\",\n          receiptNumber: \"\",\n          partyName: \"\",\n          date: \"\",\n        });\n\n        // Clear success message after 3 seconds\n        setTimeout(() => {\n          setMessage(\"\");\n        }, 3000);\n      } else {\n        const errorData = await response.json();\n        setMessage(\n          `Failed to create purchase bill: ${errorData.message || \"Unknown error\"}`\n        );\n      }\n    } catch (error) {\n      setMessage(`Error occurred while creating the purchase bill: ${error.message}`);\n    }\n  };\n\n  // Calculate totals\n  const totals = {\n    totalAmount: items.reduce((sum, item) => sum + parseFloat(item.totalAmount || 0), 0).toFixed(2),\n    discountAmount: items.reduce((sum, item) => sum + parseFloat(item.discountAmount || 0), 0).toFixed(2),\n    gstAmount: items.reduce((sum, item) => sum + parseFloat(item.gstAmount || 0), 0).toFixed(2),\n    netAmount: items.reduce((sum, item) => sum + parseFloat(item.netAmount || 0), 0).toFixed(2)\n  };\n\n  return (\n    <div className=\"container mx-auto p-8 bg-gradient-to-r from-blue-50 via-white to-blue-50 shadow-2xl rounded-xl\">\n      <h2 className=\"text-4xl font-bold text-center text-blue-600 mb-10\">\n        Create Purchase Bill\n      </h2>\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-6 mb-10\">\n        <input\n          type=\"text\"\n          name=\"supplierInvoiceNumber\"\n          placeholder=\"Supplier Invoice Number\"\n          value={purchaseDetails.supplierInvoiceNumber}\n          onChange={handleDetailsChange}\n          className=\"border border-gray-300 p-4 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400 shadow-md\"\n        />\n        <input\n          type=\"text\"\n          name=\"receiptNumber\"\n          placeholder=\"Receipt Number\"\n          value={purchaseDetails.receiptNumber}\n          onChange={handleDetailsChange}\n          className=\"border border-gray-300 p-4 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400 shadow-md\"\n        />\n        <input\n          type=\"text\"\n          name=\"partyName\"\n          placeholder=\"Party Name\"\n          value={purchaseDetails.partyName}\n          onChange={handleDetailsChange}\n          className=\"border border-gray-300 p-4 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400 shadow-md\"\n        />\n        <input\n          type=\"date\"\n          name=\"date\"\n          value={purchaseDetails.date}\n          onChange={handleDetailsChange}\n          className=\"border border-gray-300 p-4 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400 shadow-md\"\n        />\n      </div>\n\n      <div className=\"overflow-auto mb-10\">\n        <table className=\"table-auto w-full text-sm shadow-lg border-collapse border border-gray-200\">\n          <thead className=\"bg-blue-100 text-blue-600\">\n            <tr>\n              {[\n                \"Item Name\",\n                \"Batch\",\n                \"Expiry Date\",\n                \"Pack\",\n                \"Quantity\",\n                \"Purchase Rate\",\n                \"MRP\",\n                \"GST (%)\",\n                \"Discount (%)\",\n                \"Total Amount\",\n                \"Discount Amount\",\n                \"GST Amount\",\n                \"Net Amount\"\n              ].map((header, index) => (\n                <th\n                  key={index}\n                  className=\"border border-gray-300 p-3 text-left font-semibold\"\n                >\n                  {header}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {items.map((item, rowIndex) => (\n              <tr key={rowIndex} className=\"bg-white hover:bg-gray-100\">\n                {Object.keys(item).map((field, colIndex) => (\n                  <td key={colIndex} className=\"border border-gray-300 p-3\">\n                    <input\n                      type={\n                        [\"quantity\", \"purchaseRate\", \"mrp\", \"gstPercentage\", \"discount\", \n                         \"totalAmount\", \"discountAmount\", \"gstAmount\", \"netAmount\"].includes(field)\n                          ? \"number\"\n                          : field === \"expiryDate\"\n                          ? \"date\"\n                          : \"text\"\n                      }\n                      name={field}\n                      value={item[field]}\n                      onChange={(e) => handleItemChange(rowIndex, e)}\n                      placeholder={field}\n                      className=\"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                      readOnly={[\"totalAmount\", \"discountAmount\", \"gstAmount\", \"netAmount\"].includes(field)}\n                    />\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n          <tfoot className=\"bg-blue-50\">\n            <tr>\n              <td colSpan=\"9\" className=\"border border-gray-300 p-3 text-right font-bold text-blue-600\">\n                Totals:\n              </td>\n              <td className=\"border border-gray-300 p-3 text-right font-bold text-blue-600\">\n                {totals.totalAmount}\n              </td>\n              <td className=\"border border-gray-300 p-3 text-right font-bold text-blue-600\">\n                {totals.discountAmount}\n              </td>\n              <td className=\"border border-gray-300 p-3 text-right font-bold text-blue-600\">\n                {totals.gstAmount}\n              </td>\n              <td className=\"border border-gray-300 p-3 text-right font-bold text-blue-600\">\n                {totals.netAmount}\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n\n      <div className=\"flex justify-between gap-6\">\n        <button\n          onClick={addItem}\n          className=\"bg-blue-500 text-white font-semibold py-3 px-6 rounded-lg hover:bg-blue-600 transition-shadow shadow-md\"\n        >\n          Add Item\n        </button>\n        <button\n          onClick={createPurchaseBill}\n          className=\"bg-green-500 text-white font-semibold py-3 px-6 rounded-lg hover:bg-green-600 transition-shadow shadow-md\"\n        >\n          Create Purchase Bill\n        </button>\n      </div>\n\n      {message && (\n        <p\n          className={`mt-6 text-center font-semibold py-3 px-6 rounded-lg ${\n            message.includes(\"successfully\")\n              ? \"bg-green-100 text-green-700\"\n              : \"bg-red-100 text-red-700\"\n          }`}\n        >\n          {message}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default PurchaseBillForm;","import React, { useState, useEffect, useCallback, useReducer } from \"react\";\nimport jsPDF from \"jspdf\";\n\n// Custom hook for managing items\nconst useItems = (initialGstNumber) => {\n  // Initial state\n  const initialState = [\n    {\n      itemName: \"\",\n      batch: \"\",\n      batchOptions: [],\n      availableQuantity: 0,\n      quantity: \"\",\n      mrp: \"\",\n      discount: \"\",\n      amount: \"\",\n      gstNo: initialGstNumber,\n      gstPercentage: \"0\"\n    }\n  ];\n\n  // Reducer for items state\n  const itemsReducer = (state, action) => {\n    switch (action.type) {\n      case 'UPDATE_ITEM':\n        return state.map((item, index) => \n          index === action.index ? { ...item, ...action.payload } : item\n        );\n      \n      case 'ADD_ITEM':\n        return [\n          ...state,\n          {\n            itemName: \"\",\n            batch: \"\",\n            batchOptions: [],\n            availableQuantity: 0,\n            quantity: \"\",\n            mrp: \"\",\n            discount: \"\",\n            amount: \"\",\n            gstNo: initialGstNumber,\n            gstPercentage: \"0\"\n          }\n        ];\n      \n      case 'RESET_ITEMS':\n        return [{\n          itemName: \"\",\n          batch: \"\",\n          batchOptions: [],\n          availableQuantity: 0,\n          quantity: \"\",\n          mrp: \"\",\n          discount: \"\",\n          amount: \"\",\n          gstNo: initialGstNumber,\n          gstPercentage: \"0\"\n        }];\n      \n      case 'UPDATE_ALL_GST':\n        return state.map(item => ({\n          ...item,\n          gstNo: action.payload\n        }));\n      \n      default:\n        return state;\n    }\n  };\n\n  const [items, dispatch] = useReducer(itemsReducer, initialState);\n\n  // Update all items' GST number when it changes\n  useEffect(() => {\n    dispatch({ type: 'UPDATE_ALL_GST', payload: initialGstNumber });\n  }, [initialGstNumber]);\n\n  // Helper functions\n  const updateItem = (index, payload) => {\n    dispatch({ type: 'UPDATE_ITEM', index, payload });\n  };\n\n  const addItem = () => {\n    dispatch({ type: 'ADD_ITEM' });\n  };\n\n  const resetItems = () => {\n    dispatch({ type: 'RESET_ITEMS' });\n  };\n\n  return { items, updateItem, addItem, resetItems };\n};\n\nconst SellBillForm = () => {\n  const [sellDetails, setSellDetails] = useState({\n    saleInvoiceNumber: \"\",\n    date: new Date().toISOString().split(\"T\")[0],\n    receiptNumber: \"\",\n    partyName: \"\",\n    email: \"\",\n    gstNumber: \"\",\n  });\n\n  // Remove the lastInvoiceNumber state since we'll get it from the server\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchLoading, setSearchLoading] = useState(false);\n  const [showAutocomplete, setShowAutocomplete] = useState(false);\n  const [activeItemIndex, setActiveItemIndex] = useState(null);\n\n  // Use the custom hook for items management\n  const { items, updateItem, addItem, resetItems } = useItems(sellDetails.gstNumber);\n\n  // Fetch the next invoice number when component mounts\n  useEffect(() => {\n    const fetchNextInvoiceNumber = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const email = localStorage.getItem('email');\n        \n        console.log('Fetching next invoice number with token:', token);\n        console.log('User email:', email);\n        \n        const response = await fetch('https://medicine-inventory-management-backend.onrender.com/api/bills/next-invoice-number', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({ email })\n        });\n\n        console.log('Response status:', response.status);\n        const data = await response.json();\n        console.log('Response data:', data);\n\n        if (!response.ok) {\n          throw new Error(data.message || 'Failed to fetch next invoice number');\n        }\n\n        setSellDetails(prev => ({\n          ...prev,\n          saleInvoiceNumber: data.invoiceNumber,\n          date: new Date().toISOString().split(\"T\")[0],\n          receiptNumber: \"\",\n          partyName: \"\",\n          email: \"\",\n          gstNumber: \"\",\n        }));\n      } catch (error) {\n        console.error('Error fetching next invoice number:', error);\n        setMessage(error.message);\n        setSellDetails(prev => ({\n          ...prev,\n          saleInvoiceNumber: \"INV001\",\n          date: new Date().toISOString().split(\"T\")[0],\n          receiptNumber: \"\",\n          partyName: \"\",\n          email: \"\",\n          gstNumber: \"\",\n        }));\n      }\n    };\n\n    fetchNextInvoiceNumber();\n  }, []);\n\n  // Function to generate next invoice number\n  const generateNextInvoiceNumber = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const email = localStorage.getItem(\"email\");\n      \n      console.log(\"Generating next invoice number with:\", { token, email });\n      \n      const response = await fetch(\"https://medicine-inventory-management-backend.onrender.com/api/bills/next-invoice-number\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ email })\n      });\n      \n      console.log(\"Response status:\", response.status);\n      const responseData = await response.json();\n      console.log(\"Response data:\", responseData);\n      \n      if (response.ok) {\n        return responseData.invoiceNumber;\n      } else {\n        setMessage(`Error generating next invoice number: ${responseData.message || 'Unknown error'}`);\n        return null;\n      }\n    } catch (error) {\n      console.error(\"Error in generateNextInvoiceNumber:\", error);\n      setMessage(`Error generating next invoice number: ${error.message}`);\n      return null;\n    }\n  };\n\n  // Reset function to also handle invoice number generation\n  const resetForm = async () => {\n    const nextInvoiceNumber = await generateNextInvoiceNumber();\n    if (nextInvoiceNumber) {\n      setSellDetails(prev => ({\n        ...prev,\n        saleInvoiceNumber: nextInvoiceNumber,\n        receiptNumber: \"\",\n        partyName: \"\",\n        email: \"\",\n        gstNumber: \"\",\n        date: new Date().toISOString().split(\"T\")[0],\n      }));\n    }\n  };\n\n  // Debounce function\n  const debounce = (func, delay) => {\n    let timeoutId;\n    return (...args) => {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => func(...args), delay);\n    };\n  };\n\n  // Fetch inventory data with debounce\n  // Replace the existing fetchInventoryData function with this updated version\nconst fetchInventoryData = useCallback(\n  debounce(async (itemName, email, index) => {\n    if (!itemName || !email) return;\n    \n    setSearchLoading(true);\n    try {\n      // Get the authentication token\n      const token = localStorage.getItem(\"token\");\n      \n      // Make the API request with proper authentication header\n      const response = await fetch(\n        `https://medicine-inventory-management-backend.onrender.com/api/inventory?itemName=${encodeURIComponent(\n          itemName.toLowerCase()\n        )}&email=${encodeURIComponent(email)}`,\n        {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n      \n      if (!response.ok) {\n        throw new Error(`Error ${response.status}: ${await response.text()}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data.length > 0) {\n        setSearchResults(data);\n        setShowAutocomplete(true);\n        \n        // Update the current item with the first result\n        const batchOptions = data.map((batch) => ({\n          batchNumber: batch.batch.replace(/[^a-zA-Z0-9]/g, ''),\n          quantity: batch.quantity,\n          mrp: batch.mrp,\n          purchaseRate: batch.purchaseRate,\n          gstNo: sellDetails.gstNumber,\n          expiryDate: batch.expiryDate\n        }));\n        \n        const sanitizedBatch = data[0].batch.replace(/[^a-zA-Z0-9]/g, '');\n        \n        updateItem(index, {\n          batchOptions,\n          batch: sanitizedBatch,\n          availableQuantity: data[0].quantity,\n          mrp: data[0].mrp?.toString() || \"\",\n          purchaseRate: data[0].purchaseRate?.toString() || \"\",\n          gstPercentage: data[0].gstPercentage?.toString() || \"0\",\n          expiryDate: data[0].expiryDate\n        });\n        \n        setMessage(\"\");\n      } else {\n        setSearchResults([]);\n        setShowAutocomplete(false);\n        setMessage(`No inventory found for ${itemName}`);\n        \n        // Reset the current item\n        updateItem(index, {\n          batchOptions: [],\n          batch: \"\",\n          availableQuantity: 0,\n          mrp: \"\",\n          purchaseRate: \"\",\n          gstPercentage: \"0\",\n          expiryDate: \"\"\n        });\n      }\n    } catch (error) {\n      console.error(\"Error fetching inventory:\", error);\n      setMessage(`Error fetching inventory data: ${error.message}`);\n      setSearchResults([]);\n      setShowAutocomplete(false);\n    } finally {\n      setSearchLoading(false);\n    }\n  }, 300),\n  [sellDetails.gstNumber, updateItem]\n);\n\nconst handleItemChange = (index, event) => {\n  const { name, value } = event.target;\n  const email = localStorage.getItem(\"email\");\n  \n  // Handle item name change with debounced search\n  if (name === \"itemName\") {\n    updateItem(index, { itemName: value });\n    \n    if (value && email) {\n      setActiveItemIndex(index);\n      fetchInventoryData(value, email, index);\n    } else {\n      setShowAutocomplete(false);\n    }\n    return;\n  }\n  \n  // Handle batch selection\n  if (name === \"batch\") {\n    const currentItem = items[index];\n    const cleanBatch = value.replace(/[^a-zA-Z0-9]/g, '');\n    const selectedBatch = currentItem.batchOptions.find(\n      (batch) => batch.batchNumber === cleanBatch\n    );\n    \n    if (selectedBatch) {\n      updateItem(index, {\n        batch: cleanBatch,\n        availableQuantity: selectedBatch.quantity,\n        mrp: selectedBatch.mrp?.toString() || \"\",\n        purchaseRate: selectedBatch.purchaseRate?.toString() || \"\",\n        gstPercentage: selectedBatch.gstPercentage?.toString() || \"0\",\n        expiryDate: selectedBatch.expiryDate\n      });\n    }\n    return;\n  }\n  \n  // Handle quantity, discount, and other fields\n  updateItem(index, { [name]: value });\n  \n  // Calculate amount if quantity, mrp, and discount are available\n  const currentItem = items[index];\n  const quantity = parseFloat(currentItem.quantity) || 0;\n  const mrp = parseFloat(currentItem.mrp) || 0;\n  const discount = parseFloat(currentItem.discount) || 0;\n  const gstPercentage = parseFloat(currentItem.gstPercentage) || 0;\n  \n  if (quantity > currentItem.availableQuantity) {\n    setMessage({ type: 'error', text: `Insufficient stock for ${currentItem.itemName}` });\n  } else if (quantity <= 0) {\n    setMessage({ type: 'error', text: \"Quantity must be greater than 0\" });\n  } else {\n    // Base calculations\n    const totalAmount = quantity * mrp;\n    const discountAmount = (totalAmount * discount) / 100;\n    const amountAfterDiscount = totalAmount - discountAmount;\n    \n    // GST calculations\n    const gstAmount = (amountAfterDiscount * gstPercentage) / 100;\n    // Split GST into SGST and CGST (for intra-state)\n    const sgst = gstAmount / 2;\n    const cgst = gstAmount / 2;\n    const igst = 0; // Assuming intra-state, IGST would be 0\n    \n    // Final amount\n    const netAmount = amountAfterDiscount + gstAmount;\n    \n    updateItem(index, { \n      amount: netAmount.toFixed(2),\n      totalAmount: totalAmount.toFixed(2),\n      discountAmount: discountAmount.toFixed(2),\n      gstAmount: gstAmount.toFixed(2),\n      sgst: sgst.toFixed(2),\n      cgst: cgst.toFixed(2),\n      igst: igst.toFixed(2),\n      totalGst: gstAmount.toFixed(2),\n      netAmount: netAmount.toFixed(2)\n    });\n    setMessage(\"\");\n  }\n};\n\n  const handleDetailsChange = (event) => {\n    const { name, value } = event.target;\n    // Prevent changing invoice number\n    if (name === 'saleInvoiceNumber') return;\n    setSellDetails({ ...sellDetails, [name]: value });\n  };\n  \n  // Handle autocomplete selection\n  const handleAutocompleteSelect = (itemName) => {\n    if (activeItemIndex !== null) {\n      updateItem(activeItemIndex, { itemName });\n      setShowAutocomplete(false);\n    }\n  };\n  \n  // Close autocomplete when clicking outside\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setShowAutocomplete(false);\n    };\n    \n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n\n  const generatePDF = () => {\n    const doc = new jsPDF();\n    \n    // Add header with gradient background\n    doc.setFillColor(41, 128, 185); // Blue color\n    doc.rect(0, 0, 210, 40, 'F');\n    \n    // Add title\n    doc.setTextColor(255, 255, 255);\n    doc.setFontSize(20);\n    doc.text('Sales Invoice', 105, 20, { align: 'center' });\n    \n    // Add company details\n    doc.setFontSize(10);\n    doc.text('Medicine Inventory Management System', 105, 30, { align: 'center' });\n    \n    // Add invoice details\n    doc.setTextColor(0, 0, 0);\n    doc.setFontSize(12);\n    doc.text(`Invoice Number: ${sellDetails.saleInvoiceNumber || 'INV001'}`, 20, 50);\n    doc.text(`Date: ${sellDetails.date}`, 20, 60);\n    doc.text(`Receipt Number: ${sellDetails.receiptNumber}`, 20, 70);\n    \n    // Add party details\n    doc.setFontSize(12);\n    doc.text('Party Details:', 20, 85);\n    doc.setFontSize(10);\n    doc.text(`Name: ${sellDetails.partyName}`, 20, 95);\n    doc.text(`GST Number: ${sellDetails.gstNumber}`, 20, 100);\n    \n    // Add items table\n    const tableColumn = [\n      'Item Name',\n      'Batch',\n      'Qty',\n      'Purchase Rate',\n      'MRP',\n      'Disc%',\n      'GST%',\n      'Expiry Date',\n      'Amount'\n    ];\n    \n    const tableRows = items.map(item => [\n      item.itemName,\n      item.batch,\n      item.quantity,\n      `₹${parseFloat(item.purchaseRate).toFixed(2)}`,\n      `₹${parseFloat(item.mrp).toFixed(2)}`,\n      `${item.discount}%`,\n      `${item.gstPercentage}%`,\n      item.expiryDate ? new Date(item.expiryDate).toISOString().split('T')[0] : '-',\n      `₹${parseFloat(item.amount).toFixed(2)}`\n    ]);\n    \n    doc.autoTable({\n      head: [tableColumn],\n      body: tableRows,\n      startY: 110,\n      theme: 'grid',\n      headStyles: {\n        fillColor: [41, 128, 185],\n        textColor: 255,\n        fontSize: 10,\n        fontStyle: 'bold',\n        halign: 'center'\n      },\n      bodyStyles: {\n        fontSize: 9,\n        halign: 'center'\n      },\n      alternateRowStyles: {\n        fillColor: [240, 240, 240]\n      },\n      columnStyles: {\n        0: { cellWidth: 35 }, // Item Name\n        1: { cellWidth: 15 }, // Batch\n        2: { cellWidth: 10 }, // Quantity\n        3: { cellWidth: 20 }, // Purchase Rate\n        4: { cellWidth: 15 }, // MRP\n        5: { cellWidth: 10 }, // Discount\n        6: { cellWidth: 10 }, // GST\n        7: { cellWidth: 20 }, // Expiry Date\n        8: { cellWidth: 20 }  // Amount\n      },\n      styles: {\n        cellPadding: 2,\n        fontSize: 9,\n        valign: 'middle'\n      },\n      margin: { left: 20, right: 20 }\n    });\n    \n    // Add summary\n    const finalY = doc.lastAutoTable.finalY + 20;\n    doc.setFontSize(12);\n    doc.text('Bill Summary', 20, finalY);\n    \n    // Calculate totals\n    const totalAmount = items.reduce((sum, item) => sum + (parseFloat(item.totalAmount) || 0), 0);\n    const totalDiscount = items.reduce((sum, item) => sum + (parseFloat(item.discountAmount) || 0), 0);\n    const totalGst = items.reduce((sum, item) => sum + (parseFloat(item.gstAmount) || 0), 0);\n    const netAmount = items.reduce((sum, item) => sum + (parseFloat(item.amount) || 0), 0);\n    \n    doc.setFontSize(10);\n    doc.text(`Total Amount: ₹${totalAmount.toFixed(2)}`, 20, finalY + 10);\n    doc.text(`Total Discount: ₹${totalDiscount.toFixed(2)}`, 20, finalY + 20);\n    doc.text(`Total GST: ₹${totalGst.toFixed(2)}`, 20, finalY + 30);\n    \n    doc.setFontSize(12);\n    doc.setFont(undefined, 'bold');\n    doc.text(`Net Amount: ₹${netAmount.toFixed(2)}`, 20, finalY + 45);\n    \n    // Add footer\n    doc.setFontSize(8);\n    doc.setTextColor(100, 100, 100);\n    doc.text('This is a computer-generated document. No signature required.', 105, 280, { align: 'center' });\n    \n    // Add terms and conditions\n    doc.setFontSize(8);\n    doc.text('Terms and Conditions:', 20, 290);\n    doc.setFontSize(7);\n    doc.text('1. Goods once sold will not be taken back.', 20, 295);\n    doc.text('2. Subject to local jurisdiction.', 20, 300);\n    \n    // Save the PDF with proper invoice number\n    const invoiceNumber = sellDetails.saleInvoiceNumber || 'INV001';\n    doc.save(`SalesInvoice_${invoiceNumber}.pdf`);\n  };\n\n  const createSellBill = async () => {\n    const token = localStorage.getItem(\"token\");\n    const email = localStorage.getItem(\"email\");\n\n    if (!sellDetails.gstNumber) {\n      setMessage({ type: 'error', text: \"GST Number is required\" });\n      return;\n    }\n\n    const gstMismatch = items.some(item => item.gstNo !== sellDetails.gstNumber);\n    if (gstMismatch) {\n      setMessage({ type: 'error', text: \"All items must have the same GST Number\" });\n      return;\n    }\n\n    const invalidQuantities = items.some(item => \n      item.availableQuantity < Number(item.quantity) || \n      Number(item.quantity) <= 0\n    );\n\n    if (invalidQuantities) {\n      setMessage({ type: 'error', text: \"Invalid quantities detected\" });\n      return;\n    }\n\n    // Calculate totals\n    const totalAmount = items.reduce((sum, item) => sum + (parseFloat(item.totalAmount) || 0), 0);\n    const totalDiscount = items.reduce((sum, item) => sum + (parseFloat(item.discountAmount) || 0), 0);\n    const totalGst = items.reduce((sum, item) => sum + (parseFloat(item.gstAmount) || 0), 0);\n    const netAmount = items.reduce((sum, item) => sum + (parseFloat(item.amount) || 0), 0);\n\n    const body = {\n      ...sellDetails,\n      items: items.map(({ batchOptions, availableQuantity, ...rest }) => ({\n        ...rest,\n        quantity: Number(rest.quantity),\n        mrp: Number(rest.mrp),\n        discount: Number(rest.discount),\n        gstPercentage: Number(rest.gstPercentage),\n        gstNo: sellDetails.gstNumber,\n        amount: Number(rest.amount),\n        totalAmount: Number(rest.totalAmount),\n        discountAmount: Number(rest.discountAmount),\n        gstAmount: Number(rest.gstAmount),\n        netAmount: Number(rest.netAmount)\n      })),\n      totalAmount,\n      discountAmount: totalDiscount,\n      sgstAmount: totalGst / 2,\n      cgstAmount: totalGst / 2,\n      igstAmount: 0,\n      totalGstAmount: totalGst,\n      netAmount,\n      email\n    };\n\n    try {\n      setLoading(true);\n      const response = await fetch(\"https://medicine-inventory-management-backend.onrender.com/api/bills/sale\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(body),\n      });\n\n      const responseData = await response.json();\n\n      if (response.ok) {\n        setMessage({ type: 'success', text: \"Invoice created successfully!\" });\n        generatePDF();\n        resetItems();\n        resetForm();\n      } else {\n        setMessage({ type: 'error', text: responseData.message || \"Failed to create invoice\" });\n      }\n    } catch (error) {\n      setMessage({ type: 'error', text: \"Error creating invoice\" });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-indigo-50 to-purple-50 p-6\">\n      <div className=\"max-w-6xl mx-auto bg-white rounded-2xl shadow-xl p-8\">\n        <div className=\"mb-8 text-center\">\n          <h2 className=\"text-3xl font-bold text-indigo-600 mb-2\">Create Sales Invoice</h2>\n          <div className=\"h-1 w-20 bg-indigo-500 mx-auto rounded-full\"></div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-8\">\n          <div className=\"space-y-4\">\n            <div className=\"flex flex-col\">\n              <label className=\"text-sm font-medium text-gray-700 mb-1\">GST Number</label>\n              <input\n                type=\"text\"\n                name=\"gstNumber\"\n                placeholder=\"Enter GST Number\"\n                className=\"rounded-lg border-2 border-indigo-100 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 p-3 transition-colors\"\n                value={sellDetails.gstNumber}\n                onChange={handleDetailsChange}\n                required\n              />\n            </div>\n            <div className=\"flex flex-col\">\n              <label className=\"text-sm font-medium text-gray-700 mb-1\">Party Name</label>\n              <input\n                type=\"text\"\n                name=\"partyName\"\n                placeholder=\"Enter Party Name\"\n                className=\"rounded-lg border-2 border-indigo-100 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 p-3 transition-colors\"\n                value={sellDetails.partyName}\n                onChange={handleDetailsChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"flex flex-col\">\n                <label className=\"text-sm font-medium text-gray-700 mb-1\">Invoice Number</label>\n                <input\n                  type=\"text\"\n                  name=\"saleInvoiceNumber\"\n                  value={sellDetails.saleInvoiceNumber}\n                  className=\"rounded-lg border-2 border-indigo-100 bg-gray-100 p-3 transition-colors\"\n                  readOnly\n                />\n              </div>\n              <div className=\"flex flex-col\">\n                <label className=\"text-sm font-medium text-gray-700 mb-1\">Date</label>\n                <input\n                  type=\"date\"\n                  name=\"date\"\n                  className=\"rounded-lg border-2 border-indigo-100 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 p-3 transition-colors\"\n                  value={sellDetails.date}\n                  onChange={handleDetailsChange}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col\">\n              <label className=\"text-sm font-medium text-gray-700 mb-1\">Receipt Number</label>\n              <input\n                type=\"text\"\n                name=\"receiptNumber\"\n                placeholder=\"Receipt #\"\n                className=\"rounded-lg border-2 border-indigo-100 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 p-3 transition-colors\"\n                value={sellDetails.receiptNumber}\n                onChange={handleDetailsChange}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mb-8\">\n          <h3 className=\"text-xl font-semibold text-indigo-600 mb-4\">Item Details</h3>\n          <div className=\"rounded-xl border-2 border-indigo-50 \">\n            <table className=\"w-full\">\n              <thead className=\"bg-indigo-600 text-white\">\n                <tr>\n                  {[\"Item Name\", \"Batch\", \"Available\", \"Qty\", \"Purchase Rate\", \"MRP\", \"Discount%\", \"GST %\", \"Expiry Date\", \"Amount\"].map((header, idx) => (\n                    <th \n                      key={idx}\n                      className=\"px-4 py-3 text-left text-sm font-medium last:text-right\"\n                    >\n                      {header}\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-indigo-50\">\n                {items.map((item, index) => (\n                  <tr \n                    key={index}\n                    className=\"hover:bg-indigo-50 transition-colors\"\n                  >\n                    <td className=\"px-4 py-3 relative\">\n                      <input\n                        type=\"text\"\n                        name=\"itemName\"\n                        value={item.itemName}\n                        onChange={(e) => handleItemChange(index, e)}\n                        className=\"w-full rounded-md border-indigo-100 focus:border-indigo-500 focus:ring-indigo-500\"\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          setActiveItemIndex(index);\n                          if (item.itemName) {\n                            setShowAutocomplete(true);\n                          }\n                        }}\n                      />\n                      {showAutocomplete && activeItemIndex === index && (\n                        <div \n                          className=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-md shadow-lg max-h-60 overflow-auto\"\n                          onClick={(e) => e.stopPropagation()}\n                        >\n                          {searchLoading ? (\n                            <div className=\"p-2 text-center text-gray-500\">\n                              <svg className=\"animate-spin h-5 w-5 mx-auto\" viewBox=\"0 0 24 24\">\n                                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" fill=\"none\"/>\n                                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"/>\n                              </svg>\n                            </div>\n                          ) : searchResults.length > 0 ? (\n                            <ul>\n                              {searchResults.map((result, idx) => (\n                                <li \n                                  key={idx}\n                                  className=\"px-4 py-2 hover:bg-indigo-50 cursor-pointer\"\n                                  onClick={() => handleAutocompleteSelect(result.itemName)}\n                                >\n                                  {result.itemName}\n                                </li>\n                              ))}\n                            </ul>\n                          ) : (\n                            <div className=\"p-2 text-center text-gray-500\">\n                              No results found\n                            </div>\n                          )}\n                        </div>\n                      )}\n                    </td>\n                    <td className=\"px-4 py-3\">\n                      <select\n                        name=\"batch\"\n                        value={item.batch}\n                        onChange={(e) => handleItemChange(index, e)}\n                        className=\"w-full rounded-md border-indigo-100 focus:border-indigo-500 focus:ring-indigo-500\"\n                      >\n                        <option value=\"\">Select Batch</option>\n                        {item.batchOptions.map((batch, idx) => (\n                          <option key={idx} value={batch.batchNumber}>\n                            {batch.batchNumber.replace(/[^a-zA-Z0-9]/g, '')}\n                          </option>\n                        ))}\n                      </select>\n                    </td>\n                    <td className=\"px-4 py-3 text-center\">\n                      {item.availableQuantity?.toString() ?? \"-\"}\n                    </td>\n                    <td className=\"px-4 py-3\">\n                      <input\n                        type=\"number\"\n                        name=\"quantity\"\n                        value={item.quantity}\n                        onChange={(e) => handleItemChange(index, e)}\n                        className=\"w-full rounded-md border-indigo-100 focus:border-indigo-500 focus:ring-indigo-500\"\n                        min=\"0\"\n                      />\n                    </td>\n                    <td className=\"px-4 py-3\">\n                      <div className=\"flex items-center\">\n                        <span className=\"text-gray-500 mr-1\">₹</span>\n                        <input\n                          type=\"number\"\n                          name=\"purchaseRate\"\n                          value={item.purchaseRate}\n                          readOnly\n                          className=\"w-24 px-2 py-1 text-sm text-center bg-gray-50 border border-gray-300 rounded-md\"\n                        />\n                      </div>\n                    </td>\n                    <td className=\"px-4 py-3\">\n                      <input\n                        type=\"number\"\n                        name=\"mrp\"\n                        value={item.mrp}\n                        disabled\n                        className=\"w-full rounded-md bg-indigo-50 border-indigo-100\"\n                      />\n                    </td>\n                    \n                    <td className=\"px-4 py-3\">\n                      <input\n                        type=\"number\"\n                        name=\"discount\"\n                        value={item.discount}\n                        onChange={(e) => handleItemChange(index, e)}\n                        className=\"w-full rounded-md border-indigo-100 focus:border-indigo-500 focus:ring-indigo-500\"\n                        min=\"0\"\n                        max=\"100\"\n                      />\n                    </td>\n                    <td className=\"px-4 py-3\">\n                      <div className=\"flex items-center\">\n                        <input\n                          type=\"number\"\n                          name=\"gstPercentage\"\n                          value={item.gstPercentage}\n                          onChange={(e) => handleItemChange(index, e)}\n                          step=\"0.01\"\n                          min=\"0\"\n                          max=\"100\"\n                          className=\"w-16 px-2 py-1 text-sm text-center border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                        />\n                        <span className=\"text-gray-500 ml-1\">%</span>\n                      </div>\n                    </td>\n                    <td className=\"px-4 py-3\">\n                      <input\n                        type=\"date\"\n                        name=\"expiryDate\"\n                        value={item.expiryDate ? new Date(item.expiryDate).toISOString().split('T')[0] : ''}\n                        readOnly\n                        className=\"w-full rounded-md bg-indigo-50 border-indigo-100\"\n                      />\n                    </td>\n                    <td className=\"px-4 py-3 text-right font-medium text-emerald-600\">\n                      {item.amount || \"-\"}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div className=\"flex justify-between items-center\">\n          <button\n            onClick={addItem}\n            className=\"px-6 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded-lg transition-colors flex items-center\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clipRule=\"evenodd\" />\n            </svg>\n            Add Item\n          </button>\n\n          <div className=\"space-x-4\">\n            {message && (\n              <div className={`inline-flex items-center px-4 py-2 rounded-lg ${\n                message.type === 'success' \n                  ? 'bg-green-100 text-green-700' \n                  : 'bg-rose-100 text-rose-700'\n              }`}>\n                <svg \n                  xmlns=\"http://www.w3.org/2000/svg\" \n                  className={`h-5 w-5 mr-2 ${\n                    message.type === 'success' ? 'text-green-500' : 'text-rose-500'\n                  }`} \n                  viewBox=\"0 0 20 20\" \n                  fill=\"currentColor\"\n                >\n                  {message.type === 'success' ? (\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                  ) : (\n                    <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                  )}\n                </svg>\n                {message.text}\n              </div>\n            )}\n            \n            <button\n              onClick={createSellBill}\n              className=\"px-8 py-3 bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 text-white rounded-lg font-semibold transition-all transform hover:scale-105\"\n              disabled={loading}\n            >\n              {loading ? (\n                <span className=\"flex items-center\">\n                  <svg className=\"animate-spin h-5 w-5 mr-3\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" fill=\"none\"/>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"/>\n                  </svg>\n                  Processing...\n                </span>\n              ) : (\n                \"Create Sales Invoice\"\n              )}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SellBillForm;\n\n\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ReturnBillOptions = () => {\r\n  const navigate = useNavigate();\r\n  const [loadingType, setLoadingType] = useState(null);\r\n\r\n  const handleNavigation = (type) => {\r\n    setLoadingType(type);\r\n    setTimeout(() => {\r\n      navigate(type === 'purchase' ? '/purchase-return' : '/sale-return');\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-purple-100 flex flex-col items-center justify-center p-8 relative overflow-hidden\">\r\n      {/* Animated Blobs */}\r\n      <div className=\"absolute -top-32 -right-32 w-96 h-96 bg-purple-300 rounded-full opacity-20 mix-blend-multiply filter blur-3xl animate-[blob_8s_infinite]\"></div>\r\n      <div className=\"absolute -bottom-32 -left-32 w-96 h-96 bg-blue-300 rounded-full opacity-20 mix-blend-multiply filter blur-3xl animate-[blob_8s_infinite_2s]\"></div>\r\n\r\n      <div className=\"relative z-10 max-w-5xl w-full\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-12 space-y-6\">\r\n          <h2 className=\"text-5xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-purple-600\">\r\n            Return Bill Management\r\n          </h2>\r\n          <p className=\"text-xl text-gray-700\">\r\n            Choose between handling purchase returns or sale returns.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Buttons */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-12\">\r\n          <CardButton\r\n            title=\"Purchase Return\"\r\n            subtitle=\"Return items to suppliers\"\r\n            gradient=\"from-orange-500 to-red-500\"\r\n            icon=\"📦\"\r\n            loading={loadingType === 'purchase'}\r\n            onClick={() => handleNavigation('purchase')}\r\n          />\r\n          <CardButton\r\n            title=\"Sale Return\"\r\n            subtitle=\"Handle customer returns\"\r\n            gradient=\"from-green-500 to-teal-500\"\r\n            icon=\"🔄\"\r\n            loading={loadingType === 'sale'}\r\n            onClick={() => handleNavigation('sale')}\r\n          />\r\n        </div>\r\n\r\n        {/* Help Section */}\r\n        <div className=\"bg-gradient-to-br from-blue-100 via-pink-100 to-purple-100 border border-blue-300/30 backdrop-blur-xl p-10 rounded-3xl shadow-xl text-center\">\r\n          <h3 className=\"text-3xl font-bold text-gray-900 mb-3\">Need Assistance?</h3>\r\n          <p className=\"text-gray-700 mb-6 font-medium\">\r\n            Our support team is available to guide you through any return process.\r\n          </p>\r\n          <div className=\"flex justify-center gap-4 flex-wrap\">\r\n            <button className=\"px-6 py-3 bg-gradient-to-r from-blue-700 to-purple-700 text-white rounded-full font-semibold hover:opacity-90 transition\">\r\n              Contact Support\r\n            </button>\r\n            <button\r\n              onClick={() => navigate('/documentation/return-bills')}\r\n              className=\"px-6 py-3 border border-gray-400 text-gray-800 bg-white/60 rounded-full font-semibold hover:bg-white/80 transition\"\r\n            >\r\n              View Documentation\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Card Component\r\nconst CardButton = ({ title, subtitle, gradient, icon, onClick, loading }) => (\r\n  <button\r\n    onClick={onClick}\r\n    disabled={loading}\r\n    className={`relative group bg-gradient-to-br ${gradient} text-white p-6 rounded-2xl shadow-lg transition transform hover:-translate-y-2 hover:shadow-2xl active:scale-95 w-full`}\r\n  >\r\n    {loading ? (\r\n      <div className=\"flex justify-center items-center space-x-2\">\r\n        <div className=\"w-5 h-5 border-4 border-white border-dashed rounded-full animate-spin\"></div>\r\n        <span className=\"font-semibold\">Loading...</span>\r\n      </div>\r\n    ) : (\r\n      <div className=\"flex items-start space-x-4\">\r\n        <span className=\"text-4xl bg-white/20 p-4 rounded-lg\">{icon}</span>\r\n        <div className=\"text-left\">\r\n          <h3 className=\"text-2xl font-bold mb-1\">{title}</h3>\r\n          <p className=\"text-white/90\">{subtitle}</p>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </button>\r\n);\r\n\r\nexport default ReturnBillOptions;\r\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst API_BASE_URL = 'https://medicine-inventory-management-backend.onrender.com';\n\nconst PurchaseReturnForm = () => {\n  const [formData, setFormData] = useState({\n    email: '',\n    date: new Date().toISOString().split('T')[0],\n    receiptNumber: '',\n    supplierName: '',\n    supplierGST: '',\n    items: [\n      {\n        itemName: '',\n        batch: '',\n        quantity: 0,\n        purchaseRate: 0,\n        mrp: 0,\n        discount: 0,\n        gstPercentage: 0,\n        expiryDate: '',\n        returnableQuantity: 0,\n        originalPurchaseQuantity: 0,\n        soldQuantity: 0,\n        returnedQuantity: 0,\n        currentInventoryQuantity: 0\n      }\n    ]\n  });\n\n  const [suppliers, setSuppliers] = useState([]);\n  const [returnableItems, setReturnableItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [isBillsLoaded, setIsBillsLoaded] = useState(false);\n  const [calculations, setCalculations] = useState({\n    totalAmount: 0,\n    totalDiscount: 0,\n    totalGST: 0,\n    netAmount: 0\n  });\n\n  // Load email from localStorage on component mount\n  useEffect(() => {\n    const userEmail = localStorage.getItem('email');\n    if (userEmail) {\n      setFormData(prev => ({ ...prev, email: userEmail }));\n    }\n  }, []);\n\n  // Add request interceptor for authentication\n  useEffect(() => {\n    const interceptor = axios.interceptors.request.use(config => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    });\n\n    return () => axios.interceptors.request.eject(interceptor);\n  }, []);\n\n  // Fetch suppliers on component mount\n  useEffect(() => {\n    const fetchSuppliers = async () => {\n      if (!formData.email) return;\n      \n      try {\n        console.log('Fetching inventory for email:', formData.email);\n        const response = await axios.get(`${API_BASE_URL}/api/inventory/${formData.email}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        \n        console.log('Inventory response:', response.data);\n        \n        // Extract unique supplier names from inventory items\n        const uniqueSuppliers = [...new Set(response.data.map(item => item.partyName))];\n        console.log('Unique suppliers:', uniqueSuppliers);\n        \n        if (uniqueSuppliers.length === 0) {\n          setError('No inventory items found. Please add items to inventory first.');\n          setSuppliers([]);\n        } else {\n          setSuppliers(uniqueSuppliers.map(name => ({ name })));\n          setError('');\n        }\n      } catch (err) {\n        console.error('Error fetching suppliers:', err);\n        if (err.response?.status === 404) {\n          setError('No inventory items found. Please add items to inventory first.');\n        } else {\n          setError(err.response?.data?.message || 'Error fetching suppliers. Please try again.');\n        }\n        setSuppliers([]);\n      }\n    };\n\n    if (formData.email) {\n      fetchSuppliers();\n    }\n  }, [formData.email]);\n\n  const handleLoadBills = async () => {\n    if (!formData.supplierName || !formData.email) {\n      setError('Please enter supplier name');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError('');\n      const response = await axios.get(`${API_BASE_URL}/api/purchase-returns/returnable-quantities`, {\n        params: {\n          email: formData.email,\n          supplierName: formData.supplierName\n        },\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      \n      if (response.data.length === 0) {\n        setError('No returnable items found for this supplier.');\n        setReturnableItems([]);\n      } else {\n        setReturnableItems(response.data);\n        setIsBillsLoaded(true);\n      }\n    } catch (err) {\n      console.error('Error fetching returnable quantities:', err);\n      if (err.response?.status === 404) {\n        setError('No returnable items found for this supplier.');\n      } else {\n        setError(err.response?.data?.message || 'Error loading bills. Please try again.');\n      }\n      setReturnableItems([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n    if (name === 'supplierName') {\n      setIsBillsLoaded(false);\n      setReturnableItems([]);\n    }\n  };\n\n  const handleItemChange = (index, e) => {\n    const { name, value } = e.target;\n    const updatedItems = [...formData.items];\n    updatedItems[index] = {\n      ...updatedItems[index],\n      [name]: value\n    };\n\n    // If item name changes, update available batches and other details\n    if (name === 'itemName') {\n      updatedItems[index].batch = ''; // Reset batch when item changes\n      const returnableItem = returnableItems.find(\n        item => item.itemName.toLowerCase() === value.toLowerCase()\n      );\n      if (returnableItem) {\n        // Check if the item has expired\n        const today = new Date();\n        const expiryDate = new Date(returnableItem.expiryDate);\n        const isExpired = expiryDate < today;\n\n        if (isExpired) {\n          setError(`Item ${returnableItem.itemName} (Batch: ${returnableItem.batch}) has expired on ${returnableItem.expiryDate}`);\n          return;\n        }\n\n        updatedItems[index] = {\n          ...updatedItems[index],\n          returnableQuantity: returnableItem.returnableQuantity,\n          originalPurchaseQuantity: returnableItem.originalPurchaseQuantity,\n          soldQuantity: returnableItem.soldQuantity,\n          returnedQuantity: returnableItem.returnedQuantity,\n          currentInventoryQuantity: returnableItem.currentInventoryQuantity,\n          purchaseRate: returnableItem.purchaseRate || 0,\n          mrp: returnableItem.mrp || 0,\n          expiryDate: returnableItem.expiryDate || '',\n          gstPercentage: returnableItem.gstPercentage || 0,\n          discount: returnableItem.discount || 0\n        };\n      }\n    }\n\n    // If batch changes, update item details for that specific batch\n    if (name === 'batch' && value) {\n      const returnableItem = returnableItems.find(\n        item => item.itemName.toLowerCase() === updatedItems[index].itemName.toLowerCase() &&\n               item.batch.toLowerCase() === value.toLowerCase()\n      );\n      if (returnableItem) {\n        // Check if the item has expired\n        const today = new Date();\n        const expiryDate = new Date(returnableItem.expiryDate);\n        const isExpired = expiryDate < today;\n\n        if (isExpired) {\n          setError(`Item ${returnableItem.itemName} (Batch: ${returnableItem.batch}) has expired on ${returnableItem.expiryDate}`);\n          return;\n        }\n\n        updatedItems[index] = {\n          ...updatedItems[index],\n          returnableQuantity: returnableItem.returnableQuantity,\n          originalPurchaseQuantity: returnableItem.originalPurchaseQuantity,\n          soldQuantity: returnableItem.soldQuantity,\n          returnedQuantity: returnableItem.returnedQuantity,\n          currentInventoryQuantity: returnableItem.currentInventoryQuantity,\n          purchaseRate: returnableItem.purchaseRate || 0,\n          mrp: returnableItem.mrp || 0,\n          expiryDate: returnableItem.expiryDate || '',\n          gstPercentage: returnableItem.gstPercentage || 0,\n          discount: returnableItem.discount || 0\n        };\n      }\n    }\n\n    setFormData({ ...formData, items: updatedItems });\n    calculateTotals();\n  };\n\n  const addItemRow = () => {\n    setFormData({\n      ...formData,\n      items: [\n        ...formData.items,\n        {\n          itemName: '',\n          batch: '',\n          quantity: 0,\n          purchaseRate: 0,\n          mrp: 0,\n          discount: 0,\n          gstPercentage: 0,\n          expiryDate: '',\n          returnableQuantity: 0,\n          originalPurchaseQuantity: 0,\n          soldQuantity: 0,\n          returnedQuantity: 0,\n          currentInventoryQuantity: 0\n        }\n      ]\n    });\n  };\n\n  const removeItemRow = (index) => {\n    const updatedItems = [...formData.items];\n    updatedItems.splice(index, 1);\n    setFormData({ ...formData, items: updatedItems });\n  };\n\n  const calculateTotals = () => {\n    let totalAmount = 0;\n    let totalDiscount = 0;\n    let totalGST = 0;\n\n    formData.items.forEach(item => {\n      if (item.quantity && item.purchaseRate) {\n        const itemTotal = item.quantity * item.purchaseRate;\n        const itemDiscount = (itemTotal * item.discount) / 100;\n        const amountAfterDiscount = itemTotal - itemDiscount;\n        const itemGST = (amountAfterDiscount * item.gstPercentage) / 100;\n\n        totalAmount += itemTotal;\n        totalDiscount += itemDiscount;\n        totalGST += itemGST;\n      }\n    });\n\n    const netAmount = totalAmount - totalDiscount + totalGST;\n\n    setCalculations({\n      totalAmount,\n      totalDiscount,\n      totalGST,\n      netAmount\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!formData.supplierName || !formData.receiptNumber) {\n        setError('Please fill in all required fields');\n        return;\n    }\n\n    // Validate items\n    if (!formData.items.length) {\n        setError('Please add at least one item');\n        return;\n    }\n\n    for (const item of formData.items) {\n        if (!item.itemName || !item.batch || !item.quantity) {\n            setError('Please fill in all item details');\n            return;\n        }\n\n        const returnableItem = returnableItems.find(\n            ri => ri.itemName.toLowerCase() === item.itemName.toLowerCase() && \n                 ri.batch.toLowerCase() === item.batch.toLowerCase()\n        );\n\n        if (!returnableItem) {\n            setError(`Item ${item.itemName} (Batch: ${item.batch}) is not returnable`);\n            return;\n        }\n\n        if (item.quantity > returnableItem.returnableQuantity) {\n            setError(`Return quantity exceeds returnable quantity for ${item.itemName} (Batch: ${item.batch})`);\n            return;\n        }\n    }\n\n    try {\n        setLoading(true);\n        setError('');\n\n        const response = await axios.post(`${API_BASE_URL}/api/purchase-returns/create`, {\n            ...formData,\n            date: formData.date\n        });\n\n        if (response.data.success) {\n            // Update the returnable items with the new quantities\n            if (response.data.updatedReturnableQuantities) {\n                setReturnableItems(response.data.updatedReturnableQuantities);\n            }\n\n            // Reset form but keep supplier name and email\n            setFormData(prevState => ({\n                ...prevState,\n                receiptNumber: '',\n                items: [{\n                    itemName: '',\n                    batch: '',\n                    quantity: 0,\n                    purchaseRate: 0,\n                    mrp: 0,\n                    discount: 0,\n                    gstPercentage: 0,\n                    expiryDate: '',\n                    returnableQuantity: 0,\n                    originalPurchaseQuantity: 0,\n                    soldQuantity: 0,\n                    returnedQuantity: 0,\n                    currentInventoryQuantity: 0\n                }]\n            }));\n\n            setSuccess('Purchase return bill created successfully');\n            \n            // Download PDF\n            if (response.data.pdfUrl) {\n                try {\n                    const pdfResponse = await axios.get(\n                        `${API_BASE_URL}/api/purchase-returns${response.data.pdfUrl}`,\n                        { responseType: 'blob' }\n                    );\n                    \n                    const url = window.URL.createObjectURL(new Blob([pdfResponse.data]));\n                    const link = document.createElement('a');\n                    link.href = url;\n                    link.setAttribute('download', `${response.data.returnBill.returnInvoiceNumber}.pdf`);\n                    document.body.appendChild(link);\n                    link.click();\n                    link.remove();\n                    window.URL.revokeObjectURL(url);\n                } catch (pdfError) {\n                    console.error('Error downloading PDF:', pdfError);\n                    setError('Bill created successfully but failed to download PDF. Please try downloading from the bills list.');\n                }\n            }\n\n            // Refresh the returnable items list\n            await handleLoadBills();\n        }\n    } catch (err) {\n        console.error('Error creating purchase return bill:', err);\n        setError(err.response?.data?.message || 'Error creating purchase return bill');\n    } finally {\n        setLoading(false);\n    }\n  };\n\n  const createTestInventoryItem = async () => {\n    try {\n      const testItem = {\n        itemName: \"Test Medicine\",\n        batch: \"BATCH001\",\n        partyName: \"ABC Pharmaceuticals\",\n        expiryDate: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 1 year from now\n        pack: \"Strip\",\n        quantity: 100,\n        purchaseRate: 10,\n        mrp: 15,\n        gstPercentage: 12,\n        email: formData.email\n      };\n\n      const response = await axios.post(`${API_BASE_URL}/api/inventory`, testItem, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      console.log('Test inventory item created:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating test inventory item:', error);\n      throw error;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8\">\n      <div className=\"max-w-[95%] mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"bg-white rounded-lg shadow-lg p-8\">\n          <h1 className=\"text-3xl font-bold text-gray-800 mb-8\">Create Purchase Return Bill</h1>\n          \n          {error && (\n            <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n              {error}\n            </div>\n          )}\n          \n          {success && (\n            <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4\">\n              {success}\n            </div>\n          )}\n\n          <button\n            onClick={createTestInventoryItem}\n            className=\"mb-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n          >\n            Create Test Inventory Item\n          </button>\n          \n          <form onSubmit={handleSubmit} className=\"space-y-8\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-8\">\n              <div className=\"relative group\">\n                <label className=\"block text-lg font-semibold text-gray-700 mb-2\">Email</label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  className=\"w-full px-5 py-4 text-lg border-2 border-indigo-200 rounded-lg bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\n                  readOnly\n                />\n              </div>\n              \n              <div className=\"relative group\">\n                <label className=\"block text-lg font-semibold text-gray-700 mb-2\">Date</label>\n                <input\n                  type=\"date\"\n                  name=\"date\"\n                  value={formData.date}\n                  onChange={handleInputChange}\n                  className=\"w-full px-5 py-4 text-lg border-2 border-indigo-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\n                  required\n                />\n              </div>\n              \n              <div className=\"relative group\">\n                <label className=\"block text-lg font-semibold text-gray-700 mb-2\">Receipt Number</label>\n                <input\n                  type=\"text\"\n                  name=\"receiptNumber\"\n                  value={formData.receiptNumber}\n                  onChange={handleInputChange}\n                  className=\"w-full px-5 py-4 text-lg border-2 border-indigo-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\n                  required\n                  placeholder=\"Enter receipt number\"\n                />\n              </div>\n              \n              <div className=\"relative group\">\n                <label className=\"block text-lg font-semibold text-gray-700 mb-2\">Supplier Name</label>\n                <div className=\"flex space-x-3\">\n                  <input\n                    type=\"text\"\n                    name=\"supplierName\"\n                    value={formData.supplierName}\n                    onChange={handleInputChange}\n                    className=\"w-full px-5 py-4 text-lg border-2 border-indigo-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\n                    list=\"suppliersList\"\n                    required\n                    placeholder=\"Select supplier\"\n                  />\n                  <datalist id=\"suppliersList\">\n                    {suppliers.map((supplier, index) => (\n                      <option key={index} value={supplier.name} />\n                    ))}\n                  </datalist>\n                  <button\n                    type=\"button\"\n                    onClick={handleLoadBills}\n                    disabled={loading || !formData.supplierName}\n                    className=\"px-6 py-4 text-lg bg-gradient-to-r from-indigo-600 to-purple-600 text-white rounded-lg hover:from-indigo-700 hover:to-purple-700 disabled:from-gray-400 disabled:to-gray-500 transition-all duration-300 shadow-md whitespace-nowrap\"\n                  >\n                    {loading ? 'Loading...' : 'Load Bills'}\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"relative group\">\n                <label className=\"block text-lg font-semibold text-gray-700 mb-2\">Supplier GST</label>\n                <input\n                  type=\"text\"\n                  name=\"supplierGST\"\n                  value={formData.supplierGST}\n                  onChange={handleInputChange}\n                  className=\"w-full px-5 py-4 text-lg border-2 border-indigo-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\n                  required\n                  placeholder=\"Enter supplier GST\"\n                />\n              </div>\n            </div>\n\n            <div className=\"mb-8 bg-white rounded-xl shadow-md p-6 border border-indigo-100\">\n              <div className=\"flex justify-between items-center mb-6\">\n                <h2 className=\"text-2xl font-bold text-indigo-800\">Items</h2>\n                <button\n                  type=\"button\"\n                  onClick={addItemRow}\n                  className=\"px-6 py-3 text-lg bg-gradient-to-r from-green-500 to-emerald-500 text-white rounded-lg hover:from-green-600 hover:to-emerald-600 transition-all duration-300 shadow-md disabled:from-gray-400 disabled:to-gray-500\"\n                  disabled={!isBillsLoaded}\n                >\n                  <span className=\"flex items-center\"><span className=\"mr-2\">+</span> Add Item</span>\n                </button>\n              </div>\n\n              <div className=\"overflow-x-auto bg-indigo-50 rounded-lg shadow-inner\">\n                <table className=\"w-full divide-y divide-indigo-200 table-fixed\">\n                  <thead>\n                    <tr className=\"bg-gradient-to-r from-indigo-500 to-purple-500 text-white\">\n                      <th className=\"px-6 py-4 text-left text-lg font-medium uppercase tracking-wider w-[15%]\">Item Name</th>\n                      <th className=\"px-6 py-4 text-left text-lg font-medium uppercase tracking-wider w-[10%]\">Batch</th>\n                      <th className=\"px-6 py-4 text-left text-lg font-medium uppercase tracking-wider w-[10%]\">Quantity</th>\n                      <th className=\"px-6 py-4 text-left text-lg font-medium uppercase tracking-wider w-[10%]\">Returnable Qty</th>\n                      <th className=\"px-6 py-4 text-left text-lg font-medium uppercase tracking-wider w-[10%]\">Original Purchase</th>\n                      <th className=\"px-6 py-4 text-left text-lg font-medium uppercase tracking-wider w-[10%]\">Sold Qty</th>\n                      <th className=\"px-6 py-4 text-left text-lg font-medium uppercase tracking-wider w-[10%]\">Already Returned</th>\n                      <th className=\"px-6 py-4 text-left text-lg font-medium uppercase tracking-wider w-[10%]\">Purchase Rate</th>\n                      <th className=\"px-6 py-4 text-left text-lg font-medium uppercase tracking-wider w-[10%]\">MRP</th>\n                      <th className=\"px-6 py-4 text-left text-lg font-medium uppercase tracking-wider w-[10%]\">Discount %</th>\n                      <th className=\"px-6 py-4 text-left text-lg font-medium uppercase tracking-wider w-[10%]\">GST %</th>\n                      <th className=\"px-6 py-4 text-left text-lg font-medium uppercase tracking-wider w-[10%]\">Expiry Date</th>\n                      <th className=\"px-6 py-4 text-left text-lg font-medium uppercase tracking-wider w-[5%]\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-indigo-100\">\n                    {formData.items.map((item, index) => (\n                      <tr key={index} className=\"hover:bg-indigo-50 transition-colors duration-150\">\n                        <td className=\"px-6 py-4\">\n                          <input\n                            type=\"text\"\n                            name=\"itemName\"\n                            value={item.itemName}\n                            onChange={(e) => handleItemChange(index, e)}\n                            className=\"w-full px-4 py-3 text-lg border-2 border-indigo-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\n                            required\n                            disabled={!isBillsLoaded}\n                            placeholder=\"Enter item name\"\n                          />\n                        </td>\n                        <td className=\"px-6 py-4\">\n                          <select\n                            name=\"batch\"\n                            value={item.batch}\n                            onChange={(e) => handleItemChange(index, e)}\n                            className=\"w-full px-4 py-3 text-lg border-2 border-indigo-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\n                            required\n                            disabled={!item.itemName}\n                          >\n                            <option value=\"\">Select Batch</option>\n                            {returnableItems\n                              .filter(ri => ri.itemName.toLowerCase() === item.itemName.toLowerCase())\n                              .map((returnableItem, idx) => (\n                                <option key={idx} value={returnableItem.batch}>\n                                  {returnableItem.batch}\n                                </option>\n                              ))}\n                          </select>\n                        </td>\n                        <td className=\"px-6 py-4\">\n                          <input\n                            type=\"number\"\n                            name=\"quantity\"\n                            value={item.quantity}\n                            onChange={(e) => handleItemChange(index, e)}\n                            className=\"w-full px-4 py-3 text-lg border-2 border-indigo-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\n                            min=\"1\"\n                            max={item.returnableQuantity}\n                            required\n                            disabled={!item.batch}\n                          />\n                        </td>\n                        <td className=\"px-6 py-4\">\n                          <input\n                            type=\"number\"\n                            value={item.returnableQuantity}\n                            className=\"w-full px-4 py-3 text-lg border-2 border-gray-200 rounded-lg bg-gray-100\"\n                            readOnly\n                          />\n                        </td>\n                        <td className=\"px-6 py-4\">\n                          <input\n                            type=\"number\"\n                            value={item.originalPurchaseQuantity}\n                            className=\"w-full px-4 py-3 text-lg border-2 border-gray-200 rounded-lg bg-gray-100\"\n                            readOnly\n                          />\n                        </td>\n                        <td className=\"px-6 py-4\">\n                          <input\n                            type=\"number\"\n                            value={item.soldQuantity}\n                            className=\"w-full px-4 py-3 text-lg border-2 border-gray-200 rounded-lg bg-gray-100\"\n                            readOnly\n                          />\n                        </td>\n                        <td className=\"px-6 py-4\">\n                          <input\n                            type=\"number\"\n                            value={item.returnedQuantity}\n                            className=\"w-full px-4 py-3 text-lg border-2 border-gray-200 rounded-lg bg-gray-100\"\n                            readOnly\n                          />\n                        </td>\n                        <td className=\"px-6 py-4\">\n                          <input\n                            type=\"number\"\n                            name=\"purchaseRate\"\n                            value={item.purchaseRate}\n                            onChange={(e) => handleItemChange(index, e)}\n                            className=\"w-full px-4 py-3 text-lg border-2 border-indigo-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\n                            min=\"0\"\n                            step=\"0.01\"\n                            required\n                            disabled={!item.batch}\n                          />\n                        </td>\n                        <td className=\"px-6 py-4\">\n                          <input\n                            type=\"number\"\n                            name=\"mrp\"\n                            value={item.mrp}\n                            onChange={(e) => handleItemChange(index, e)}\n                            className=\"w-full px-4 py-3 text-lg border-2 border-indigo-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\n                            min=\"0\"\n                            step=\"0.01\"\n                            required\n                            disabled={!item.batch}\n                          />\n                        </td>\n                        <td className=\"px-6 py-4\">\n                          <input\n                            type=\"number\"\n                            name=\"discount\"\n                            value={item.discount}\n                            onChange={(e) => handleItemChange(index, e)}\n                            className=\"w-full px-4 py-3 text-lg border-2 border-indigo-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\n                            min=\"0\"\n                            max=\"100\"\n                            step=\"0.01\"\n                            required\n                            disabled={!item.batch}\n                          />\n                        </td>\n                        <td className=\"px-6 py-4\">\n                          <input\n                            type=\"text\"\n                            inputMode=\"numeric\"\n                            pattern=\"[0-9]*\"\n                            name=\"gstPercentage\"\n                            value={item.gstPercentage}\n                            onChange={(e) => handleItemChange(index, e)}\n                            className=\"w-full px-4 py-3 text-lg border-2 border-indigo-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\n                            min=\"0\"\n                            max=\"100\"\n                            required\n                            disabled={!item.batch}\n                          />\n                        </td>\n                        <td className=\"px-6 py-4\">\n                          <input\n                            type=\"date\"\n                            name=\"expiryDate\"\n                            value={item.expiryDate}\n                            onChange={(e) => handleItemChange(index, e)}\n                            className=\"w-full px-4 py-3 text-lg border-2 border-indigo-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\n                            required\n                            disabled={!item.batch}\n                          />\n                        </td>\n                        <td className=\"px-6 py-4\">\n                          <button\n                            type=\"button\"\n                            onClick={() => removeItemRow(index)}\n                            className=\"text-red-600 hover:text-red-800 text-xl font-medium bg-red-100 hover:bg-red-200 p-2 rounded-full transition-colors duration-300\"\n                          >\n                            ×\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n\n            <div className=\"bg-gradient-to-r from-indigo-100 to-purple-100 rounded-xl p-6 shadow-md mb-8\">\n              <h3 className=\"text-xl font-bold text-indigo-800 mb-4\">Bill Summary</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                <div className=\"bg-white rounded-lg p-4 shadow-sm\">\n                  <label className=\"block text-lg font-medium text-gray-700 mb-2\">Total Amount</label>\n                  <input\n                    type=\"number\"\n                    value={calculations.totalAmount.toFixed(2)}\n                    className=\"w-full px-4 py-3 text-xl font-bold text-indigo-700 border-2 border-indigo-200 rounded-lg bg-indigo-50\"\n                    readOnly\n                  />\n                </div>\n                <div className=\"bg-white rounded-lg p-4 shadow-sm\">\n                  <label className=\"block text-lg font-medium text-gray-700 mb-2\">Total Discount</label>\n                  <input\n                    type=\"number\"\n                    value={calculations.totalDiscount.toFixed(2)}\n                    className=\"w-full px-4 py-3 text-xl font-bold text-green-700 border-2 border-green-200 rounded-lg bg-green-50\"\n                    readOnly\n                  />\n                </div>\n                <div className=\"bg-white rounded-lg p-4 shadow-sm\">\n                  <label className=\"block text-lg font-medium text-gray-700 mb-2\">Total GST</label>\n                  <input\n                    type=\"number\"\n                    value={calculations.totalGST.toFixed(2)}\n                    className=\"w-full px-4 py-3 text-xl font-bold text-blue-700 border-2 border-blue-200 rounded-lg bg-blue-50\"\n                    readOnly\n                  />\n                </div>\n                <div className=\"bg-white rounded-lg p-4 shadow-sm\">\n                  <label className=\"block text-lg font-medium text-gray-700 mb-2\">Net Amount</label>\n                  <input\n                    type=\"number\"\n                    value={calculations.netAmount.toFixed(2)}\n                    className=\"w-full px-4 py-3 text-xl font-bold text-purple-700 border-2 border-purple-200 rounded-lg bg-purple-50\"\n                    readOnly\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex justify-end\">\n              <button\n                type=\"submit\"\n                disabled={loading}\n                className=\"px-8 py-4 text-lg bg-gradient-to-r from-green-600 to-teal-600 text-white rounded-lg hover:from-green-700 hover:to-teal-700 disabled:from-gray-400 disabled:to-gray-500 transition-all duration-300 shadow-lg font-bold\"\n              >\n                {loading ? 'Creating...' : 'Create Return Bill'}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PurchaseReturnForm; \n\n\n","import React, { useState, useMemo } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = 'https://medicine-inventory-management-backend.onrender.com';\r\n\r\nconst PurchaseReturnSearch = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [supplierName, setSupplierName] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [activeTab, setActiveTab] = useState('search');\r\n  \r\n  // Filter states\r\n  const [filters, setFilters] = useState({\r\n    searchTerm: '',\r\n    expiryStatus: 'all',\r\n    sortBy: 'itemName',\r\n    sortOrder: 'asc',\r\n    dateRange: 'all',\r\n    priceRange: 'all'\r\n  });\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/api/purchase-returns/returnable-quantities`, {\r\n        params: { email, supplierName }\r\n      });\r\n\r\n      const items = response.data.map(item => ({\r\n        ...item,\r\n        totalPurchaseValue: item.purchasedQuantity * item.purchaseRate,\r\n        totalSaleValue: item.soldQuantity * item.mrp,\r\n        avgPrice: item.purchaseRate,\r\n        expiryStatus: getExpiryStatus(item.expiryDate)\r\n      }));\r\n\r\n      setSearchResults(items);\r\n      setActiveTab('results');\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Error fetching data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getExpiryStatus = (expiryDate) => {\r\n    const today = new Date();\r\n    const expiry = new Date(expiryDate);\r\n    const monthsLeft = (expiry - today) / (1000 * 60 * 60 * 24 * 30);\r\n    if (monthsLeft < 0) return 'expired';\r\n    if (monthsLeft < 3) return 'nearExpiry';\r\n    return 'good';\r\n  };\r\n\r\n  const calculateTotals = () => {\r\n    return filteredResults.reduce((acc, item) => ({\r\n      totalPurchaseValue: acc.totalPurchaseValue + (item.purchasedQuantity * item.purchaseRate),\r\n      totalSaleValue: acc.totalSaleValue + (item.soldQuantity * item.mrp),\r\n      totalPurchasedQty: acc.totalPurchasedQty + item.purchasedQuantity,\r\n      totalSoldQty: acc.totalSoldQty + item.soldQuantity\r\n    }), {\r\n      totalPurchaseValue: 0,\r\n      totalSaleValue: 0,\r\n      totalPurchasedQty: 0,\r\n      totalSoldQty: 0\r\n    });\r\n  };\r\n\r\n  // Filter and sort results\r\n  const filteredResults = useMemo(() => {\r\n    return searchResults\r\n      .filter(item => {\r\n        const matchesSearch = item.itemName.toLowerCase().includes(filters.searchTerm.toLowerCase()) ||\r\n                            item.batch.toLowerCase().includes(filters.searchTerm.toLowerCase());\r\n        const matchesExpiry = filters.expiryStatus === 'all' || item.expiryStatus === filters.expiryStatus;\r\n        \r\n        // Date range filter\r\n        const matchesDateRange = filters.dateRange === 'all' || (() => {\r\n          const purchaseDate = new Date(item.purchaseDate);\r\n          const today = new Date();\r\n          const daysDiff = Math.floor((today - purchaseDate) / (1000 * 60 * 60 * 24));\r\n          \r\n          switch (filters.dateRange) {\r\n            case 'last7days': return daysDiff <= 7;\r\n            case 'last30days': return daysDiff <= 30;\r\n            case 'last90days': return daysDiff <= 90;\r\n            default: return true;\r\n          }\r\n        })();\r\n\r\n        // Price range filter\r\n        const matchesPriceRange = filters.priceRange === 'all' || (() => {\r\n          const price = item.purchaseRate;\r\n          switch (filters.priceRange) {\r\n            case 'low': return price <= 100;\r\n            case 'medium': return price > 100 && price <= 500;\r\n            case 'high': return price > 500;\r\n            default: return true;\r\n          }\r\n        })();\r\n\r\n        return matchesSearch && matchesExpiry && matchesDateRange && matchesPriceRange;\r\n      })\r\n      .sort((a, b) => {\r\n        const order = filters.sortOrder === 'asc' ? 1 : -1;\r\n        if (filters.sortBy === 'itemName') {\r\n          return order * a.itemName.localeCompare(b.itemName);\r\n        }\r\n        if (filters.sortBy === 'expiryDate') {\r\n          return order * (new Date(a.expiryDate) - new Date(b.expiryDate));\r\n        }\r\n        if (filters.sortBy === 'purchaseRate') {\r\n          return order * (a.purchaseRate - b.purchaseRate);\r\n        }\r\n        return order * (a[filters.sortBy] - b[filters.sortBy]);\r\n      });\r\n  }, [searchResults, filters]);\r\n\r\n  const renderSearchForm = () => (\r\n    <div className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-200\">\r\n      <form onSubmit={handleSearch} className=\"space-y-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"w-full px-4 py-2 border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Supplier Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={supplierName}\r\n              onChange={(e) => setSupplierName(e.target.value)}\r\n              className=\"w-full px-4 py-2 border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-end\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className=\"px-6 py-2 bg-gradient-to-r from-indigo-600 to-purple-600 text-white rounded-lg hover:from-indigo-700 hover:to-purple-700 disabled:from-gray-400 disabled:to-gray-500 transition-all duration-300 shadow-md\"\r\n          >\r\n            {loading ? (\r\n              <div className=\"flex items-center space-x-2\">\r\n                <svg className=\"animate-spin h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                </svg>\r\n                <span>Searching...</span>\r\n              </div>\r\n            ) : (\r\n              'Search'\r\n            )}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  const renderFilters = () => (\r\n    <div className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-200 mb-6\">\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Search</label>\r\n          <input\r\n            type=\"text\"\r\n            value={filters.searchTerm}\r\n            onChange={(e) => setFilters(prev => ({ ...prev, searchTerm: e.target.value }))}\r\n            placeholder=\"Search items...\"\r\n            className=\"w-full px-4 py-2 border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Expiry Status</label>\r\n          <select\r\n            value={filters.expiryStatus}\r\n            onChange={(e) => setFilters(prev => ({ ...prev, expiryStatus: e.target.value }))}\r\n            className=\"w-full px-4 py-2 border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\r\n          >\r\n            <option value=\"all\">All</option>\r\n            <option value=\"expired\">Expired</option>\r\n            <option value=\"nearExpiry\">Near Expiry</option>\r\n            <option value=\"good\">Good</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Date Range</label>\r\n          <select\r\n            value={filters.dateRange}\r\n            onChange={(e) => setFilters(prev => ({ ...prev, dateRange: e.target.value }))}\r\n            className=\"w-full px-4 py-2 border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\r\n          >\r\n            <option value=\"all\">All Time</option>\r\n            <option value=\"last7days\">Last 7 Days</option>\r\n            <option value=\"last30days\">Last 30 Days</option>\r\n            <option value=\"last90days\">Last 90 Days</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Price Range</label>\r\n          <select\r\n            value={filters.priceRange}\r\n            onChange={(e) => setFilters(prev => ({ ...prev, priceRange: e.target.value }))}\r\n            className=\"w-full px-4 py-2 border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\r\n          >\r\n            <option value=\"all\">All Prices</option>\r\n            <option value=\"low\">Low (≤ ₹100)</option>\r\n            <option value=\"medium\">Medium (₹100-500)</option>\r\n            <option value=\"high\">High ({'>'} ₹500)</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Sort By</label>\r\n          <select\r\n            value={filters.sortBy}\r\n            onChange={(e) => setFilters(prev => ({ ...prev, sortBy: e.target.value }))}\r\n            className=\"w-full px-4 py-2 border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\r\n          >\r\n            <option value=\"itemName\">Item Name</option>\r\n            <option value=\"expiryDate\">Expiry Date</option>\r\n            <option value=\"purchaseRate\">Purchase Rate</option>\r\n            <option value=\"purchasedQuantity\">Quantity</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderResults = () => {\r\n    if (searchResults.length === 0) return null;\r\n\r\n    const totals = calculateTotals();\r\n    const statCards = [\r\n      { label: 'Total Purchase Value', value: `₹${totals.totalPurchaseValue.toFixed(2)}`, icon: '💰', color: 'blue' },\r\n      { label: 'Total Sale Value', value: `₹${totals.totalSaleValue.toFixed(2)}`, icon: '📈', color: 'green' },\r\n      { label: 'Total Purchased Quantity', value: totals.totalPurchasedQty, icon: '📦', color: 'purple' },\r\n      { label: 'Total Sold Quantity', value: totals.totalSoldQty, icon: '🛍️', color: 'orange' }\r\n    ];\r\n\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n          {statCards.map((stat, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"bg-white rounded-xl shadow-md p-6 border border-gray-200 transform transition-all duration-300 hover:shadow-lg hover:scale-[1.02]\"\r\n            >\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-sm text-gray-500 font-medium\">{stat.label}</p>\r\n                  <p className=\"text-2xl font-bold text-gray-900 mt-1\">{stat.value}</p>\r\n                </div>\r\n                <span className=\"text-3xl\">{stat.icon}</span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {renderFilters()}\r\n\r\n        <div className=\"bg-white rounded-xl shadow-lg overflow-hidden border border-gray-200\">\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  {[\"Item Name\", \"Batch\", \"Purchased Qty\", \"Sold Qty\", \"Avg Price\", \"Total Purchase\", \"Total Sale\", \"Expiry Date\"].map(header => (\r\n                    <th key={header} className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      {header}\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {filteredResults.map((item, idx) => (\r\n                  <tr key={idx} className=\"hover:bg-gray-50 transition-colors duration-200\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{item.itemName}</td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{item.batch}</td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{item.purchasedQuantity}</td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{item.soldQuantity}</td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">₹{item.avgPrice.toFixed(2)}</td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">₹{item.totalPurchaseValue.toFixed(2)}</td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">₹{item.totalSaleValue.toFixed(2)}</td>\r\n                    <td className={`px-6 py-4 whitespace-nowrap text-sm ${\r\n                      item.expiryStatus === 'expired' ? 'text-red-500' :\r\n                      item.expiryStatus === 'nearExpiry' ? 'text-yellow-600' :\r\n                      'text-green-600'\r\n                    }`}>\r\n                      {new Date(item.expiryDate).toLocaleDateString()}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 via-white to-gray-100 p-6\">\r\n      <div className=\"max-w-7xl mx-auto space-y-8\">\r\n        <div className=\"text-center\">\r\n          <h1 className=\"text-4xl font-bold tracking-tight text-gray-900\">🔎 Purchase Return Search</h1>\r\n          <p className=\"text-lg text-gray-600 mt-2\">View and manage purchase return data efficiently</p>\r\n        </div>\r\n\r\n        {/* Tabs */}\r\n        <div className=\"flex space-x-4 border-b border-gray-200\">\r\n          <button\r\n            onClick={() => setActiveTab('search')}\r\n            className={`px-4 py-2 text-sm font-medium rounded-t-lg transition-colors duration-200 ${\r\n              activeTab === 'search'\r\n                ? 'bg-white text-blue-600 border-b-2 border-blue-600'\r\n                : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'\r\n            }`}\r\n          >\r\n            Search\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('results')}\r\n            className={`px-4 py-2 text-sm font-medium rounded-t-lg transition-colors duration-200 ${\r\n              activeTab === 'results'\r\n                ? 'bg-white text-blue-600 border-b-2 border-blue-600'\r\n                : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'\r\n            }`}\r\n            disabled={searchResults.length === 0}\r\n          >\r\n            Results {searchResults.length > 0 && `(${searchResults.length})`}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Tab Content */}\r\n        <div className=\"mt-6\">\r\n          {activeTab === 'search' && renderSearchForm()}\r\n          {activeTab === 'results' && renderResults()}\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"fixed bottom-4 right-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded shadow-lg\">\r\n            {error}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PurchaseReturnSearch;\r\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Import for redirection\nimport { jsPDF } from 'jspdf';\nimport 'jspdf-autotable';\n\nconst SaleReturnForm = () => {\n  const navigate = useNavigate();\n  \n  const [formData, setFormData] = useState({\n    email: '',\n    returnInvoiceNumber: '',\n    date: new Date().toISOString().split('T')[0],\n    receiptNumber: '',\n    customerName: '',\n    items: [\n      {\n        itemName: '',\n        batch: '',\n        quantity: 0,\n        discount: 0,\n        amount: 0,\n        availableQuantity: 0,\n        purchaseRate: 0,\n        gstPercentage: 0,\n        gstAmount: 0,\n        returnableQuantity: 0,\n        availableBatches: []\n      }\n    ],\n    totalAmount: 0,\n    totalDiscount: 0,\n    gstAmount: 0,\n    netAmount: 0\n  });\n\n  const [saleBills, setSaleBills] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [fetchingBills, setFetchingBills] = useState(false);\n  const [showLoadBillButton, setShowLoadBillButton] = useState(false);\n\n  // Check authentication status immediately\n  useEffect(() => {\n    const checkAuthentication = () => {\n      const token = localStorage.getItem('token');\n      const email = localStorage.getItem('email');\n      \n      if (token && email) {\n        console.log(\"Token found:\", token);\n        console.log(\"Email loaded from localStorage:\", email);\n        setFormData(prevState => ({\n          ...prevState,\n          email: email\n        }));\n      } else {\n        console.warn(\"No token or email found in localStorage\");\n        setError(\"You must be logged in to access this page\");\n        \n        // Redirect to login after a short delay\n        setTimeout(() => {\n          navigate('/login');\n        }, 3000);\n      }\n    };\n\n    checkAuthentication();\n  }, [navigate]);\n\n  // Fetch medicines when customer name is entered\n  useEffect(() => {\n    if (formData.customerName && formData.email) {\n      setShowLoadBillButton(true);\n    } else {\n      setShowLoadBillButton(false);\n      setSaleBills([]);\n    }\n  }, [formData.customerName, formData.email]);\n\n  const handleLoadBill = async () => {\n    try {\n      setFetchingBills(true);\n      const token = localStorage.getItem('token');\n      \n      // Get returnable quantities from the new endpoint\n      const response = await axios.get('https://medicine-inventory-management-backend.onrender.com/api/bills/returnable-quantities', {\n        params: {\n          email: formData.email,\n          partyName: formData.customerName\n        },\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (response.data && Array.isArray(response.data)) {\n        // Store the medicines data with returnable quantities\n        const formattedMedicines = response.data.map(medicine => ({\n          itemName: medicine.itemName,\n          batch: medicine.batch,\n          quantity: medicine.returnableQuantity, // This is now the actual returnable quantity\n          soldQuantity: medicine.soldQuantity,\n          returnedQuantity: medicine.returnedQuantity,\n          mrp: medicine.mrp,\n          purchaseRate: medicine.purchaseRate // Include purchase rate\n        }));\n        \n        setSaleBills(formattedMedicines);\n        setSuccess('Medicines loaded successfully');\n        setTimeout(() => setSuccess(''), 3000);\n      } else {\n        setError('No medicines found for this customer');\n        setTimeout(() => setError(''), 3000);\n      }\n    } catch (err) {\n      console.error('Error fetching medicines:', err);\n      if (err.response && err.response.status === 401) {\n        setError('Session expired. Please login again.');\n        setTimeout(() => {\n          localStorage.removeItem('token');\n          localStorage.removeItem('email');\n          window.location.href = '/login';\n        }, 3000);\n      } else {\n        setError('Failed to load medicines');\n        setTimeout(() => setError(''), 3000);\n      }\n    } finally {\n      setFetchingBills(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleItemNameChange = (index, e) => {\n    const { value } = e.target;\n    const updatedItems = [...formData.items];\n    \n    // Update item name\n    updatedItems[index] = {\n      ...updatedItems[index],\n      itemName: value,\n      batch: '', // Reset batch when item name changes\n      availableBatches: [] // Reset available batches\n    };\n    \n    // Find all matching medicines (case-insensitive)\n    const matchingMedicines = saleBills.filter(medicine => \n      medicine.itemName.toLowerCase() === value.toLowerCase()\n    );\n    \n    if (matchingMedicines.length > 0) {\n      // Store available batches for dropdown\n      updatedItems[index] = {\n        ...updatedItems[index],\n        itemName: matchingMedicines[0].itemName, // Use the original case from backend\n        availableBatches: matchingMedicines.map(medicine => ({\n          batch: medicine.batch,\n          quantity: medicine.quantity,\n          mrp: medicine.mrp,\n          purchaseRate: medicine.purchaseRate\n        }))\n      };\n\n      // If only one batch, auto-select it\n      if (matchingMedicines.length === 1) {\n        const medicine = matchingMedicines[0];\n        updatedItems[index] = {\n          ...updatedItems[index],\n          batch: medicine.batch,\n          availableQuantity: medicine.quantity,\n          returnableQuantity: medicine.quantity,\n          purchaseRate: medicine.purchaseRate,\n          amount: medicine.purchaseRate,\n          quantity: 1\n        };\n      }\n    }\n    \n    setFormData(prevState => ({ ...prevState, items: updatedItems }));\n  };\n\n  const handleBatchChange = (index, e) => {\n    const { value } = e.target;\n    const updatedItems = [...formData.items];\n    const item = updatedItems[index];\n    \n    // Find the selected batch details\n    const selectedBatch = item.availableBatches.find(batch => batch.batch === value);\n    \n    if (selectedBatch) {\n      updatedItems[index] = {\n        ...item,\n        batch: selectedBatch.batch,\n        availableQuantity: selectedBatch.quantity,\n        returnableQuantity: selectedBatch.quantity,\n        purchaseRate: selectedBatch.purchaseRate,\n        amount: selectedBatch.purchaseRate,\n        quantity: 1\n      };\n    }\n    \n    setFormData(prevState => ({ ...prevState, items: updatedItems }));\n  };\n\n  const handleItemChange = (index, e) => {\n    const { name, value } = e.target;\n    const updatedItems = [...formData.items];\n    const item = updatedItems[index];\n    \n    // Handle numeric inputs\n    if (['quantity', 'discount', 'gstPercentage'].includes(name)) {\n      const numericValue = parseFloat(value) || 0;\n      \n      // Validate quantity against available quantity\n      if (name === 'quantity') {\n        if (numericValue > item.availableQuantity) {\n          setError(`Cannot return ${numericValue} units of ${item.itemName} (Batch: ${item.batch}). Maximum returnable quantity is ${item.availableQuantity}`);\n          return;\n        }\n        if (numericValue <= 0) {\n          setError('Return quantity must be greater than 0');\n          return;\n        }\n      }\n      \n      updatedItems[index] = {\n        ...item,\n        [name]: numericValue\n      };\n      \n      // Recalculate amounts when any value changes\n      const totalAmount = item.purchaseRate * updatedItems[index].quantity;\n      const discountAmount = (totalAmount * updatedItems[index].discount) / 100;\n      const amountAfterDiscount = totalAmount - discountAmount;\n      const gstAmount = (amountAfterDiscount * updatedItems[index].gstPercentage) / 100;\n      \n      updatedItems[index] = {\n        ...updatedItems[index],\n        totalAmount: totalAmount,\n        discountAmount: discountAmount,\n        amount: amountAfterDiscount,\n        gstAmount: gstAmount,\n        netAmount: amountAfterDiscount + gstAmount\n      };\n    } else {\n      updatedItems[index] = {\n        ...item,\n        [name]: value\n      };\n    }\n    \n    setFormData(prevState => ({ ...prevState, items: updatedItems }));\n    calculateTotals(updatedItems);\n  };\n\n  const addItemRow = () => {\n    setFormData(prevState => ({\n      ...prevState,\n      items: [\n        ...prevState.items,\n        {\n          itemName: '',\n          batch: '',\n          quantity: 0,\n          discount: 0,\n          amount: 0,\n          availableQuantity: 0,\n          purchaseRate: 0,\n          gstPercentage: 0,\n          gstAmount: 0,\n          returnableQuantity: 0,\n          availableBatches: []\n        }\n      ]\n    }));\n  };\n\n  const removeItemRow = (index) => {\n    const updatedItems = [...formData.items];\n    updatedItems.splice(index, 1);\n    setFormData(prevState => ({ ...prevState, items: updatedItems }));\n    calculateTotals(updatedItems);\n  };\n\n  const calculateTotals = (items) => {\n    let totalAmount = 0;\n    let totalDiscount = 0;\n    let totalGstAmount = 0;\n    let netAmount = 0;\n\n    items.forEach(item => {\n      const itemTotalAmount = item.purchaseRate * item.quantity;\n      const itemDiscountAmount = (itemTotalAmount * item.discount) / 100;\n      const itemAmountAfterDiscount = itemTotalAmount - itemDiscountAmount;\n      const itemGstAmount = (itemAmountAfterDiscount * item.gstPercentage) / 100;\n      const itemNetAmount = itemAmountAfterDiscount + itemGstAmount;\n\n      totalAmount += itemTotalAmount;\n      totalDiscount += itemDiscountAmount;\n      totalGstAmount += itemGstAmount;\n      netAmount += itemNetAmount;\n    });\n\n    setFormData(prevState => ({\n      ...prevState,\n      totalAmount,\n      totalDiscount,\n      gstAmount: totalGstAmount,\n      netAmount\n    }));\n  };\n\n  const validateForm = () => {\n    if (!formData.email) {\n      setError(\"User email not found. Please try logging in again.\");\n      return false;\n    }\n    \n    if (!formData.customerName) {\n      setError(\"Please enter a customer name\");\n      return false;\n    }\n    \n    if (!formData.returnInvoiceNumber) {\n      setError(\"Please enter a return invoice number\");\n      return false;\n    }\n    \n    if (!formData.receiptNumber) {\n      setError(\"Please enter a receipt number\");\n      return false;\n    }\n    \n    // Validate items\n    for (let i = 0; i < formData.items.length; i++) {\n      const item = formData.items[i];\n      if (!item.itemName || !item.batch) {\n        setError(`Please fill in all required fields for item #${i+1}`);\n        return false;\n      }\n      \n      if (item.quantity <= 0) {\n        setError(`Quantity must be greater than 0 for item #${i+1}`);\n        return false;\n      }\n    }\n    \n    return true;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    \n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n\n      // Create a map of medicines with their quantities (case-insensitive)\n      const medicineMap = new Map();\n      saleBills.forEach(medicine => {\n        const key = `${medicine.itemName.toLowerCase()}-${medicine.batch}`;\n        medicineMap.set(key, {\n          quantity: parseInt(medicine.quantity) || 0,\n          itemName: medicine.itemName,\n          batch: medicine.batch\n        });\n      });\n\n      // Validate each item's returnable quantity\n      for (const item of formData.items) {\n        const key = `${item.itemName.toLowerCase()}-${item.batch}`;\n        const medicineData = medicineMap.get(key);\n\n        if (!medicineData) {\n          setError(`Item ${item.itemName} (Batch: ${item.batch}) was not sold to this customer`);\n          setLoading(false);\n          return;\n        }\n\n        if (item.quantity > medicineData.quantity) {\n          setError(`Cannot return ${item.quantity} units of ${item.itemName} (Batch: ${item.batch}). Maximum returnable quantity is ${medicineData.quantity}`);\n          setLoading(false);\n          return;\n        }\n      }\n\n      // If all validations pass, submit the form\n      const response = await axios.post('https://medicine-inventory-management-backend.onrender.com/api/bills/return', formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (response.data) {\n        setSuccess('Sale return bill created successfully!');\n        \n        // Update saleBills to reflect the returned quantities\n        const updatedSaleBills = saleBills.map(medicine => {\n          const returnedItem = formData.items.find(item => \n            item.itemName.toLowerCase() === medicine.itemName.toLowerCase() &&\n            item.batch === medicine.batch\n          );\n          \n          if (returnedItem) {\n            return {\n              ...medicine,\n              quantity: medicine.quantity - returnedItem.quantity\n            };\n          }\n          return medicine;\n        });\n        \n        setSaleBills(updatedSaleBills);\n        \n        // Reset form but keep email and customer\n        setFormData(prevState => ({\n          ...prevState,\n          returnInvoiceNumber: '',\n          receiptNumber: '',\n          items: [\n            {\n              itemName: '',\n              batch: '',\n              quantity: 0,\n              discount: 0,\n              amount: 0,\n              availableQuantity: 0,\n              purchaseRate: 0,\n              gstPercentage: 0,\n              gstAmount: 0,\n              returnableQuantity: 0,\n              availableBatches: []\n            }\n          ],\n          totalAmount: 0,\n          totalDiscount: 0,\n          gstAmount: 0,\n          netAmount: 0\n        }));\n      } else {\n        setError('Error creating sale return bill: ' + (response.data?.message || 'Unknown error'));\n      }\n      \n      setLoading(false);\n    } catch (err) {\n      setLoading(false);\n      if (err.response && err.response.status === 401) {\n        setError('Session expired. Please login again.');\n        setTimeout(() => {\n          localStorage.removeItem('token');\n          localStorage.removeItem('email');\n          window.location.href = '/login';\n        }, 3000);\n      } else if (err.response && err.response.data && err.response.data.message) {\n        setError(err.response.data.message);\n      } else {\n        setError('Error creating sale return bill: ' + (err.message || 'Check your network connection'));\n      }\n      console.error('Submit error:', err);\n    }\n  };\n\n  const handlePrint = () => {\n    const doc = new jsPDF();\n    \n    // Add header with gradient background\n    doc.setFillColor(41, 128, 185); // Blue color\n    doc.rect(0, 0, 210, 40, 'F');\n    \n    // Add title\n    doc.setTextColor(255, 255, 255);\n    doc.setFontSize(20);\n    doc.text('Sale Return Bill', 105, 20, { align: 'center' });\n    \n    // Add invoice details\n    doc.setTextColor(0, 0, 0);\n    doc.setFontSize(12);\n    doc.text(`Return Invoice Number: ${formData.returnInvoiceNumber}`, 20, 50);\n    doc.text(`Date: ${formData.date}`, 20, 60);\n    doc.text(`Customer Name: ${formData.customerName}`, 20, 70);\n    doc.text(`Receipt Number: ${formData.receiptNumber}`, 20, 80);\n    \n    // Add items table\n    const tableColumn = [\n      'Item Name',\n      'Batch',\n      'Quantity',\n      'Purchase Rate',\n      'Discount %',\n      'GST %',\n      'Amount'\n    ];\n    \n    const tableRows = formData.items.map(item => [\n      item.itemName,\n      item.batch,\n      item.quantity,\n      `₹${item.purchaseRate}`,\n      `${item.discount}%`,\n      `${item.gstPercentage}%`,\n      `₹${item.amount}`\n    ]);\n    \n    doc.autoTable({\n      head: [tableColumn],\n      body: tableRows,\n      startY: 90,\n      theme: 'grid',\n      headStyles: {\n        fillColor: [41, 128, 185],\n        textColor: 255,\n        fontSize: 12,\n        fontStyle: 'bold'\n      },\n      bodyStyles: {\n        fontSize: 10\n      },\n      alternateRowStyles: {\n        fillColor: [240, 240, 240]\n      }\n    });\n    \n    // Add summary\n    const finalY = doc.lastAutoTable.finalY + 20;\n    doc.setFontSize(12);\n    doc.text('Bill Summary', 20, finalY);\n    \n    doc.setFontSize(10);\n    doc.text(`Total Amount: ₹${formData.totalAmount.toFixed(2)}`, 20, finalY + 10);\n    doc.text(`Total Discount: ₹${formData.totalDiscount.toFixed(2)}`, 20, finalY + 20);\n    doc.text(`GST Amount: ₹${formData.gstAmount.toFixed(2)}`, 20, finalY + 30);\n    \n    doc.setFontSize(12);\n    doc.setFont(undefined, 'bold');\n    doc.text(`Net Amount: ₹${formData.netAmount.toFixed(2)}`, 20, finalY + 45);\n    \n    // Add footer\n    doc.setFontSize(8);\n    doc.setTextColor(100, 100, 100);\n    doc.text('This is a computer-generated document. No signature required.', 105, 280, { align: 'center' });\n    \n    // Save the PDF\n    doc.save(`SaleReturn_${formData.returnInvoiceNumber}.pdf`);\n  };\n\n  // Render a message if not authenticated\n  if (!formData.email) {\n    return (\n      <div className=\"min-h-screen bg-slate-50 flex items-center justify-center\">\n        <div className=\"bg-white p-8 rounded-xl shadow-lg max-w-md w-full\">\n          <div className=\"text-center\">\n            <svg className=\"mx-auto h-12 w-12 text-red-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n            </svg>\n            <h3 className=\"mt-2 text-lg font-medium text-gray-900\">Authentication Required</h3>\n            <p className=\"mt-1 text-sm text-gray-500\">\n              {error || \"You must be logged in to access this page. Redirecting to login...\"}\n            </p>\n            <div className=\"mt-6\">\n              <button\n                type=\"button\"\n                onClick={() => navigate('/login')}\n                className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n              >\n                Go to Login\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-slate-50\">\n      <div className=\"max-w-7xl mx-auto px-4 py-10 sm:px-6 lg:px-8\">\n        <div className=\"bg-white rounded-xl shadow-lg overflow-hidden\">\n          {/* Header */}\n          <div className=\"bg-gradient-to-r from-blue-600 to-indigo-700 px-6 py-4\">\n            <h1 className=\"text-2xl font-bold text-white\">Sale Return Form</h1>\n            <p className=\"text-blue-100 text-sm mt-1\">Process customer returns and refunds</p>\n          </div>\n          \n          <div className=\"p-6\">\n            {/* Alerts */}\n            {error && (\n              <div className=\"mb-6 bg-red-50 border-l-4 border-red-500 p-4 rounded-md\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">\n                    <svg className=\"h-5 w-5 text-red-500\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </div>\n                  <div className=\"ml-3\">\n                    <p className=\"text-sm text-red-700\">{error}</p>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            {success && (\n              <div className=\"mb-6 bg-green-50 border-l-4 border-green-500 p-4 rounded-md\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">\n                    <svg className=\"h-5 w-5 text-green-500\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </div>\n                  <div className=\"ml-3\">\n                    <p className=\"text-sm text-green-700\">{success}</p>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            <form onSubmit={handleSubmit} className=\"space-y-8\">\n              {/* Form Header Fields */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-6 gap-y-4\">\n                <div className=\"space-y-2\">\n                  <label className=\"block text-sm font-medium text-gray-700\">Email</label>\n                  <div className=\"relative\">\n                    <input\n                      type=\"email\"\n                      name=\"email\"\n                      value={formData.email}\n                      className=\"w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md shadow-sm text-gray-700 focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      readOnly\n                    />\n                  </div>\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <label className=\"block text-sm font-medium text-gray-700\">Date</label>\n                  <input\n                    type=\"date\"\n                    name=\"date\"\n                    value={formData.date}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    required\n                  />\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <label className=\"block text-sm font-medium text-gray-700\">Return Invoice Number</label>\n                  <input\n                    type=\"text\"\n                    name=\"returnInvoiceNumber\"\n                    value={formData.returnInvoiceNumber}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"Enter return invoice no.\"\n                    required\n                  />\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <label className=\"block text-sm font-medium text-gray-700\">Receipt Number</label>\n                  <input\n                    type=\"text\"\n                    name=\"receiptNumber\"\n                    value={formData.receiptNumber}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"Enter receipt no.\"\n                    required\n                  />\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <label className=\"block text-sm font-medium text-gray-700\">Customer Name</label>\n                  <div className=\"relative\">\n                    <input\n                      type=\"text\"\n                      name=\"customerName\"\n                      value={formData.customerName}\n                      onChange={handleInputChange}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      placeholder=\"Enter customer name\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                {showLoadBillButton && (\n                  <div className=\"flex items-end\">\n                    <button\n                      type=\"button\"\n                      onClick={handleLoadBill}\n                      disabled={fetchingBills}\n                      className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:bg-blue-400\"\n                    >\n                      {fetchingBills ? (\n                        <>\n                          <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                            <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                          </svg>\n                          Loading...\n                        </>\n                      ) : (\n                        'Load Bill'\n                      )}\n                    </button>\n                  </div>\n                )}\n              </div>\n\n              {/* Items Section */}\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <h2 className=\"text-lg font-medium text-gray-900\">Return Items</h2>\n                  <button\n                    type=\"button\"\n                    onClick={addItemRow}\n                    className=\"inline-flex items-center px-3 py-1.5 border border-transparent text-sm font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                  >\n                    <svg className=\"mr-1.5 h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\" clipRule=\"evenodd\" />\n                    </svg>\n                    Add Item\n                  </button>\n                </div>\n                \n                <div className=\"overflow-x-auto bg-white border border-gray-200 rounded-lg shadow-sm\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Item Name</th>\n                        <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Batch</th>\n                        <th scope=\"col\" className=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Available Qty</th>\n                        <th scope=\"col\" className=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Returnable Qty</th>\n                        <th scope=\"col\" className=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Purchase Rate</th>\n                        <th scope=\"col\" className=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Return Qty</th>\n                        <th scope=\"col\" className=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Discount %</th>\n                        <th scope=\"col\" className=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">GST %</th>\n                        <th scope=\"col\" className=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Amount</th>\n                        <th scope=\"col\" className=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {formData.items.map((item, index) => (\n                        <tr key={index} className=\"hover:bg-gray-50\">\n                          <td className=\"px-4 py-2\">\n                            <input\n                              type=\"text\"\n                              name=\"itemName\"\n                              value={item.itemName}\n                              onChange={(e) => handleItemNameChange(index, e)}\n                              className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                              placeholder=\"Enter medicine name\"\n                              required\n                            />\n                          </td>\n                          <td className=\"px-4 py-2\">\n                            <select\n                              name=\"batch\"\n                              value={item.batch}\n                              onChange={(e) => handleBatchChange(index, e)}\n                              className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                              required\n                            >\n                              <option value=\"\">Select Batch</option>\n                              {item.availableBatches && item.availableBatches.map((batch, batchIndex) => (\n                                <option key={batchIndex} value={batch.batch}>\n                                  {batch.batch} (Available: {batch.quantity})\n                                </option>\n                              ))}\n                            </select>\n                          </td>\n                          <td className=\"px-4 py-2 text-center\">\n                            <input\n                              type=\"number\"\n                              name=\"availableQuantity\"\n                              value={item.availableQuantity}\n                              readOnly\n                              className=\"w-20 px-2 py-1 text-sm text-center bg-gray-50 border border-gray-300 rounded-md\"\n                            />\n                          </td>\n                          <td className=\"px-4 py-2 text-center\">\n                            <input\n                              type=\"number\"\n                              name=\"returnableQuantity\"\n                              value={item.returnableQuantity}\n                              readOnly\n                              className=\"w-20 px-2 py-1 text-sm text-center bg-gray-50 border border-gray-300 rounded-md\"\n                            />\n                          </td>\n                          <td className=\"px-4 py-2 text-center\">\n                            <div className=\"flex items-center\">\n                              <span className=\"text-gray-500 mr-1\">₹</span>\n                              <input\n                                type=\"number\"\n                                name=\"purchaseRate\"\n                                value={item.purchaseRate}\n                                onChange={(e) => handleItemChange(index, e)}\n                                step=\"0.01\"\n                                min=\"0\"\n                                className=\"w-24 px-2 py-1 text-sm text-center border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                                required\n                              />\n                            </div>\n                          </td>\n                          <td className=\"px-4 py-2 text-center\">\n                            <input\n                              type=\"number\"\n                              name=\"quantity\"\n                              value={item.quantity}\n                              onChange={(e) => handleItemChange(index, e)}\n                              min=\"1\"\n                              max={item.returnableQuantity}\n                              className=\"w-20 px-2 py-1 text-sm text-center border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                              required\n                            />\n                          </td>\n                          <td className=\"px-4 py-2 text-center\">\n                            <div className=\"flex items-center\">\n                              <input\n                                type=\"number\"\n                                name=\"discount\"\n                                value={item.discount}\n                                onChange={(e) => handleItemChange(index, e)}\n                                step=\"0.01\"\n                                min=\"0\"\n                                max=\"100\"\n                                className=\"w-16 px-2 py-1 text-sm text-center border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                              />\n                              <span className=\"text-gray-500 ml-1\">%</span>\n                            </div>\n                          </td>\n                          <td className=\"px-4 py-2 text-center\">\n                            <div className=\"flex items-center\">\n                              <input\n                                type=\"number\"\n                                name=\"gstPercentage\"\n                                value={item.gstPercentage}\n                                onChange={(e) => handleItemChange(index, e)}\n                                step=\"0.01\"\n                                min=\"0\"\n                                max=\"100\"\n                                className=\"w-16 px-2 py-1 text-sm text-center border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                              />\n                              <span className=\"text-gray-500 ml-1\">%</span>\n                            </div>\n                          </td>\n                          <td className=\"px-4 py-2 text-center\">\n                            <div className=\"flex items-center\">\n                              <span className=\"text-gray-500 mr-1\">₹</span>\n                              <input\n                                type=\"number\"\n                                name=\"amount\"\n                                value={item.amount}\n                                readOnly\n                                className=\"w-24 px-2 py-1 text-sm text-center bg-gray-50 border border-gray-300 rounded-md\"\n                              />\n                            </div>\n                          </td>\n                          <td className=\"px-4 py-2 text-center\">\n                            <button\n                              type=\"button\"\n                              onClick={() => removeItemRow(index)}\n                              className=\"text-sm font-medium text-red-600 hover:text-red-800 disabled:text-gray-400\"\n                              disabled={formData.items.length === 1}\n                            >\n                              <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                              </svg>\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n\n              {/* Summary Section */}\n              <div className=\"bg-gray-50 rounded-lg p-6 border border-gray-200 shadow-sm\">\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Bill Summary</h3>\n                <div className=\"max-w-md\">\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"text-sm text-gray-700\">Total Amount:</div>\n                    <div className=\"text-sm font-medium text-right\">₹{formData.totalAmount.toFixed(2)}</div>\n                    <div className=\"text-sm text-gray-700\">Total Discount:</div>\n                    <div className=\"text-sm font-medium text-right text-red-600\">- ₹{formData.totalDiscount.toFixed(2)}</div>\n                    \n                    <div className=\"text-sm text-gray-700\">GST (18%):</div>\n                    <div className=\"text-sm font-medium text-right\">₹{formData.gstAmount.toFixed(2)}</div>\n                    \n                    <div className=\"pt-2 border-t border-gray-200 text-base font-medium text-gray-900\">Net Refund Amount:</div>\n                    <div className=\"pt-2 border-t border-gray-200 text-base font-bold text-right text-blue-700\">₹{formData.netAmount.toFixed(2)}</div>\n                  </div>\n                </div>\n              </div>\n              \n              {/* Form Actions */}\n              <div className=\"flex justify-end pt-2\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setFormData({\n                      ...formData,\n                      returnInvoiceNumber: '',\n                      receiptNumber: '',\n                      items: [\n                        {\n                          itemName: '',\n                          batch: '',\n                          quantity: 0,\n                          discount: 0,\n                          amount: 0,\n                          availableQuantity: 0,\n                          purchaseRate: 0,\n                          gstPercentage: 0,\n                          gstAmount: 0,\n                          returnableQuantity: 0,\n                          availableBatches: []\n                        }\n                      ],\n                      totalAmount: 0,\n                      totalDiscount: 0,\n                      gstAmount: 0,\n                      netAmount: 0\n                    });\n                    setError('');\n                    setSuccess('');\n                  }}\n                  className=\"py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                >\n                  Reset Form\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={handlePrint}\n                  className=\"mr-3 py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                >\n                  <svg className=\"inline-block w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z\" />\n                  </svg>\n                  Print PDF\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"ml-3 inline-flex justify-center py-2 px-6 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:bg-blue-400 disabled:cursor-not-allowed\"\n                  disabled={loading || !formData.email}\n                >\n                  {loading ? (\n                    <span className=\"flex items-center\">\n                      <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                      </svg>\n                      Processing...\n                    </span>\n                  ) : (\n                    'Create Sale Return Bill'\n                  )}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SaleReturnForm;","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\n\nconst ExpiryBillForm = () => {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n\n  const handleOptionSelect = (option) => {\n    setLoading(true);\n    try {\n      if (option.toLowerCase() === 'client') {\n        navigate('/expiry-bill/client');\n      } else if (option.toLowerCase() === 'supplier') {\n        navigate('/expiry-bill/supplier');\n      } else {\n        navigate(`/expiry/${option.toLowerCase()}`);\n      }\n    } catch (error) {\n      toast.error('Something went wrong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 p-6\">\n      <div className=\"max-w-6xl mx-auto space-y-12\">\n        {/* Header Section */}\n        <div className=\"text-center\">\n          <h1 className=\"text-5xl font-bold text-blue-600 mb-4\">Expiry Bill Management</h1>\n          <p className=\"text-xl text-gray-600 mb-4\">Efficiently manage expired items through client or supplier returns.</p>\n          <p className=\"text-lg text-gray-500 max-w-3xl mx-auto\">\n            Our system helps you track and process expired medicines, ensuring proper documentation \n            and maintaining compliance with regulatory requirements. Choose the appropriate return \n            type below to proceed.\n          </p>\n        </div>\n\n        {/* Options Section */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {/* Client Expiry Return Option */}\n          <div \n            onClick={() => handleOptionSelect('client')}\n            className=\"cursor-pointer transform hover:scale-105 transition-all duration-300\"\n          >\n            <div className=\"bg-gradient-to-br from-orange-500 to-red-500 rounded-3xl p-1\">\n              <div className=\"bg-white rounded-3xl p-6 h-full\">\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"bg-orange-100 rounded-2xl p-4\">\n                    <svg \n                      xmlns=\"http://www.w3.org/2000/svg\" \n                      className=\"h-8 w-8 text-orange-500\"\n                      fill=\"none\" \n                      viewBox=\"0 0 24 24\" \n                      stroke=\"currentColor\"\n                    >\n                      <path \n                        strokeLinecap=\"round\" \n                        strokeLinejoin=\"round\" \n                        strokeWidth={2} \n                        d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                      />\n                    </svg>\n                  </div>\n                  <div className=\"flex-1\">\n                    <h2 className=\"text-2xl font-bold text-gray-800\">Client Expiry Return</h2>\n                    <p className=\"text-gray-600 mt-1\">Process expired items returned by clients</p>\n                    <ul className=\"mt-4 space-y-2 text-sm text-gray-500\">\n                      <li className=\"flex items-center\">\n                        <svg className=\"w-4 h-4 mr-2 text-orange-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\"/>\n                        </svg>\n                        Record client details and return date\n                      </li>\n                      <li className=\"flex items-center\">\n                        <svg className=\"w-4 h-4 mr-2 text-orange-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\"/>\n                        </svg>\n                        Generate client return receipt\n                      </li>\n                      <li className=\"flex items-center\">\n                        <svg className=\"w-4 h-4 mr-2 text-orange-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\"/>\n                        </svg>\n                        Update inventory automatically\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Supplier Expiry Return Option */}\n          <div \n            onClick={() => handleOptionSelect('supplier')}\n            className=\"cursor-pointer transform hover:scale-105 transition-all duration-300\"\n          >\n            <div className=\"bg-gradient-to-br from-emerald-500 to-green-500 rounded-3xl p-1\">\n              <div className=\"bg-white rounded-3xl p-6 h-full\">\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"bg-emerald-100 rounded-2xl p-4\">\n                    <svg \n                      xmlns=\"http://www.w3.org/2000/svg\" \n                      className=\"h-8 w-8 text-emerald-500\"\n                      fill=\"none\" \n                      viewBox=\"0 0 24 24\" \n                      stroke=\"currentColor\"\n                    >\n                      <path \n                        strokeLinecap=\"round\" \n                        strokeLinejoin=\"round\" \n                        strokeWidth={2} \n                        d=\"M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4m0 5c0 2.21-3.582 4-8 4s-8-1.79-8-4\"\n                      />\n                    </svg>\n                  </div>\n                  <div className=\"flex-1\">\n                    <h2 className=\"text-2xl font-bold text-gray-800\">Supplier Expiry Return</h2>\n                    <p className=\"text-gray-600 mt-1\">Return expired items to suppliers</p>\n                    <ul className=\"mt-4 space-y-2 text-sm text-gray-500\">\n                      <li className=\"flex items-center\">\n                        <svg className=\"w-4 h-4 mr-2 text-emerald-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\"/>\n                        </svg>\n                        Track supplier return policies\n                      </li>\n                      <li className=\"flex items-center\">\n                        <svg className=\"w-4 h-4 mr-2 text-emerald-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\"/>\n                        </svg>\n                        Generate return documentation\n                      </li>\n                      <li className=\"flex items-center\">\n                        <svg className=\"w-4 h-4 mr-2 text-emerald-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\"/>\n                        </svg>\n                        Manage credit notes and refunds\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Support Section */}\n        <div className=\"bg-white rounded-3xl p-8 shadow-xl bg-opacity-60 backdrop-blur-lg\">\n          <div className=\"text-center\">\n            <h2 className=\"text-3xl font-bold text-gray-800 mb-4\">Need Assistance?</h2>\n            <p className=\"text-gray-600 text-lg mb-8\">\n              Our support team is available to guide you through any expiry return process.\n            </p>\n            <div className=\"flex justify-center space-x-4\">\n              <button \n                className=\"px-8 py-3 bg-blue-600 text-white font-semibold rounded-full hover:bg-blue-700 transition-colors\"\n                onClick={() => window.location.href = '/support'}\n              >\n                Contact Support\n              </button>\n              <button \n                className=\"px-8 py-3 border-2 border-blue-600 text-blue-600 font-semibold rounded-full hover:bg-blue-50 transition-colors\"\n                onClick={() => window.location.href = '/docs'}\n              >\n                View Documentation\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Loading Overlay */}\n      {loading && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-white\"></div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ExpiryBillForm;","import React, { useState } from 'react';\r\n\r\nconst BillGenerationDocs = () => {\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-blue-50 p-8 font-sans\">\r\n      <div className=\"max-w-6xl mx-auto space-y-12\">\r\n        {/* Header */}\r\n        <div className=\"text-center space-y-6\">\r\n          <div className=\"inline-block bg-blue-600 text-white px-8 py-4 rounded-2xl shadow-lg\">\r\n            <h1 className=\"text-4xl font-bold\">📑 Bill Generation Helper Guide</h1>\r\n            <p className=\"mt-2 opacity-90\">Version 2.1.0 | Updated: August 2025</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Getting Started */}\r\n        <section className=\"bg-white p-8 rounded-xl shadow-sm\">\r\n          <h2 className=\"text-3xl font-bold text-blue-600 mb-6\">🏁 Getting Started</h2>\r\n          <div className=\"space-y-6\">\r\n            <div className=\"bg-blue-50 p-6 rounded-lg\">\r\n              <h3 className=\"text-xl font-semibold mb-4\">System Requirements</h3>\r\n              <ul className=\"space-y-3\">\r\n                <li className=\"flex items-center\">\r\n                  <svg className=\"w-5 h-5 mr-2 text-green-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                    <path d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"/>\r\n                  </svg>\r\n                  Modern web browser (Chrome/Firefox/Safari)\r\n                </li>\r\n                <li className=\"flex items-center\">\r\n                  <svg className=\"w-5 h-5 mr-2 text-green-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                    <path d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"/>\r\n                  </svg>\r\n                  Active internet connection\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* Quick Start Flow */}\r\n        <section className=\"bg-white p-8 rounded-xl shadow-sm\">\r\n          <h2 className=\"text-3xl font-bold text-blue-600 mb-6\">🧭 Quick Start Flow</h2>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n            {['1. Access Bill Console', '2. Enter Party Details', '3. Add Items', '4. Generate Bill'].map((step, index) => (\r\n              <div key={index} className=\"bg-gray-50 p-4 rounded-lg border border-blue-200 text-center\">\r\n                <div className=\"w-8 h-8 bg-blue-600 text-white rounded-full mb-2 mx-auto flex items-center justify-center\">\r\n                  {index + 1}\r\n                </div>\r\n                <p className=\"font-medium\">{step}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </section>\r\n\r\n        {/* Step-by-Step Instructions */}\r\n        <section className=\"bg-white p-8 rounded-xl shadow-sm\">\r\n          <h2 className=\"text-3xl font-bold text-blue-600 mb-6\">📋 Step-by-Step Instructions</h2>\r\n          \r\n          <div className=\"space-y-8\">\r\n            <div className=\"bg-gray-50 p-6 rounded-lg\">\r\n              <h3 className=\"text-xl font-semibold mb-4\">1. Party Information</h3>\r\n              <div className=\"bg-white p-4 rounded border border-dashed border-gray-300 mb-4\">\r\n                [Customer Details Form Preview]\r\n              </div>\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div className=\"bg-red-50 p-4 rounded\">\r\n                  <h4 className=\"font-medium text-red-600\">⚠️ Mandatory Fields</h4>\r\n                  <ul className=\"list-disc pl-4 mt-2\">\r\n                    <li>GSTIN (15-digit format)</li>\r\n                    <li>Shipping Address</li>\r\n                    <li>Contact Number</li>\r\n                  </ul>\r\n                </div>\r\n                <div className=\"bg-green-50 p-4 rounded\">\r\n                  <h4 className=\"font-medium text-green-600\">💡 Pro Tip</h4>\r\n                  <p>Use the 🔍 search icon to find existing customers</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* Tax Information */}\r\n        <section className=\"bg-white p-8 rounded-xl shadow-sm\">\r\n          <h3 className=\"text-2xl font-semibold mb-4\">💸 Tax Configuration</h3>\r\n          <table className=\"w-full border-collapse\">\r\n            <thead>\r\n              <tr className=\"bg-blue-50\">\r\n                <th className=\"p-3 text-left\">Type</th>\r\n                <th className=\"p-3 text-left\">Rate</th>\r\n                <th className=\"p-3 text-left\">Code</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {[\r\n                { type: 'GST', rate: '18%', code: 'G18' },\r\n                { type: 'IGST', rate: '12%', code: 'IG12' },\r\n                { type: 'Discount', rate: '5%', code: 'DISC05' }\r\n              ].map((tax, index) => (\r\n                <tr key={index} className=\"border-b\">\r\n                  <td className=\"p-3\">{tax.type}</td>\r\n                  <td className=\"p-3\">{tax.rate}</td>\r\n                  <td className=\"p-3 font-mono\">{tax.code}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </section>\r\n\r\n        {/* Support Section */}\r\n        <section className=\"bg-yellow-50 p-8 rounded-xl shadow-sm\">\r\n          <h2 className=\"text-3xl font-bold text-blue-600 mb-6\">🆘 Support Channels</h2>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            {[\r\n              { method: 'Chat Support', availability: '24/7', response: '<5 mins' },\r\n              { method: 'Email', availability: 'Business Hours', response: '4-8 hrs' },\r\n              { method: 'Phone', availability: '10AM-7PM IST', response: 'Immediate' }\r\n            ].map((channel, index) => (\r\n              <div key={index} className=\"bg-white p-6 rounded-lg shadow-sm\">\r\n                <h3 className=\"text-xl font-semibold mb-2\">{channel.method}</h3>\r\n                <p className=\"text-sm\">⏳ {channel.availability}</p>\r\n                <p className=\"text-sm\">⏱️ {channel.response} response</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </section>\r\n\r\n        {/* Footer */}\r\n        <div className=\"text-center space-y-4\">\r\n          <div className=\"flex justify-center gap-4\">\r\n            <button className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors\">\r\n              Download PDF\r\n            </button>\r\n            <button className=\"bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition-colors\">\r\n              Watch Video\r\n            </button>\r\n          </div>\r\n          <p className=\"text-gray-600\">Emergency Contact: helpdesk@pharmabill.com | +91 63713 87040</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BillGenerationDocs;","import React, { useState, useMemo } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = 'https://medicine-inventory-management-backend.onrender.com';\r\n\r\nconst PurchaseReturnSearch = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [supplierName, setSupplierName] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [activeTab, setActiveTab] = useState('search');\r\n  \r\n  // Filter states\r\n  const [filters, setFilters] = useState({\r\n    searchTerm: '',\r\n    expiryStatus: 'all',\r\n    sortBy: 'itemName',\r\n    sortOrder: 'asc',\r\n    dateRange: 'all',\r\n    priceRange: 'all'\r\n  });\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/api/purchase-returns/returnable-quantities`, {\r\n        params: { email, supplierName }\r\n      });\r\n\r\n      const items = response.data.map(item => ({\r\n        ...item,\r\n        totalPurchaseValue: item.purchasedQuantity * item.purchaseRate,\r\n        totalSaleValue: item.soldQuantity * item.mrp,\r\n        avgPrice: item.purchaseRate,\r\n        expiryStatus: getExpiryStatus(item.expiryDate)\r\n      }));\r\n\r\n      setSearchResults(items);\r\n      setActiveTab('results');\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Error fetching data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getExpiryStatus = (expiryDate) => {\r\n    const today = new Date();\r\n    const expiry = new Date(expiryDate);\r\n    const monthsLeft = (expiry - today) / (1000 * 60 * 60 * 24 * 30);\r\n    if (monthsLeft < 0) return 'expired';\r\n    if (monthsLeft < 3) return 'nearExpiry';\r\n    return 'good';\r\n  };\r\n\r\n  const calculateTotals = () => {\r\n    return filteredResults.reduce((acc, item) => ({\r\n      totalPurchaseValue: acc.totalPurchaseValue + (item.purchasedQuantity * item.purchaseRate),\r\n      totalSaleValue: acc.totalSaleValue + (item.soldQuantity * item.mrp),\r\n      totalPurchasedQty: acc.totalPurchasedQty + item.purchasedQuantity,\r\n      totalSoldQty: acc.totalSoldQty + item.soldQuantity\r\n    }), {\r\n      totalPurchaseValue: 0,\r\n      totalSaleValue: 0,\r\n      totalPurchasedQty: 0,\r\n      totalSoldQty: 0\r\n    });\r\n  };\r\n\r\n  // Filter and sort results\r\n  const filteredResults = useMemo(() => {\r\n    return searchResults\r\n      .filter(item => {\r\n        const matchesSearch = item.itemName.toLowerCase().includes(filters.searchTerm.toLowerCase()) ||\r\n                            item.batch.toLowerCase().includes(filters.searchTerm.toLowerCase());\r\n        const matchesExpiry = filters.expiryStatus === 'all' || item.expiryStatus === filters.expiryStatus;\r\n        \r\n        // Date range filter\r\n        const matchesDateRange = filters.dateRange === 'all' || (() => {\r\n          const purchaseDate = new Date(item.purchaseDate);\r\n          const today = new Date();\r\n          const daysDiff = Math.floor((today - purchaseDate) / (1000 * 60 * 60 * 24));\r\n          \r\n          switch (filters.dateRange) {\r\n            case 'last7days': return daysDiff <= 7;\r\n            case 'last30days': return daysDiff <= 30;\r\n            case 'last90days': return daysDiff <= 90;\r\n            default: return true;\r\n          }\r\n        })();\r\n\r\n        // Price range filter\r\n        const matchesPriceRange = filters.priceRange === 'all' || (() => {\r\n          const price = item.purchaseRate;\r\n          switch (filters.priceRange) {\r\n            case 'low': return price <= 100;\r\n            case 'medium': return price > 100 && price <= 500;\r\n            case 'high': return price > 500;\r\n            default: return true;\r\n          }\r\n        })();\r\n\r\n        return matchesSearch && matchesExpiry && matchesDateRange && matchesPriceRange;\r\n      })\r\n      .sort((a, b) => {\r\n        const order = filters.sortOrder === 'asc' ? 1 : -1;\r\n        if (filters.sortBy === 'itemName') {\r\n          return order * a.itemName.localeCompare(b.itemName);\r\n        }\r\n        if (filters.sortBy === 'expiryDate') {\r\n          return order * (new Date(a.expiryDate) - new Date(b.expiryDate));\r\n        }\r\n        if (filters.sortBy === 'purchaseRate') {\r\n          return order * (a.purchaseRate - b.purchaseRate);\r\n        }\r\n        return order * (a[filters.sortBy] - b[filters.sortBy]);\r\n      });\r\n  }, [searchResults, filters]);\r\n\r\n  const renderSearchForm = () => (\r\n    <div className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-200\">\r\n      <form onSubmit={handleSearch} className=\"space-y-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"w-full px-4 py-2 border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Supplier Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={supplierName}\r\n              onChange={(e) => setSupplierName(e.target.value)}\r\n              className=\"w-full px-4 py-2 border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-end\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className=\"px-6 py-2 bg-gradient-to-r from-indigo-600 to-purple-600 text-white rounded-lg hover:from-indigo-700 hover:to-purple-700 disabled:from-gray-400 disabled:to-gray-500 transition-all duration-300 shadow-md\"\r\n          >\r\n            {loading ? (\r\n              <div className=\"flex items-center space-x-2\">\r\n                <svg className=\"animate-spin h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                </svg>\r\n                <span>Searching...</span>\r\n              </div>\r\n            ) : (\r\n              'Search'\r\n            )}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  const renderFilters = () => (\r\n    <div className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-200 mb-6\">\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Search</label>\r\n          <input\r\n            type=\"text\"\r\n            value={filters.searchTerm}\r\n            onChange={(e) => setFilters(prev => ({ ...prev, searchTerm: e.target.value }))}\r\n            placeholder=\"Search items...\"\r\n            className=\"w-full px-4 py-2 border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Expiry Status</label>\r\n          <select\r\n            value={filters.expiryStatus}\r\n            onChange={(e) => setFilters(prev => ({ ...prev, expiryStatus: e.target.value }))}\r\n            className=\"w-full px-4 py-2 border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\r\n          >\r\n            <option value=\"all\">All</option>\r\n            <option value=\"expired\">Expired</option>\r\n            <option value=\"nearExpiry\">Near Expiry</option>\r\n            <option value=\"good\">Good</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Date Range</label>\r\n          <select\r\n            value={filters.dateRange}\r\n            onChange={(e) => setFilters(prev => ({ ...prev, dateRange: e.target.value }))}\r\n            className=\"w-full px-4 py-2 border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\r\n          >\r\n            <option value=\"all\">All Time</option>\r\n            <option value=\"last7days\">Last 7 Days</option>\r\n            <option value=\"last30days\">Last 30 Days</option>\r\n            <option value=\"last90days\">Last 90 Days</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Price Range</label>\r\n          <select\r\n            value={filters.priceRange}\r\n            onChange={(e) => setFilters(prev => ({ ...prev, priceRange: e.target.value }))}\r\n            className=\"w-full px-4 py-2 border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\r\n          >\r\n            <option value=\"all\">All Prices</option>\r\n            <option value=\"low\">Low (≤ ₹100)</option>\r\n            <option value=\"medium\">Medium (₹100-500)</option>\r\n            <option value=\"high\">High ({'>'} ₹500)</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Sort By</label>\r\n          <select\r\n            value={filters.sortBy}\r\n            onChange={(e) => setFilters(prev => ({ ...prev, sortBy: e.target.value }))}\r\n            className=\"w-full px-4 py-2 border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\r\n          >\r\n            <option value=\"itemName\">Item Name</option>\r\n            <option value=\"expiryDate\">Expiry Date</option>\r\n            <option value=\"purchaseRate\">Purchase Rate</option>\r\n            <option value=\"purchasedQuantity\">Quantity</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderResults = () => {\r\n    if (searchResults.length === 0) return null;\r\n\r\n    const totals = calculateTotals();\r\n    const statCards = [\r\n      { label: 'Total Purchase Value', value: `₹${totals.totalPurchaseValue.toFixed(2)}`, icon: '💰', color: 'blue' },\r\n      { label: 'Total Sale Value', value: `₹${totals.totalSaleValue.toFixed(2)}`, icon: '📈', color: 'green' },\r\n      { label: 'Total Purchased Quantity', value: totals.totalPurchasedQty, icon: '📦', color: 'purple' },\r\n      { label: 'Total Sold Quantity', value: totals.totalSoldQty, icon: '🛍️', color: 'orange' }\r\n    ];\r\n\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n          {statCards.map((stat, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"bg-white rounded-xl shadow-md p-6 border border-gray-200 transform transition-all duration-300 hover:shadow-lg hover:scale-[1.02]\"\r\n            >\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-sm text-gray-500 font-medium\">{stat.label}</p>\r\n                  <p className=\"text-2xl font-bold text-gray-900 mt-1\">{stat.value}</p>\r\n                </div>\r\n                <span className=\"text-3xl\">{stat.icon}</span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {renderFilters()}\r\n\r\n        <div className=\"bg-white rounded-xl shadow-lg overflow-hidden border border-gray-200\">\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  {[\"Item Name\", \"Batch\", \"Purchased Qty\", \"Sold Qty\", \"Avg Price\", \"Total Purchase\", \"Total Sale\", \"Expiry Date\"].map(header => (\r\n                    <th key={header} className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      {header}\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {filteredResults.map((item, idx) => (\r\n                  <tr key={idx} className=\"hover:bg-gray-50 transition-colors duration-200\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{item.itemName}</td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{item.batch}</td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{item.purchasedQuantity}</td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{item.soldQuantity}</td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">₹{item.avgPrice.toFixed(2)}</td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">₹{item.totalPurchaseValue.toFixed(2)}</td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">₹{item.totalSaleValue.toFixed(2)}</td>\r\n                    <td className={`px-6 py-4 whitespace-nowrap text-sm ${\r\n                      item.expiryStatus === 'expired' ? 'text-red-500' :\r\n                      item.expiryStatus === 'nearExpiry' ? 'text-yellow-600' :\r\n                      'text-green-600'\r\n                    }`}>\r\n                      {new Date(item.expiryDate).toLocaleDateString()}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 via-white to-gray-100 p-6\">\r\n      <div className=\"max-w-7xl mx-auto space-y-8\">\r\n        <div className=\"text-center\">\r\n          <h1 className=\"text-4xl font-bold tracking-tight text-gray-900\">🔎 Purchase Return Search</h1>\r\n          <p className=\"text-lg text-gray-600 mt-2\">View and manage purchase return data efficiently</p>\r\n        </div>\r\n\r\n        {/* Tabs */}\r\n        <div className=\"flex space-x-4 border-b border-gray-200\">\r\n          <button\r\n            onClick={() => setActiveTab('search')}\r\n            className={`px-4 py-2 text-sm font-medium rounded-t-lg transition-colors duration-200 ${\r\n              activeTab === 'search'\r\n                ? 'bg-white text-blue-600 border-b-2 border-blue-600'\r\n                : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'\r\n            }`}\r\n          >\r\n            Search\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('results')}\r\n            className={`px-4 py-2 text-sm font-medium rounded-t-lg transition-colors duration-200 ${\r\n              activeTab === 'results'\r\n                ? 'bg-white text-blue-600 border-b-2 border-blue-600'\r\n                : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'\r\n            }`}\r\n            disabled={searchResults.length === 0}\r\n          >\r\n            Results {searchResults.length > 0 && `(${searchResults.length})`}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Tab Content */}\r\n        <div className=\"mt-6\">\r\n          {activeTab === 'search' && renderSearchForm()}\r\n          {activeTab === 'results' && renderResults()}\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"fixed bottom-4 right-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded shadow-lg\">\r\n            {error}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PurchaseReturnSearch;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst PartyInvoiceSearch = () => {\r\n  const [partyName, setPartyName] = useState('');\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Check authentication on component mount\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const email = localStorage.getItem('email');\r\n    if (!token || !email) {\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n\r\n  const searchInvoices = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      \r\n      const token = localStorage.getItem('token');\r\n      const email = localStorage.getItem('email');\r\n      \r\n      if (!token || !email) {\r\n        setError('Please login first');\r\n        navigate('/login');\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(\r\n        `https://medicine-inventory-management-backend.onrender.com/api/bills/party-invoices/${encodeURIComponent(partyName)}`,\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n      );\r\n\r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Failed to fetch invoices');\r\n      }\r\n\r\n      setInvoices(data.invoices);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setInvoices([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-indigo-50 to-purple-50 p-6\">\r\n      <div className=\"max-w-6xl mx-auto bg-white rounded-2xl shadow-xl p-8\">\r\n        <div className=\"mb-8 text-center\">\r\n          <h2 className=\"text-3xl font-bold text-indigo-600 mb-2\">Search Customer Invoices</h2>\r\n          <div className=\"h-1 w-20 bg-indigo-500 mx-auto rounded-full\"></div>\r\n          <p className=\"mt-4 text-gray-600\">\r\n            Enter the customer's name to view their purchase history and invoices.\r\n            This is the same name you used when creating sale bills or return bills.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex gap-4\">\r\n            <input\r\n              type=\"text\"\r\n              value={partyName}\r\n              onChange={(e) => setPartyName(e.target.value)}\r\n              placeholder=\"Enter customer name\"\r\n              className=\"flex-1 rounded-lg border-2 border-indigo-100 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 p-3 transition-colors\"\r\n            />\r\n            <button\r\n              onClick={searchInvoices}\r\n              disabled={loading || !partyName.trim()}\r\n              className=\"px-6 py-3 bg-indigo-600 hover:bg-indigo-700 text-white rounded-lg font-semibold transition-colors disabled:bg-gray-400\"\r\n            >\r\n              {loading ? 'Searching...' : 'Search'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"mb-4 p-4 bg-red-100 text-red-700 rounded-lg\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        {invoices.length > 0 && (\r\n          <div className=\"rounded-xl border-2 border-indigo-50 overflow-hidden\">\r\n            <table className=\"w-full\">\r\n              <thead className=\"bg-indigo-600 text-white\">\r\n                <tr>\r\n                  <th className=\"px-4 py-3 text-left\">Invoice Number</th>\r\n                  <th className=\"px-4 py-3 text-left\">Date</th>\r\n                  <th className=\"px-4 py-3 text-left\">Items</th>\r\n                  <th className=\"px-4 py-3 text-right\">Total Amount</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"divide-y divide-indigo-50\">\r\n                {invoices.map((invoice) => (\r\n                  <tr key={invoice._id} className=\"hover:bg-indigo-50\">\r\n                    <td className=\"px-4 py-3\">{invoice.saleInvoiceNumber}</td>\r\n                    <td className=\"px-4 py-3\">{new Date(invoice.date).toLocaleDateString()}</td>\r\n                    <td className=\"px-4 py-3\">\r\n                      <ul className=\"list-disc list-inside\">\r\n                        {invoice.items.map((item, index) => (\r\n                          <li key={index}>\r\n                            {item.itemName} - {item.quantity} x ₹{item.mrp}\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </td>\r\n                    <td className=\"px-4 py-3 text-right\">₹{invoice.totalAmount}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n\r\n        {!loading && invoices.length === 0 && !error && (\r\n          <div className=\"text-center text-gray-500\">\r\n            No invoices found for this customer. Make sure you're using the exact name as entered in the sale bill.\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PartyInvoiceSearch; ","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsPDF } from 'jspdf';\nimport 'jspdf-autotable';\n\nfunction MedicineSalesSummary() {\n  const navigate = useNavigate();\n  const [salesData, setSalesData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [medicineName, setMedicineName] = useState('');\n  const [availableMedicines, setAvailableMedicines] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [partyName, setPartyName] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [availableParties, setAvailableParties] = useState([]);\n  \n  // Refs for debouncing\n  const suggestionTimeoutRef = useRef(null);\n  const inputRef = useRef(null);\n\n  // Memoize the fetch function\n  const fetchSalesData = useCallback(async (params) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const token = localStorage.getItem('token');\n      console.log('Fetching sales data with params:', params);\n      console.log('Token present:', !!token);\n      \n      const response = await axios.get('https://medicine-inventory-management-backend.onrender.com/api/bills/medicine-sales', {\n        params,\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      console.log('API Response:', response.data);\n\n      if (response.data && response.data.salesDetails) {\n        // Extract unique parties from the response data for dropdown\n        const uniqueParties = [...new Set(response.data.salesDetails.map(sale => sale.partyName))];\n        setAvailableParties(uniqueParties);\n        setSalesData(response.data);\n        setError(null);\n      } else {\n        console.log('No sales data in response:', response.data);\n        setError('No sales records found for the selected criteria');\n        setSalesData(null);\n      }\n    } catch (err) {\n      console.error('Error details:', {\n        message: err.message,\n        response: err.response?.data,\n        status: err.response?.status\n      });\n      \n      if (err.response?.status === 401) {\n        setError('Please log in to view sales data');\n        navigate('/login');\n      } else if (err.response?.status === 404) {\n        setError('No sales records found for the selected criteria');\n      } else {\n        setError(err.response?.data?.message || 'Failed to fetch sales data. Please try again.');\n      }\n      setSalesData(null);\n    } finally {\n      setLoading(false);\n    }\n  }, [navigate]);\n\n  // Handle input changes for suggestions only\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    setMedicineName(value);\n    \n    // Clear existing timeouts for suggestions\n    if (suggestionTimeoutRef.current) {\n      clearTimeout(suggestionTimeoutRef.current);\n    }\n\n    // Update suggestions with debounce\n    suggestionTimeoutRef.current = setTimeout(() => {\n      if (value.length > 0) {\n        const filtered = availableMedicines.filter(medicine =>\n          medicine.toLowerCase().includes(value.toLowerCase())\n        );\n        setSuggestions(filtered);\n        setShowSuggestions(true);\n      } else {\n        setSuggestions([]);\n        setShowSuggestions(false);\n      }\n    }, 300);\n  };\n\n  // Build search parameters\n  const buildSearchParams = () => {\n    const token = localStorage.getItem('token');\n    const email = localStorage.getItem('email');\n\n    if (!token || !email) {\n      return null;\n    }\n\n    const formatDate = (dateString) => {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toISOString().split('T')[0];\n    };\n\n    const params = {\n      email,\n      startDate: formatDate(startDate) || formatDate(new Date(new Date().setFullYear(new Date().getFullYear() - 1))),\n      endDate: formatDate(endDate) || formatDate(new Date())\n    };\n\n    if (medicineName.trim()) {\n      params.medicineName = medicineName.trim();\n    }\n\n    // Fix: Properly add partyName to params if it exists\n    if (partyName && partyName.trim() !== '') {\n      params.partyName = partyName.trim();\n    }\n\n    return params;\n  };\n\n  // Handle search button click\n  const handleSearch = () => {\n    if (!medicineName.trim()) {\n      setError('Please enter a medicine name');\n      return;\n    }\n\n    const params = buildSearchParams();\n    if (!params) return;\n    \n    fetchSalesData(params);\n  };\n\n  // Handle filter button click (for party and date filters)\n  const handleFilterSearch = () => {\n    const params = buildSearchParams();\n    if (!params) return;\n    \n    if (!params.medicineName) {\n      setError('Please enter a medicine name');\n      return;\n    }\n    \n    fetchSalesData(params);\n  };\n\n  // Handle suggestion selection\n  const handleSuggestionClick = (suggestion) => {\n    setMedicineName(suggestion);\n    setShowSuggestions(false);\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  // Handle input blur with proper timing\n  const handleInputBlur = () => {\n    if (suggestionTimeoutRef.current) {\n      clearTimeout(suggestionTimeoutRef.current);\n    }\n    \n    suggestionTimeoutRef.current = setTimeout(() => {\n      setShowSuggestions(false);\n    }, 200);\n  };\n\n  // Handle input focus\n  const handleInputFocus = () => {\n    if (suggestionTimeoutRef.current) {\n      clearTimeout(suggestionTimeoutRef.current);\n    }\n\n    if (medicineName.length > 0) {\n      const filtered = availableMedicines.filter(medicine =>\n        medicine.toLowerCase().includes(medicineName.toLowerCase())\n      );\n      setSuggestions(filtered);\n      setShowSuggestions(true);\n    }\n  };\n\n  // Reset all filters\n  const handleResetFilters = () => {\n    setMedicineName('');\n    setPartyName('');\n    setStartDate('');\n    setEndDate('');\n    setSalesData(null);\n    setError(null);\n  };\n\n  // Generate and download PDF\n  const handleDownloadPDF = () => {\n    if (!salesData || !salesData.salesDetails || salesData.salesDetails.length === 0) {\n      setError('No data available to download');\n      return;\n    }\n\n    const doc = new jsPDF();\n    \n    // Set document properties\n    doc.setProperties({\n      title: `Medicine Sales Report - ${medicineName}`,\n      subject: 'Medicine Sales Summary',\n      author: 'Pharmacy Management System',\n      creator: 'Pharmacy App'\n    });\n    \n    // Add title\n    doc.setFontSize(20);\n    doc.setTextColor(44, 62, 80);\n    doc.text('Medicine Sales Summary', 105, 15, { align: 'center' });\n    \n    // Add medicine name\n    doc.setFontSize(14);\n    doc.text(`Medicine: ${medicineName}`, 14, 25);\n    \n    // Add date range\n    const dateRange = `Date Range: ${startDate || 'All time'} to ${endDate || 'Present'}`;\n    doc.text(dateRange, 14, 32);\n    \n    // Add filter info if applicable\n    if (partyName) {\n      doc.text(`Party: ${partyName}`, 14, 39);\n    }\n    \n    // Add summary stats\n    doc.setFillColor(52, 152, 219);\n    doc.rect(14, 45, 182, 25, 'F');\n    doc.setTextColor(255, 255, 255);\n    doc.setFontSize(12);\n    doc.text('Sales Summary', 105, 52, { align: 'center' });\n    \n    const totalSales = salesData.salesDetails.reduce((sum, sale) => sum + (sale.mrp * sale.quantity - sale.discount), 0).toFixed(2);\n    const totalQuantity = salesData.salesDetails.reduce((sum, sale) => sum + sale.quantity, 0);\n    const avgPrice = (totalSales / totalQuantity).toFixed(2);\n    \n    doc.text(`Total Sales: ₹${totalSales}`, 24, 62);\n    doc.text(`Total Quantity: ${totalQuantity} units`, 85, 62);\n    doc.text(`Avg. Price: ₹${avgPrice}`, 150, 62);\n    \n    // Create table\n    const tableColumn = [\"Invoice #\", \"Date\", \"Party\", \"Qty\", \"MRP(₹)\", \"Discount(₹)\", \"Total(₹)\"];\n    const tableRows = [];\n    \n    salesData.salesDetails.forEach(sale => {\n      const formattedDate = new Date(sale.date).toLocaleDateString();\n      const total = (sale.mrp * sale.quantity - sale.discount).toFixed(2);\n      const rowData = [\n        sale.saleInvoiceNumber,\n        formattedDate,\n        sale.partyName,\n        sale.quantity,\n        sale.mrp,\n        sale.discount,\n        total\n      ];\n      tableRows.push(rowData);\n    });\n    \n    doc.autoTable({\n      head: [tableColumn],\n      body: tableRows,\n      startY: 75,\n      theme: 'grid',\n      styles: {\n        fontSize: 10,\n        cellPadding: 3,\n        lineColor: [189, 195, 199]\n      },\n      headStyles: {\n        fillColor: [41, 128, 185],\n        textColor: [255, 255, 255],\n        fontSize: 11,\n        fontStyle: 'bold'\n      },\n      alternateRowStyles: {\n        fillColor: [240, 240, 240]\n      }\n    });\n    \n    // Add footer\n    const pageCount = doc.internal.getNumberOfPages();\n    for (let i = 1; i <= pageCount; i++) {\n      doc.setPage(i);\n      doc.setFontSize(10);\n      doc.setTextColor(128, 128, 128);\n      doc.text(\n        `Generated on: ${new Date().toLocaleString()} - Page ${i} of ${pageCount}`,\n        105, \n        doc.internal.pageSize.height - 10, \n        { align: 'center' }\n      );\n    }\n    \n    // Save the PDF\n    doc.save(`Medicine_Sales_Report_${medicineName.replace(/\\s+/g, '_')}.pdf`);\n  };\n\n  // Cleanup function\n  useEffect(() => {\n    return () => {\n      if (suggestionTimeoutRef.current) {\n        clearTimeout(suggestionTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Initial fetch of available medicines\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const email = localStorage.getItem('email');\n\n    if (!token || !email) {\n      navigate('/login');\n      return;\n    }\n\n    const fetchAvailableMedicines = async () => {\n      try {\n        const response = await axios.get('https://medicine-inventory-management-backend.onrender.com/api/inventory', {\n          params: { email },\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        const medicines = response.data.map(item => item.itemName);\n        setAvailableMedicines([...new Set(medicines)]);\n      } catch (err) {\n        console.error('Error fetching available medicines:', err);\n      }\n    };\n\n    fetchAvailableMedicines();\n  }, [navigate]);\n\n  const calculateTotal = (sale) => {\n    return (sale.mrp * sale.quantity - sale.discount).toFixed(2);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-100 flex justify-center items-center\">\n        <div className=\"bg-white p-8 rounded-lg shadow-lg flex flex-col items-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-600 mb-4\"></div>\n          <div className=\"text-xl text-gray-700\">Loading sales data...</div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error && !salesData) {\n  return (\n      <div className=\"min-h-screen bg-gradient-to-br from-indigo-50 to-blue-50 p-8\">\n        <div className=\"max-w-4xl mx-auto bg-white rounded-xl shadow-md p-8\">\n          <h1 className=\"text-2xl font-bold text-indigo-800 mb-6 border-b pb-4\">Medicine Sales Summary</h1>\n          \n          <div className=\"text-center py-8\">\n            <div className=\"mb-4\">\n              <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M12 20a8 8 0 100-16 8 8 0 000 16z\" />\n              </svg>\n            </div>\n            <div className=\"text-gray-600 text-lg mb-4\">{error}</div>\n            <div className=\"flex justify-center space-x-4\">\n              <button\n                onClick={handleResetFilters}\n                className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition duration-200\"\n              >\n                Reset Filters\n              </button>\n              <button\n                onClick={() => navigate('/dashboard')}\n                className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 transition duration-200\"\n              >\n                Back to Dashboard\n              </button>\n            </div>\n          </div>\n\n          {/* Medicine Name Search */}\n          <div className=\"mt-8\">\n            <label htmlFor=\"medicineName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Try searching for a different medicine\n            </label>\n            <div className=\"flex space-x-2\">\n              <div className=\"relative flex-grow\">\n          <input\n                  ref={inputRef}\n                  id=\"medicineName\"\n            type=\"text\"\n            value={medicineName}\n                  onChange={handleInputChange}\n                  onBlur={handleInputBlur}\n                  onFocus={handleInputFocus}\n                  placeholder=\"e.g., Paracetamol, Amoxicillin\"\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition duration-200\"\n                  autoComplete=\"off\"\n                />\n                {showSuggestions && suggestions.length > 0 && (\n                  <div \n                    className=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-lg max-h-60 overflow-auto\"\n                    onMouseDown={(e) => e.preventDefault()}\n                  >\n                    {suggestions.map((suggestion, index) => (\n                      <div\n                        key={index}\n                        onClick={() => handleSuggestionClick(suggestion)}\n                        className=\"px-4 py-2 hover:bg-indigo-50 cursor-pointer transition duration-150\"\n                      >\n                        {suggestion}\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n              <button\n                onClick={handleSearch}\n                className=\"px-6 py-3 bg-gradient-to-r from-indigo-600 to-blue-600 text-white rounded-lg hover:from-indigo-700 hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 transition duration-200 shadow-md\"\n              >\n                Search\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!salesData) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-indigo-50 to-blue-50 p-8\">\n        <div className=\"max-w-4xl mx-auto bg-white rounded-xl shadow-md p-8\">\n          <h1 className=\"text-2xl font-bold text-indigo-800 mb-6 border-b pb-4\">Medicine Sales Summary</h1>\n          \n          {/* Medicine Name Search */}\n          <div className=\"mb-8\">\n            <label htmlFor=\"medicineName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Enter Medicine Name\n            </label>\n            <div className=\"flex space-x-2\">\n              <div className=\"relative flex-grow\">\n          <input\n                  ref={inputRef}\n                  id=\"medicineName\"\n            type=\"text\"\n                  value={medicineName}\n                  onChange={handleInputChange}\n                  onBlur={handleInputBlur}\n                  onFocus={handleInputFocus}\n                  placeholder=\"e.g., Paracetamol, Amoxicillin\"\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition duration-200\"\n                  autoComplete=\"off\"\n                />\n                {showSuggestions && suggestions.length > 0 && (\n                  <div \n                    className=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-lg max-h-60 overflow-auto\"\n                    onMouseDown={(e) => e.preventDefault()} // Prevent blur when clicking suggestions\n                  >\n                    {suggestions.map((suggestion, index) => (\n                      <div\n                        key={index}\n                        onClick={() => handleSuggestionClick(suggestion)}\n                        className=\"px-4 py-2 hover:bg-indigo-50 cursor-pointer transition duration-150\"\n                      >\n                        {suggestion}\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n              <button\n                onClick={handleSearch}\n                className=\"px-6 py-3 bg-gradient-to-r from-indigo-600 to-blue-600 text-white rounded-lg hover:from-indigo-700 hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 transition duration-200 shadow-md\"\n              >\n                Search\n              </button>\n            </div>\n          </div>\n          \n          {/* Additional Filters */}\n          <div className=\"bg-gradient-to-r from-indigo-50 to-blue-50 p-6 rounded-xl mb-8 shadow-sm\">\n            <h2 className=\"text-lg font-semibold text-indigo-800 mb-4\">Additional Filters</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n              <div>\n                <label htmlFor=\"partyName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Party Name (Optional)\n                </label>\n                <select\n                  id=\"partyName\"\n            value={partyName}\n            onChange={(e) => setPartyName(e.target.value)}\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition duration-200\"\n                >\n                  <option value=\"\">All Parties</option>\n                  {availableParties.map((party, index) => (\n                    <option key={index} value={party}>{party}</option>\n                  ))}\n                </select>\n        </div>\n\n        <div>\n                <label htmlFor=\"startDate\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Start Date\n                </label>\n          <input\n                  id=\"startDate\"\n            type=\"date\"\n            value={startDate}\n            onChange={(e) => setStartDate(e.target.value)}\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition duration-200\"\n          />\n        </div>\n              \n        <div>\n                <label htmlFor=\"endDate\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  End Date\n                </label>\n          <input\n                  id=\"endDate\"\n            type=\"date\"\n            value={endDate}\n            onChange={(e) => setEndDate(e.target.value)}\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition duration-200\"\n          />\n        </div>\n            </div>\n            \n            {/* Filter Buttons */}\n            <div className=\"flex justify-end space-x-3\">\n              <button\n                onClick={handleResetFilters}\n                className=\"px-5 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition duration-200 shadow-sm\"\n              >\n                Reset Filters\n              </button>\n          <button\n                onClick={handleFilterSearch}\n                className=\"px-5 py-2 bg-gradient-to-r from-green-500 to-teal-500 text-white rounded-lg hover:from-green-600 hover:to-teal-600 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transition duration-200 shadow-md\"\n                disabled={!medicineName.trim()}\n          >\n                Apply Filters\n          </button>\n            </div>\n          </div>\n          \n          <div className=\"text-gray-600 text-center py-8 border-t\">\n            {availableMedicines.length > 0 ? (\n              <div>\n                <p className=\"mb-3 text-indigo-700 font-medium\">Popular medicines in your inventory:</p>\n                <div className=\"flex flex-wrap gap-2 justify-center\">\n                  {availableMedicines.slice(0, 5).map((medicine, index) => (\n                    <span\n                      key={index}\n                      onClick={() => handleSuggestionClick(medicine)}\n                      className=\"px-3 py-1 bg-indigo-100 text-indigo-800 rounded-full text-sm cursor-pointer hover:bg-indigo-200 transition duration-150 shadow-sm\"\n                    >\n                      {medicine}\n                    </span>\n                  ))}\n                  {availableMedicines.length > 5 && (\n                    <span className=\"text-gray-500\">+{availableMedicines.length - 5} more</span>\n                  )}\n                </div>\n              </div>\n            ) : (\n              <p>No medicines found in your inventory</p>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-indigo-50 to-blue-50 p-8\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"bg-white rounded-xl shadow-lg p-8 mb-8\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h1 className=\"text-2xl font-bold text-indigo-800\">Medicine Sales Summary</h1>\n            <button\n              onClick={handleDownloadPDF}\n              className=\"px-5 py-2 bg-gradient-to-r from-rose-500 to-pink-500 text-white rounded-lg hover:from-rose-600 hover:to-pink-600 focus:outline-none focus:ring-2 focus:ring-rose-500 focus:ring-offset-2 transition duration-200 shadow-md flex items-center space-x-2\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n              </svg>\n              <span>Download PDF</span>\n            </button>\n      </div>\n\n          {/* Filters Section */}\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-5 mb-8\">\n            <div>\n              <label htmlFor=\"medicineName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Medicine Name\n              </label>\n              <div className=\"flex space-x-2\">\n                <div className=\"relative flex-grow\">\n                  <input\n                    ref={inputRef}\n                    id=\"medicineName\"\n                    type=\"text\"\n                    value={medicineName}\n                    onChange={handleInputChange}\n                    onBlur={handleInputBlur}\n                    onFocus={handleInputFocus}\n                    placeholder=\"Enter medicine name\"\n                    className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition duration-200\"\n                    autoComplete=\"off\"\n                  />\n                  {showSuggestions && suggestions.length > 0 && (\n                    <div \n                      className=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-lg max-h-60 overflow-auto\"\n                      onMouseDown={(e) => e.preventDefault()}\n                    >\n                      {suggestions.map((suggestion, index) => (\n                        <div\n                          key={index}\n                          onClick={() => handleSuggestionClick(suggestion)}\n                          className=\"px-4 py-2 hover:bg-indigo-50 cursor-pointer transition duration-150\"\n                        >\n                          {suggestion}\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n                <button\n                  onClick={handleSearch}\n                  className=\"px-4 py-2 bg-gradient-to-r from-indigo-600 to-blue-600 text-white rounded-lg hover:from-indigo-700 hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 transition duration-200\"\n                >\n                  Search\n                </button>\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"partyName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Party Name\n              </label>\n              <select\n                id=\"partyName\"\n                value={partyName}\n                onChange={(e) => setPartyName(e.target.value)}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition duration-200\"\n              >\n                <option value=\"\">All Parties</option>\n                {availableParties.map((party, index) => (\n                  <option key={index} value={party}>{party}</option>\n                ))}\n              </select>\n            </div>\n\n            <div>\n              <label htmlFor=\"startDate\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Start Date\n              </label>\n              <input\n                id=\"startDate\"\n                type=\"date\"\n                value={startDate}\n                onChange={(e) => setStartDate(e.target.value)}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition duration-200\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"endDate\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                End Date\n              </label>\n              <input\n                id=\"endDate\"\n                type=\"date\"\n                value={endDate}\n                onChange={(e) => setEndDate(e.target.value)}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition duration-200\"\n              />\n            </div>\n          </div>\n\n          {/* Filter Buttons */}\n          <div className=\"flex justify-end space-x-3 mb-8\">\n            <button\n              onClick={handleResetFilters}\n              className=\"px-5 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition duration-200 shadow-sm\"\n            >\n              Reset Filters\n            </button>\n            <button\n              onClick={handleFilterSearch}\n              className=\"px-5 py-2 bg-gradient-to-r from-green-500 to-teal-500 text-white rounded-lg hover:from-green-600 hover:to-teal-600 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transition duration-200 shadow-md\"\n            >\n              Apply Filters\n            </button>\n          </div>\n\n          {/* Summary Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n            <div className=\"bg-gradient-to-r from-blue-500 to-indigo-600 rounded-xl shadow-lg p-6 text-white\">\n              <div className=\"text-sm font-medium mb-2 opacity-80\">Total Sales</div>\n              <div className=\"text-3xl font-bold\">\n                ₹{salesData.salesDetails.reduce((sum, sale) => sum + (sale.mrp * sale.quantity - sale.discount), 0).toFixed(2)}\n              </div>\n              <div className=\"text-sm opacity-80 mt-2\">Total Revenue</div>\n            </div>\n            \n            <div className=\"bg-gradient-to-r from-emerald-500 to-green-600 rounded-xl shadow-lg p-6 text-white\">\n              <div className=\"text-sm font-medium mb-2 opacity-80\">Total Quantity</div>\n              <div className=\"text-3xl font-bold\">\n                {salesData.salesDetails.reduce((sum, sale) => sum + sale.quantity, 0)}\n              </div>\n              <div className=\"text-sm opacity-80 mt-2\">Units Sold</div>\n            </div>\n            \n            <div className=\"bg-gradient-to-r from-purple-500 to-fuchsia-600 rounded-xl shadow-lg p-6 text-white\">\n              <div className=\"text-sm font-medium mb-2 opacity-80\">Average Price</div>\n              <div className=\"text-3xl font-bold\">\n                ₹{(\n                  salesData.salesDetails.reduce((sum, sale) => sum + (sale.mrp * sale.quantity - sale.discount), 0) /\n                  salesData.salesDetails.reduce((sum, sale) => sum + sale.quantity, 0)\n                ).toFixed(2)}\n              </div>\n              <div className=\"text-sm opacity-80 mt-2\">Per Unit</div>\n            </div>\n            </div>\n          </div>\n\n        <div className=\"bg-white rounded-xl shadow-lg overflow-hidden\">\n            <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gradient-to-r from-indigo-600 to-blue-600 text-white\">\n                <tr>\n                  <th className=\"px-6 py-4 text-left text-xs font-medium uppercase tracking-wider\">Invoice Number</th>\n                  <th className=\"px-6 py-4 text-left text-xs font-medium uppercase tracking-wider\">Date</th>\n                  <th className=\"px-6 py-4 text-left text-xs font-medium uppercase tracking-wider\">Party Name</th>\n                  <th className=\"px-6 py-4 text-left text-xs font-medium uppercase tracking-wider\">Quantity</th>\n                  <th className=\"px-6 py-4 text-left text-xs font-medium uppercase tracking-wider\">MRP</th>\n                  <th className=\"px-6 py-4 text-left text-xs font-medium uppercase tracking-wider\">Discount</th>\n                  <th className=\"px-6 py-4 text-left text-xs font-medium uppercase tracking-wider\">Total</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {salesData.salesDetails.length > 0 ? (\n                  salesData.salesDetails.map((sale, index) => (\n                    <tr key={index} className={`${index % 2 === 0 ? 'bg-white' : 'bg-indigo-50'} hover:bg-indigo-100 transition duration-150`}>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{sale.saleInvoiceNumber}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {new Date(sale.date).toLocaleDateString()}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{sale.partyName}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{sale.quantity}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">₹{sale.mrp}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">₹{sale.discount}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                        ₹{calculateTotal(sale)}\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"7\" className=\"px-6 py-4 text-center text-sm text-gray-500\">\n                      No sales data found for the selected filters\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n              <tfoot className=\"bg-indigo-50\">\n                <tr>\n                  <td colSpan=\"3\" className=\"px-6 py-4 whitespace-nowrap text-sm font-bold text-gray-900\">\n                    Total\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-bold text-gray-900\">\n                    {salesData.salesDetails.reduce((sum, sale) => sum + sale.quantity, 0)}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-bold text-gray-900\">\n                    -\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-bold text-gray-900\">\n                    ₹{salesData.salesDetails.reduce((sum, sale) => sum + sale.discount, 0).toFixed(2)}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-bold text-gray-900\">\n                    ₹{salesData.salesDetails.reduce((sum, sale) => sum + (sale.mrp * sale.quantity - sale.discount), 0).toFixed(2)}\n                  </td>\n                    </tr>\n              </tfoot>\n              </table>\n            </div>\n          </div>\n\n        <div className=\"mt-8 flex justify-between\">\n          <button\n            onClick={() => navigate('/dashboard')}\n            className=\"px-6 py-3 bg-gray-600 text-white rounded-lg hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition duration-200 shadow-md flex items-center space-x-2\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n            </svg>\n            <span>Back to Dashboard</span>\n          </button>\n          \n          <button\n            onClick={handleDownloadPDF}\n            className=\"px-6 py-3 bg-gradient-to-r from-rose-500 to-pink-500 text-white rounded-lg hover:from-rose-600 hover:to-pink-600 focus:outline-none focus:ring-2 focus:ring-rose-500 focus:ring-offset-2 transition duration-200 shadow-md flex items-center space-x-2\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n            </svg>\n            <span>Download PDF Report</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MedicineSalesSummary;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsPDF } from 'jspdf';\nimport 'jspdf-autotable';\n\nconst API_BASE_URL = 'https://medicine-inventory-management-backend.onrender.com';\n\n// Set up axios auth interceptor\naxios.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\n// Handle authentication errors globally\naxios.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response && error.response.status === 401) {\n      console.log('Session expired: Redirecting to login');\n      localStorage.removeItem('token');\n      // Use window.location instead of useNavigate() in interceptors\n      // as useNavigate() is a hook that can only be used inside components\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst ClientExpiryReturnForm = () => {\n  const navigate = useNavigate();\n  \n  // State for form data\n  const [formData, setFormData] = useState({\n    partyName: '',\n    date: new Date().toISOString().split('T')[0],\n    email: '',\n    notes: ''\n  });\n\n  // State for selected item\n  const [selectedItem, setSelectedItem] = useState({\n    itemName: '',\n    batch: '',\n    soldQuantity: 0,\n    returnQuantity: 0,\n    originalSaleInvoiceNumber: '',\n    expiryDate: '',\n    mrp: 0,\n    purchaseRate: 0\n  });\n\n  // UI state\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [medicinesList, setMedicinesList] = useState([]);\n  const [batchesList, setBatchesList] = useState([]);\n  const [returnItems, setReturnItems] = useState([]);\n  const [totalValue, setTotalValue] = useState(0);\n\n  // Check authentication on component mount\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userEmail = localStorage.getItem('email');\n    \n    if (token && userEmail) {\n      setFormData(prev => ({ ...prev, email: userEmail }));\n    } else {\n      navigate('/login', { state: { from: window.location.pathname } });\n    }\n  }, [navigate]);\n\n  // Calculate total value whenever returnItems changes\n  useEffect(() => {\n    const total = returnItems.reduce((sum, item) => sum + (item.returnQuantity * item.mrp), 0);\n    setTotalValue(total);\n  }, [returnItems]);\n\n  // Fetch medicines sold to selected client\n  const fetchClientMedicines = async () => {\n    try {\n      setIsLoading(true);\n      setError('');\n      \n      if (!formData.partyName) {\n        setError('Please enter a client name first.');\n        setIsLoading(false);\n        return;\n      }\n      \n      // Create URL with explicitly encoded parameters to avoid parameter problems\n      const partyName = encodeURIComponent(formData.partyName);\n      const email = encodeURIComponent(formData.email);\n      \n      const url = `${API_BASE_URL}/api/expiry-bills/client-purchase-history?partyName=${partyName}&email=${email}`;\n      \n      console.log('Requesting URL:', url);\n      \n      const response = await axios.get(url);\n      \n      if (response.data.success && response.data.data.length > 0) {\n        // Extract unique medicine names\n        const medicines = [...new Set(response.data.data.map(item => item.itemName))];\n        setMedicinesList(medicines);\n      } else {\n        setMedicinesList([]);\n        setError('No purchase history found for this client.');\n      }\n      \n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error fetching medicines:', error);\n      setError('Failed to fetch medicines. Please try again.');\n      setIsLoading(false);\n    }\n  };\n\n  // Fetch batches for selected medicine\n  const fetchMedicineBatches = async (medicineName) => {\n    try {\n      setIsLoading(true);\n      setError('');\n      \n      if (!medicineName) {\n        setBatchesList([]);\n        setIsLoading(false);\n        return;\n      }\n      \n      // Create URL with explicitly encoded parameters\n      const partyName = encodeURIComponent(formData.partyName);\n      const email = encodeURIComponent(formData.email);\n      const itemNameEncoded = encodeURIComponent(medicineName);\n      \n      const url = `${API_BASE_URL}/api/expiry-bills/client-purchase-history?partyName=${partyName}&email=${email}&itemName=${itemNameEncoded}`;\n      \n      console.log('Requesting medicine batches URL:', url);\n      \n      const response = await axios.get(url);\n      \n      if (response.data.success && response.data.data.length > 0) {\n        setBatchesList(response.data.data);\n      } else {\n        setBatchesList([]);\n        setError('No batches found for this medicine.');\n      }\n      \n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error fetching batches:', error);\n      setError('Failed to fetch batches. Please try again.');\n      setIsLoading(false);\n    }\n  };\n\n  // Handle input change\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    \n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    \n    // When party name changes, fetch medicines\n    if (name === 'partyName' && value.trim().length > 2) {\n      setMedicinesList([]);\n      setBatchesList([]);\n      setSelectedItem({\n        itemName: '',\n        batch: '',\n        soldQuantity: 0,\n        returnQuantity: 0,\n        originalSaleInvoiceNumber: '',\n        expiryDate: '',\n        mrp: 0,\n        purchaseRate: 0\n      });\n      \n      // Only fetch if there's a valid party name (at least 3 characters)\n      setTimeout(() => fetchClientMedicines(), 500);\n    }\n  };\n\n  // Handle medicine selection\n  const handleMedicineChange = (e) => {\n    const medicineName = e.target.value;\n    \n    setSelectedItem({\n      ...selectedItem,\n      itemName: medicineName,\n      batch: ''\n    });\n    \n    fetchMedicineBatches(medicineName);\n  };\n\n  // Handle batch selection\n  const handleBatchChange = (e) => {\n    const batchId = e.target.value;\n    const selectedBatch = batchesList.find(batch => batch.batch === batchId);\n    \n    if (selectedBatch) {\n      setSelectedItem({\n        itemName: selectedBatch.itemName,\n        batch: selectedBatch.batch,\n        soldQuantity: selectedBatch.quantity,\n        returnQuantity: selectedBatch.quantity, // Default to full quantity\n        originalSaleInvoiceNumber: selectedBatch.saleInvoiceNumber,\n        expiryDate: new Date(selectedBatch.expiryDate).toISOString().split('T')[0],\n        mrp: selectedBatch.mrp,\n        purchaseRate: selectedBatch.mrp // Assuming purchase rate is same as MRP\n      });\n    }\n  };\n\n  // Handle return quantity change\n  const handleQuantityChange = (e) => {\n    const newQuantity = Math.min(\n      Math.max(1, parseInt(e.target.value) || 0), \n      selectedItem.soldQuantity\n    );\n    \n    setSelectedItem({\n      ...selectedItem,\n      returnQuantity: newQuantity\n    });\n  };\n\n  // Add item to return list\n  const addItemToReturn = () => {\n    if (!selectedItem.itemName || !selectedItem.batch || selectedItem.returnQuantity <= 0) {\n      setError('Please select a medicine, batch, and enter a valid return quantity.');\n      return;\n    }\n    \n    // Check if this batch is already in the return list\n    const existingItemIndex = returnItems.findIndex(\n      item => item.itemName === selectedItem.itemName && item.batch === selectedItem.batch\n    );\n    \n    if (existingItemIndex !== -1) {\n      setError('This item is already added to the return list.');\n      return;\n    }\n    \n    // Calculate value\n    const itemValue = selectedItem.returnQuantity * selectedItem.mrp;\n    \n    // Add to return items list\n    setReturnItems([\n      ...returnItems,\n      {\n        ...selectedItem,\n        value: itemValue\n      }\n    ]);\n    \n    // Reset selected item\n    setSelectedItem({\n      itemName: '',\n      batch: '',\n      soldQuantity: 0,\n      returnQuantity: 0,\n      originalSaleInvoiceNumber: '',\n      expiryDate: '',\n      mrp: 0,\n      purchaseRate: 0\n    });\n    \n    // Clear any errors\n    setError('');\n  };\n\n  // Remove item from return list\n  const removeItem = (index) => {\n    const updatedItems = [...returnItems];\n    updatedItems.splice(index, 1);\n    setReturnItems(updatedItems);\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (returnItems.length === 0) {\n      setError('Please add at least one item to return.');\n      return;\n    }\n    \n    try {\n      setIsLoading(true);\n      setError('');\n      \n      // Prepare the payload\n      const payload = {\n        partyName: formData.partyName,\n        date: formData.date,\n        items: returnItems.map(item => ({\n          itemName: item.itemName,\n          batch: item.batch,\n          expiryDate: item.expiryDate,\n          originalSaleInvoiceNumber: item.originalSaleInvoiceNumber,\n          soldQuantity: item.soldQuantity,\n          returnQuantity: item.returnQuantity,\n          mrp: item.mrp,\n          purchaseRate: item.purchaseRate\n        })),\n        email: formData.email,\n        notes: formData.notes\n      };\n      \n      const response = await axios.post(`${API_BASE_URL}/api/expiry-bills/client`, payload, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (response.data.success) {\n        // Generate and download PDF\n        generatePDF(response.data.data);\n        \n        setSuccess('Client expiry return created successfully!');\n        // Reset form\n        setFormData({\n          partyName: '',\n          date: new Date().toISOString().split('T')[0],\n          email: formData.email,\n          notes: ''\n        });\n        setMedicinesList([]);\n        setBatchesList([]);\n        setReturnItems([]);\n      }\n      \n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error creating client expiry return:', error);\n      setError(error.response?.data?.message || 'Failed to create client expiry return. Please try again.');\n      setIsLoading(false);\n    }\n  };\n  \n  // Generate PDF function\n  const generatePDF = (billData) => {\n    try {\n      const doc = new jsPDF();\n      \n      // Set document properties\n      doc.setProperties({\n        title: `Client Expiry Return - ${billData.returnBillNumber}`,\n        subject: 'Client Expiry Return Bill',\n        author: 'Medicine Inventory Management System',\n        creator: 'Medicine Inventory Management System'\n      });\n      \n      // Add heading\n      doc.setFont('helvetica', 'bold');\n      doc.setFontSize(20);\n      doc.setTextColor(63, 81, 181); // Indigo color\n      doc.text('CLIENT EXPIRY RETURN BILL', 105, 20, { align: 'center' });\n      \n      // Add bill number\n      doc.setFontSize(12);\n      doc.setTextColor(100, 100, 100);\n      doc.text(`Bill Number: ${billData.returnBillNumber}`, 20, 30);\n      \n      // Add date\n      const currentDate = new Date().toLocaleDateString();\n      doc.text(`Date: ${currentDate}`, 20, 36);\n      \n      // Add company details\n      doc.setFontSize(14);\n      doc.setFont('helvetica', 'bold');\n      doc.setTextColor(0, 0, 0);\n      doc.text('Medicine Inventory Management', 20, 50);\n      \n      doc.setFontSize(10);\n      doc.setFont('helvetica', 'normal');\n      doc.setTextColor(100, 100, 100);\n      doc.text('Your Address Line 1', 20, 56);\n      doc.text('Your Address Line 2', 20, 61);\n      doc.text('Phone: +91 XXXXXXXXXX', 20, 66);\n      doc.text('Email: contact@example.com', 20, 71);\n      \n      // Add client details\n      doc.setFontSize(12);\n      doc.setFont('helvetica', 'bold');\n      doc.setTextColor(0, 0, 0);\n      doc.text('Client Details:', 120, 50);\n      \n      doc.setFontSize(10);\n      doc.setFont('helvetica', 'normal');\n      doc.setTextColor(100, 100, 100);\n      doc.text(`Name: ${billData.partyName}`, 120, 56);\n      doc.text(`Date: ${new Date(billData.date).toLocaleDateString()}`, 120, 61);\n      \n      // Add item table\n      doc.setFontSize(12);\n      doc.setFont('helvetica', 'bold');\n      doc.text('Returned Items:', 20, 85);\n      \n      const tableColumn = [\n        'Sr. No.', \n        'Item Name', \n        'Batch', \n        'Expiry Date', \n        'Original Sale', \n        'Return Qty', \n        'MRP', \n        'Value'\n      ];\n      \n      const tableRows = billData.items.map((item, index) => [\n        index + 1,\n        item.itemName,\n        item.batch,\n        new Date(item.expiryDate).toLocaleDateString(),\n        item.originalSaleInvoiceNumber,\n        item.returnQuantity,\n        `₹${item.mrp}`,\n        `₹${(item.returnQuantity * item.mrp).toFixed(2)}`\n      ]);\n      \n      doc.autoTable({\n        startY: 90,\n        head: [tableColumn],\n        body: tableRows,\n        theme: 'grid',\n        headStyles: { \n          fillColor: [63, 81, 181], \n          textColor: 255,\n          fontStyle: 'bold' \n        },\n        alternateRowStyles: { \n          fillColor: [240, 240, 250] \n        },\n        margin: { top: 20 }\n      });\n      \n      // Add summary\n      const finalY = doc.lastAutoTable.finalY + 10;\n      \n      doc.setFontSize(11);\n      doc.setFont('helvetica', 'bold');\n      doc.setTextColor(0, 0, 0);\n      doc.text(`Total Items: ${billData.totalItems}`, 130, finalY);\n      doc.text(`Total Quantity: ${billData.totalQuantity}`, 130, finalY + 6);\n      doc.text(`Total Value: ₹${billData.totalValue.toFixed(2)}`, 130, finalY + 12);\n      \n      // Add notes if any\n      if (billData.notes) {\n        doc.setFontSize(10);\n        doc.setFont('helvetica', 'bold');\n        doc.text('Notes:', 20, finalY + 10);\n        doc.setFont('helvetica', 'normal');\n        doc.text(billData.notes, 20, finalY + 16);\n      }\n      \n      // Add footer\n      doc.setFontSize(9);\n      doc.setFont('helvetica', 'normal');\n      doc.setTextColor(100, 100, 100);\n      doc.text('This is a computer-generated document. No signature is required.', 105, 280, { align: 'center' });\n      \n      // Save the PDF\n      doc.save(`ClientExpiryReturn_${billData.returnBillNumber}.pdf`);\n    } catch (error) {\n      console.error('Error generating PDF:', error);\n      setError('Error generating PDF. Please try again.');\n    }\n  };\n\n  // If not authenticated, show loading or redirect\n  if (!localStorage.getItem('token')) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n        <div className=\"text-center\">\n          <p className=\"text-lg text-gray-600\">Checking authentication...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-indigo-50 to-purple-50 py-8\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-4xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-indigo-600 to-purple-600\">Client Expiry Return</h1>\n          <p className=\"mt-2 text-lg text-gray-600\">Create a return bill for expired items from clients</p>\n        </div>\n        \n        {error && (\n          <div className=\"mb-6 bg-red-50 border-l-4 border-red-500 p-4 rounded-lg shadow-sm\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-red-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm text-red-700 font-medium\">{error}</p>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {success && (\n          <div className=\"mb-6 bg-green-50 border-l-4 border-green-500 p-4 rounded-lg shadow-sm\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-green-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm text-green-700 font-medium\">{success}</p>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        <div className=\"grid grid-cols-1 gap-8\">\n          {/* Form Section */}\n          <form onSubmit={handleSubmit} className=\"bg-white rounded-xl shadow-lg p-6 border-t-4 border-indigo-500\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n              {/* Client and Date Selection */}\n              <div>\n                <label htmlFor=\"partyName\" className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Client Name *\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"partyName\"\n                  name=\"partyName\"\n                  value={formData.partyName}\n                  onChange={handleInputChange}\n                  className=\"w-full p-3 text-md border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200\"\n                  placeholder=\"Enter client name\"\n                  required\n                />\n                {medicinesList.length > 0 && (\n                  <p className=\"mt-1 text-xs text-green-600\">Found medicines sold to this client</p>\n                )}\n              </div>\n              \n              <div>\n                <label htmlFor=\"date\" className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Return Date\n                </label>\n                <input\n                  type=\"date\"\n                  id=\"date\"\n                  name=\"date\"\n                  value={formData.date}\n                  onChange={handleInputChange}\n                  className=\"w-full p-3 text-md border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200\"\n                />\n              </div>\n            </div>\n            \n            {/* Medicine Selection and Details */}\n            <div className=\"bg-indigo-50 p-5 rounded-lg mb-6 border border-indigo-100\">\n              <h3 className=\"text-lg font-semibold text-indigo-700 mb-4\">Select Medicine and Batch</h3>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n                {/* Medicine Name */}\n                <div>\n                  <label htmlFor=\"itemName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Medicine Name *\n                  </label>\n                  <select\n                    id=\"itemName\"\n                    value={selectedItem.itemName}\n                    onChange={handleMedicineChange}\n                    className=\"w-full p-3 text-md border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200\"\n                    disabled={!formData.partyName || medicinesList.length === 0}\n                  >\n                    <option value=\"\">Select Medicine</option>\n                    {medicinesList.map((medicine, index) => (\n                      <option key={index} value={medicine}>{medicine}</option>\n                    ))}\n                  </select>\n                </div>\n                \n                {/* Batch Selection */}\n                <div>\n                  <label htmlFor=\"batch\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Batch *\n                  </label>\n                  <select\n                    id=\"batch\"\n                    value={selectedItem.batch}\n                    onChange={handleBatchChange}\n                    className=\"w-full p-3 text-md border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200\"\n                    disabled={!selectedItem.itemName || batchesList.length === 0}\n                  >\n                    <option value=\"\">Select Batch</option>\n                    {batchesList.map((batch, index) => (\n                      <option key={index} value={batch.batch}>\n                        {batch.batch} (Exp: {new Date(batch.expiryDate).toLocaleDateString()})\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                \n                {/* Return Quantity */}\n                <div>\n                  <label htmlFor=\"returnQuantity\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Return Quantity *\n                  </label>\n                  <div className=\"flex\">\n                    <input\n                      type=\"number\"\n                      id=\"returnQuantity\"\n                      value={selectedItem.returnQuantity || ''}\n                      onChange={handleQuantityChange}\n                      min=\"1\"\n                      max={selectedItem.soldQuantity}\n                      className=\"w-full p-3 text-md border-2 border-indigo-200 rounded-l-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200\"\n                      disabled={!selectedItem.batch}\n                    />\n                    <span className=\"inline-flex items-center px-3 bg-gray-200 text-gray-600 border-2 border-l-0 border-indigo-200 rounded-r-lg\">\n                      / {selectedItem.soldQuantity}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              \n              {selectedItem.batch && (\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n                  {/* Expiry Date */}\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Expiry Date\n                    </label>\n                    <input\n                      type=\"date\"\n                      value={selectedItem.expiryDate}\n                      className=\"w-full p-3 text-md border-2 border-indigo-200 rounded-lg bg-gray-50 cursor-not-allowed\"\n                      disabled\n                    />\n                  </div>\n                  \n                  {/* MRP */}\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      MRP\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={`₹${selectedItem.mrp}`}\n                      className=\"w-full p-3 text-md border-2 border-indigo-200 rounded-lg bg-gray-50 cursor-not-allowed\"\n                      disabled\n                    />\n                  </div>\n                  \n                  {/* Original Invoice */}\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Original Invoice\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={selectedItem.originalSaleInvoiceNumber}\n                      className=\"w-full p-3 text-md border-2 border-indigo-200 rounded-lg bg-gray-50 cursor-not-allowed\"\n                      disabled\n                    />\n                  </div>\n                </div>\n              )}\n              \n              <div className=\"flex justify-end\">\n                <button\n                  type=\"button\"\n                  onClick={addItemToReturn}\n                  disabled={!selectedItem.batch || selectedItem.returnQuantity <= 0}\n                  className=\"px-4 py-2 bg-indigo-600 text-white font-medium rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n                >\n                  Add Item to Return\n                </button>\n              </div>\n            </div>\n            \n            {/* Return Items List */}\n            {returnItems.length > 0 && (\n              <div className=\"mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-800 mb-3\">Return Items</h3>\n                <div className=\"overflow-x-auto rounded-lg shadow border border-gray-200\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th scope=\"col\" className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Item Name</th>\n                        <th scope=\"col\" className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Batch</th>\n                        <th scope=\"col\" className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Expiry Date</th>\n                        <th scope=\"col\" className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Qty</th>\n                        <th scope=\"col\" className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">MRP</th>\n                        <th scope=\"col\" className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Value</th>\n                        <th scope=\"col\" className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Action</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {returnItems.map((item, index) => (\n                        <tr key={index} className=\"hover:bg-gray-50\">\n                          <td className=\"px-3 py-3 whitespace-nowrap text-sm font-medium text-gray-900\">{item.itemName}</td>\n                          <td className=\"px-3 py-3 whitespace-nowrap text-sm text-gray-700\">{item.batch}</td>\n                          <td className=\"px-3 py-3 whitespace-nowrap text-sm text-gray-700\">\n                            {new Date(item.expiryDate).toLocaleDateString()}\n                          </td>\n                          <td className=\"px-3 py-3 whitespace-nowrap text-sm text-gray-700\">{item.returnQuantity}</td>\n                          <td className=\"px-3 py-3 whitespace-nowrap text-sm text-gray-700\">₹{item.mrp}</td>\n                          <td className=\"px-3 py-3 whitespace-nowrap text-sm font-medium text-indigo-700\">\n                            ₹{(item.returnQuantity * item.mrp).toFixed(2)}\n                          </td>\n                          <td className=\"px-3 py-3 whitespace-nowrap text-sm text-gray-700\">\n                            <button\n                              type=\"button\"\n                              onClick={() => removeItem(index)}\n                              className=\"text-red-600 hover:text-red-800\"\n                            >\n                              <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path fillRule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clipRule=\"evenodd\"></path>\n                              </svg>\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                    <tfoot className=\"bg-gray-50\">\n                      <tr>\n                        <td colSpan=\"5\" className=\"px-3 py-3 text-sm font-bold text-gray-700 text-right\">\n                          Total Value:\n                        </td>\n                        <td className=\"px-3 py-3 whitespace-nowrap text-sm font-bold text-indigo-700\">\n                          ₹{totalValue.toFixed(2)}\n                        </td>\n                        <td></td>\n                      </tr>\n                    </tfoot>\n                  </table>\n                </div>\n              </div>\n            )}\n            \n            {/* Notes */}\n            <div className=\"mb-6\">\n              <label htmlFor=\"notes\" className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                Notes (Optional)\n              </label>\n              <textarea\n                id=\"notes\"\n                name=\"notes\"\n                value={formData.notes}\n                onChange={handleInputChange}\n                rows=\"2\"\n                className=\"w-full p-3 text-md border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200\"\n                placeholder=\"Any additional notes about this return\"\n              ></textarea>\n            </div>\n            \n            {/* Submit Button */}\n            <div className=\"flex justify-end\">\n              <button\n                type=\"submit\"\n                disabled={returnItems.length === 0 || isLoading}\n                className=\"px-6 py-3 bg-gradient-to-r from-green-500 to-teal-500 text-white font-medium rounded-lg hover:from-green-600 hover:to-teal-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-md\"\n              >\n                {isLoading ? (\n                  <span className=\"flex items-center\">\n                    <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    Processing...\n                  </span>\n                ) : (\n                  <span className=\"flex items-center\">\n                    <svg className=\"mr-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                    Create Client Expiry Return\n                  </span>\n                )}\n              </button>\n            </div>\n      </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ClientExpiryReturnForm; ","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsPDF } from 'jspdf';\nimport 'jspdf-autotable';\n\nconst API_BASE_URL = 'https://medicine-inventory-management-backend.onrender.com';\n\n// Set up axios auth interceptor\naxios.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\n// Handle authentication errors globally\naxios.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response && error.response.status === 401) {\n      console.log('Session expired: Redirecting to login');\n      localStorage.removeItem('token');\n      // Use window.location instead of useNavigate() in interceptors\n      // as useNavigate() is a hook that can only be used inside components\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst ClientExpiryReturnForm = () => {\n  const navigate = useNavigate();\n  \n  // State for form data\n  const [formData, setFormData] = useState({\n    partyName: '',\n    date: new Date().toISOString().split('T')[0],\n    endDate: new Date().toISOString().split('T')[0],\n    email: '',\n    notes: ''\n  });\n\n  // State for selected item\n  const [selectedItem, setSelectedItem] = useState({\n    itemName: '',\n    batch: '',\n    soldQuantity: 0,\n    returnQuantity: 0,\n    originalSaleInvoiceNumber: '',\n    expiryDate: '',\n    mrp: 0,\n    purchaseRate: 0\n  });\n\n  // UI state\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [medicinesList, setMedicinesList] = useState([]);\n  const [batchesList, setBatchesList] = useState([]);\n  const [returnItems, setReturnItems] = useState([]);\n  const [totalValue, setTotalValue] = useState(0);\n\n  // Check authentication on component mount\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userEmail = localStorage.getItem('email');\n    \n    if (token && userEmail) {\n      setFormData(prev => ({ ...prev, email: userEmail }));\n    } else {\n      navigate('/login', { state: { from: window.location.pathname } });\n    }\n  }, [navigate]);\n\n  // Calculate total value whenever returnItems changes\n  useEffect(() => {\n    const total = returnItems.reduce((sum, item) => sum + (item.returnQuantity * item.mrp), 0);\n    setTotalValue(total);\n  }, [returnItems]);\n\n  // Fetch medicines sold to selected client\n  const fetchClientMedicines = async () => {\n    try {\n      setIsLoading(true);\n      setError('');\n      \n      if (!formData.partyName) {\n        setError('Please enter a client name first.');\n        setIsLoading(false);\n        return;\n      }\n      \n      // Create URL with explicitly encoded parameters to avoid parameter problems\n      const partyName = encodeURIComponent(formData.partyName);\n      const email = encodeURIComponent(formData.email);\n      const startDate = encodeURIComponent(formData.date);\n      const endDate = encodeURIComponent(formData.endDate);\n      \n      const url = `${API_BASE_URL}/api/expiry-bills/client-purchase-history?partyName=${partyName}&email=${email}&startDate=${startDate}&endDate=${endDate}`;\n      \n      console.log('Requesting URL:', url);\n      \n      const response = await axios.get(url);\n      \n      if (response.data.success && response.data.data.length > 0) {\n        // Extract unique medicine names\n        const medicines = [...new Set(response.data.data.map(item => item.itemName))];\n        setMedicinesList(medicines);\n      } else {\n        setMedicinesList([]);\n        setError('No purchase history found for this client.');\n      }\n      \n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error fetching medicines:', error);\n      setError('Failed to fetch medicines. Please try again.');\n      setIsLoading(false);\n    }\n  };\n\n  // Fetch batches for selected medicine\n  const fetchMedicineBatches = async (medicineName) => {\n    try {\n      setIsLoading(true);\n      setError('');\n      \n      if (!medicineName) {\n        setBatchesList([]);\n        setIsLoading(false);\n        return;\n      }\n      \n      // Create URL with explicitly encoded parameters\n      const partyName = encodeURIComponent(formData.partyName);\n      const email = encodeURIComponent(formData.email);\n      const itemNameEncoded = encodeURIComponent(medicineName);\n      const startDate = encodeURIComponent(formData.date);\n      const endDate = encodeURIComponent(formData.endDate);\n      \n      const url = `${API_BASE_URL}/api/expiry-bills/client-purchase-history?partyName=${partyName}&email=${email}&itemName=${itemNameEncoded}&startDate=${startDate}&endDate=${endDate}`;\n      \n      console.log('Requesting medicine batches URL:', url);\n      \n      const response = await axios.get(url);\n      \n      if (response.data.success && response.data.data.length > 0) {\n        setBatchesList(response.data.data);\n      } else {\n        setBatchesList([]);\n        setError('No batches found for this medicine.');\n      }\n      \n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error fetching batches:', error);\n      setError('Failed to fetch batches. Please try again.');\n      setIsLoading(false);\n    }\n  };\n\n  // Handle input change\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    \n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    \n    // When party name changes, fetch medicines\n    if (name === 'partyName' && value.trim().length > 2) {\n      setMedicinesList([]);\n      setBatchesList([]);\n      setSelectedItem({\n        itemName: '',\n        batch: '',\n        soldQuantity: 0,\n        returnQuantity: 0,\n        originalSaleInvoiceNumber: '',\n        expiryDate: '',\n        mrp: 0,\n        purchaseRate: 0\n      });\n      \n      // Only fetch if there's a valid party name (at least 3 characters)\n      setTimeout(() => fetchClientMedicines(), 500);\n    }\n    \n    // When date fields change and party name exists, refresh medicine list\n    if ((name === 'date' || name === 'endDate') && formData.partyName.trim().length > 2) {\n      setMedicinesList([]);\n      setBatchesList([]);\n      // Clear the selected item too since the available medicines may change\n      setSelectedItem({\n        itemName: '',\n        batch: '',\n        soldQuantity: 0,\n        returnQuantity: 0,\n        originalSaleInvoiceNumber: '',\n        expiryDate: '',\n        mrp: 0,\n        purchaseRate: 0\n      });\n      \n      // Fetch updated medicine list with new date range\n      setTimeout(() => fetchClientMedicines(), 500);\n    }\n  };\n\n  // Handle medicine selection\n  const handleMedicineChange = (e) => {\n    const medicineName = e.target.value;\n    \n    setSelectedItem({\n      ...selectedItem,\n      itemName: medicineName,\n      batch: ''\n    });\n    \n    fetchMedicineBatches(medicineName);\n  };\n\n  // Handle batch selection\n  const handleBatchChange = (e) => {\n    const batchId = e.target.value;\n    const selectedBatch = batchesList.find(batch => batch.batch === batchId);\n    \n    if (selectedBatch) {\n      setSelectedItem({\n        itemName: selectedBatch.itemName,\n        batch: selectedBatch.batch,\n        soldQuantity: selectedBatch.quantity,\n        returnQuantity: selectedBatch.quantity, // Default to full quantity\n        originalSaleInvoiceNumber: selectedBatch.saleInvoiceNumber,\n        expiryDate: new Date(selectedBatch.expiryDate).toISOString().split('T')[0],\n        mrp: selectedBatch.mrp,\n        purchaseRate: selectedBatch.mrp // Assuming purchase rate is same as MRP\n      });\n    }\n  };\n\n  // Handle return quantity change\n  const handleQuantityChange = (e) => {\n    const newQuantity = Math.min(\n      Math.max(1, parseInt(e.target.value) || 0), \n      selectedItem.soldQuantity\n    );\n    \n    setSelectedItem({\n      ...selectedItem,\n      returnQuantity: newQuantity\n    });\n  };\n\n  // Add item to return list\n  const addItemToReturn = () => {\n    if (!selectedItem.itemName || !selectedItem.batch || selectedItem.returnQuantity <= 0) {\n      setError('Please select a medicine, batch, and enter a valid return quantity.');\n      return;\n    }\n    \n    // Check if this batch is already in the return list\n    const existingItemIndex = returnItems.findIndex(\n      item => item.itemName === selectedItem.itemName && item.batch === selectedItem.batch\n    );\n    \n    if (existingItemIndex !== -1) {\n      setError('This item is already added to the return list.');\n      return;\n    }\n    \n    // Calculate value\n    const itemValue = selectedItem.returnQuantity * selectedItem.mrp;\n    \n    // Add to return items list\n    setReturnItems([\n      ...returnItems,\n      {\n        ...selectedItem,\n        value: itemValue\n      }\n    ]);\n    \n    // Reset selected item\n    setSelectedItem({\n      itemName: '',\n      batch: '',\n      soldQuantity: 0,\n      returnQuantity: 0,\n      originalSaleInvoiceNumber: '',\n      expiryDate: '',\n      mrp: 0,\n      purchaseRate: 0\n    });\n    \n    // Clear any errors\n    setError('');\n  };\n\n  // Remove item from return list\n  const removeItem = (index) => {\n    const updatedItems = [...returnItems];\n    updatedItems.splice(index, 1);\n    setReturnItems(updatedItems);\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (returnItems.length === 0) {\n      setError('Please add at least one item to return.');\n      return;\n    }\n    \n    try {\n      setIsLoading(true);\n      setError('');\n      \n      // Prepare the payload\n      const payload = {\n        partyName: formData.partyName,\n        date: formData.date,\n        endDate: formData.endDate,\n        items: returnItems.map(item => ({\n          itemName: item.itemName,\n          batch: item.batch,\n          expiryDate: item.expiryDate,\n          originalSaleInvoiceNumber: item.originalSaleInvoiceNumber,\n          soldQuantity: item.soldQuantity,\n          returnQuantity: item.returnQuantity,\n          mrp: item.mrp,\n          purchaseRate: item.purchaseRate\n        })),\n        email: formData.email,\n        notes: formData.notes\n      };\n      \n      const response = await axios.post(`${API_BASE_URL}/api/expiry-bills/client`, payload, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (response.data.success) {\n        // Generate and download PDF\n        generatePDF(response.data.data);\n        \n        setSuccess('Client expiry return created successfully!');\n        // Reset form\n        setFormData({\n          partyName: '',\n          date: new Date().toISOString().split('T')[0],\n          endDate: new Date().toISOString().split('T')[0],\n          email: formData.email,\n          notes: ''\n        });\n        setMedicinesList([]);\n        setBatchesList([]);\n        setReturnItems([]);\n      }\n      \n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error creating client expiry return:', error);\n      setError(error.response?.data?.message || 'Failed to create client expiry return. Please try again.');\n      setIsLoading(false);\n    }\n  };\n  \n  // Generate PDF function\n  const generatePDF = (billData) => {\n    try {\n      const doc = new jsPDF();\n      \n      // Set document properties\n      doc.setProperties({\n        title: `Client Expiry Return - ${billData.returnBillNumber}`,\n        subject: 'Client Expiry Return Bill',\n        author: 'Medicine Inventory Management System',\n        creator: 'Medicine Inventory Management System'\n      });\n      \n      // Add heading\n      doc.setFont('helvetica', 'bold');\n      doc.setFontSize(20);\n      doc.setTextColor(63, 81, 181); // Indigo color\n      doc.text('CLIENT EXPIRY RETURN BILL', 105, 20, { align: 'center' });\n      \n      // Add bill number\n      doc.setFontSize(12);\n      doc.setTextColor(100, 100, 100);\n      doc.text(`Bill Number: ${billData.returnBillNumber}`, 20, 30);\n      \n      // Add date\n      const currentDate = new Date().toLocaleDateString();\n      doc.text(`Date: ${currentDate}`, 20, 36);\n      \n      // Add company details\n      doc.setFontSize(14);\n      doc.setFont('helvetica', 'bold');\n      doc.setTextColor(0, 0, 0);\n      doc.text('Medicine Inventory Management', 20, 50);\n      \n      doc.setFontSize(10);\n      doc.setFont('helvetica', 'normal');\n      doc.setTextColor(100, 100, 100);\n      doc.text('Your Address Line 1', 20, 56);\n      doc.text('Your Address Line 2', 20, 61);\n      doc.text('Phone: +91 XXXXXXXXXX', 20, 66);\n      doc.text('Email: contact@example.com', 20, 71);\n      \n      // Add client details\n      doc.setFontSize(12);\n      doc.setFont('helvetica', 'bold');\n      doc.setTextColor(0, 0, 0);\n      doc.text('Client Details:', 120, 50);\n      \n      doc.setFontSize(10);\n      doc.setFont('helvetica', 'normal');\n      doc.setTextColor(100, 100, 100);\n      doc.text(`Name: ${billData.partyName}`, 120, 56);\n      doc.text(`Start Date: ${new Date(billData.date).toLocaleDateString()}`, 120, 61);\n      doc.text(`End Date: ${new Date(billData.endDate).toLocaleDateString()}`, 120, 66);\n      \n      // Add item table\n      doc.setFontSize(12);\n      doc.setFont('helvetica', 'bold');\n      doc.text('Returned Items:', 20, 85);\n      \n      const tableColumn = [\n        'Sr. No.', \n        'Item Name', \n        'Batch', \n        'Expiry Date', \n        'Original Sale', \n        'Return Qty', \n        'MRP', \n        'Value'\n      ];\n      \n      const tableRows = billData.items.map((item, index) => [\n        index + 1,\n        item.itemName,\n        item.batch,\n        new Date(item.expiryDate).toLocaleDateString(),\n        item.originalSaleInvoiceNumber,\n        item.returnQuantity,\n        `₹${item.mrp}`,\n        `₹${(item.returnQuantity * item.mrp).toFixed(2)}`\n      ]);\n      \n      doc.autoTable({\n        startY: 90,\n        head: [tableColumn],\n        body: tableRows,\n        theme: 'grid',\n        headStyles: { \n          fillColor: [63, 81, 181], \n          textColor: 255,\n          fontStyle: 'bold' \n        },\n        alternateRowStyles: { \n          fillColor: [240, 240, 250] \n        },\n        margin: { top: 20 }\n      });\n      \n      // Add summary\n      const finalY = doc.lastAutoTable.finalY + 10;\n      \n      doc.setFontSize(11);\n      doc.setFont('helvetica', 'bold');\n      doc.setTextColor(0, 0, 0);\n      doc.text(`Total Items: ${billData.totalItems}`, 130, finalY);\n      doc.text(`Total Quantity: ${billData.totalQuantity}`, 130, finalY + 6);\n      doc.text(`Total Value: ₹${billData.totalValue.toFixed(2)}`, 130, finalY + 12);\n      \n      // Add notes if any\n      if (billData.notes) {\n        doc.setFontSize(10);\n        doc.setFont('helvetica', 'bold');\n        doc.text('Notes:', 20, finalY + 10);\n        doc.setFont('helvetica', 'normal');\n        doc.text(billData.notes, 20, finalY + 16);\n      }\n      \n      // Add footer\n      doc.setFontSize(9);\n      doc.setFont('helvetica', 'normal');\n      doc.setTextColor(100, 100, 100);\n      doc.text('This is a computer-generated document. No signature is required.', 105, 280, { align: 'center' });\n      \n      // Save the PDF\n      doc.save(`ClientExpiryReturn_${billData.returnBillNumber}.pdf`);\n    } catch (error) {\n      console.error('Error generating PDF:', error);\n      setError('Error generating PDF. Please try again.');\n    }\n  };\n\n  // If not authenticated, show loading or redirect\n  if (!localStorage.getItem('token')) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n        <div className=\"text-center\">\n          <p className=\"text-lg text-gray-600\">Checking authentication...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-indigo-50 to-purple-50 py-8\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-4xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-indigo-600 to-purple-600\">Client Expiry Return</h1>\n          <p className=\"mt-2 text-lg text-gray-600\">Create a return bill for expired items from clients</p>\n        </div>\n        \n        {error && (\n          <div className=\"mb-6 bg-red-50 border-l-4 border-red-500 p-4 rounded-lg shadow-sm\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-red-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm text-red-700 font-medium\">{error}</p>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {success && (\n          <div className=\"mb-6 bg-green-50 border-l-4 border-green-500 p-4 rounded-lg shadow-sm\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-green-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm text-green-700 font-medium\">{success}</p>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        <div className=\"grid grid-cols-1 gap-8\">\n          {/* Form Section */}\n          <form onSubmit={handleSubmit} className=\"bg-white rounded-xl shadow-lg p-6 border-t-4 border-indigo-500\">\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n              {/* Client and Date Selection */}\n              <div>\n                <label htmlFor=\"partyName\" className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Client Name *\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"partyName\"\n                  name=\"partyName\"\n                  value={formData.partyName}\n                  onChange={handleInputChange}\n                  className=\"w-full p-3 text-md border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200\"\n                  placeholder=\"Enter client name\"\n                  required\n                />\n                {medicinesList.length > 0 && (\n                  <p className=\"mt-1 text-xs text-green-600\">Found medicines sold to this client</p>\n                )}\n              </div>\n              \n              <div>\n                <label htmlFor=\"date\" className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Start Date\n                </label>\n                <input\n                  type=\"date\"\n                  id=\"date\"\n                  name=\"date\"\n                  value={formData.date}\n                  onChange={handleInputChange}\n                  className=\"w-full p-3 text-md border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200\"\n                />\n              </div>\n              \n              <div>\n                <label htmlFor=\"endDate\" className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  End Date\n                </label>\n                <input\n                  type=\"date\"\n                  id=\"endDate\"\n                  name=\"endDate\"\n                  value={formData.endDate}\n                  onChange={handleInputChange}\n                  className=\"w-full p-3 text-md border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200\"\n                />\n              </div>\n            </div>\n            \n            {/* Medicine Selection and Details */}\n            <div className=\"bg-indigo-50 p-5 rounded-lg mb-6 border border-indigo-100\">\n              <h3 className=\"text-lg font-semibold text-indigo-700 mb-4\">Select Medicine and Batch</h3>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n                {/* Medicine Name */}\n                <div>\n                  <label htmlFor=\"itemName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Medicine Name *\n                  </label>\n                  <select\n                    id=\"itemName\"\n                    value={selectedItem.itemName}\n                    onChange={handleMedicineChange}\n                    className=\"w-full p-3 text-md border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200\"\n                    disabled={!formData.partyName || medicinesList.length === 0}\n                  >\n                    <option value=\"\">Select Medicine</option>\n                    {medicinesList.map((medicine, index) => (\n                      <option key={index} value={medicine}>{medicine}</option>\n                    ))}\n                  </select>\n                </div>\n                \n                {/* Batch Selection */}\n                <div>\n                  <label htmlFor=\"batch\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Batch *\n                  </label>\n                  <select\n                    id=\"batch\"\n                    value={selectedItem.batch}\n                    onChange={handleBatchChange}\n                    className=\"w-full p-3 text-md border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200\"\n                    disabled={!selectedItem.itemName || batchesList.length === 0}\n                  >\n                    <option value=\"\">Select Batch</option>\n                    {batchesList.map((batch, index) => (\n                      <option key={index} value={batch.batch}>\n                        {batch.batch} (Exp: {new Date(batch.expiryDate).toLocaleDateString()})\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                \n                {/* Return Quantity */}\n                <div>\n                  <label htmlFor=\"returnQuantity\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Return Quantity *\n                  </label>\n                  <div className=\"flex\">\n                    <input\n                      type=\"number\"\n                      id=\"returnQuantity\"\n                      value={selectedItem.returnQuantity || ''}\n                      onChange={handleQuantityChange}\n                      min=\"1\"\n                      max={selectedItem.soldQuantity}\n                      className=\"w-full p-3 text-md border-2 border-indigo-200 rounded-l-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200\"\n                      disabled={!selectedItem.batch}\n                    />\n                    <span className=\"inline-flex items-center px-3 bg-gray-200 text-gray-600 border-2 border-l-0 border-indigo-200 rounded-r-lg\">\n                      / {selectedItem.soldQuantity}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              \n              {selectedItem.batch && (\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n                  {/* Expiry Date */}\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Expiry Date\n                    </label>\n                    <input\n                      type=\"date\"\n                      value={selectedItem.expiryDate}\n                      className=\"w-full p-3 text-md border-2 border-indigo-200 rounded-lg bg-gray-50 cursor-not-allowed\"\n                      disabled\n                    />\n                  </div>\n                  \n                  {/* MRP */}\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      MRP\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={`₹${selectedItem.mrp}`}\n                      className=\"w-full p-3 text-md border-2 border-indigo-200 rounded-lg bg-gray-50 cursor-not-allowed\"\n                      disabled\n                    />\n                  </div>\n                  \n                  {/* Original Invoice */}\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Original Invoice\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={selectedItem.originalSaleInvoiceNumber}\n                      className=\"w-full p-3 text-md border-2 border-indigo-200 rounded-lg bg-gray-50 cursor-not-allowed\"\n                      disabled\n                    />\n                  </div>\n                </div>\n              )}\n              \n              <div className=\"flex justify-end\">\n                <button\n                  type=\"button\"\n                  onClick={addItemToReturn}\n                  disabled={!selectedItem.batch || selectedItem.returnQuantity <= 0}\n                  className=\"px-4 py-2 bg-indigo-600 text-white font-medium rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n                >\n                  Add Item to Return\n                </button>\n              </div>\n            </div>\n            \n            {/* Return Items List */}\n            {returnItems.length > 0 && (\n              <div className=\"mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-800 mb-3\">Return Items</h3>\n                <div className=\"overflow-x-auto rounded-lg shadow border border-gray-200\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th scope=\"col\" className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Item Name</th>\n                        <th scope=\"col\" className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Batch</th>\n                        <th scope=\"col\" className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Expiry Date</th>\n                        <th scope=\"col\" className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Qty</th>\n                        <th scope=\"col\" className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">MRP</th>\n                        <th scope=\"col\" className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Value</th>\n                        <th scope=\"col\" className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Action</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {returnItems.map((item, index) => (\n                        <tr key={index} className=\"hover:bg-gray-50\">\n                          <td className=\"px-3 py-3 whitespace-nowrap text-sm font-medium text-gray-900\">{item.itemName}</td>\n                          <td className=\"px-3 py-3 whitespace-nowrap text-sm text-gray-700\">{item.batch}</td>\n                          <td className=\"px-3 py-3 whitespace-nowrap text-sm text-gray-700\">\n                            {new Date(item.expiryDate).toLocaleDateString()}\n                          </td>\n                          <td className=\"px-3 py-3 whitespace-nowrap text-sm text-gray-700\">{item.returnQuantity}</td>\n                          <td className=\"px-3 py-3 whitespace-nowrap text-sm text-gray-700\">₹{item.mrp}</td>\n                          <td className=\"px-3 py-3 whitespace-nowrap text-sm font-medium text-indigo-700\">\n                            ₹{(item.returnQuantity * item.mrp).toFixed(2)}\n                          </td>\n                          <td className=\"px-3 py-3 whitespace-nowrap text-sm text-gray-700\">\n                            <button\n                              type=\"button\"\n                              onClick={() => removeItem(index)}\n                              className=\"text-red-600 hover:text-red-800\"\n                            >\n                              <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path fillRule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clipRule=\"evenodd\"></path>\n                              </svg>\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                    <tfoot className=\"bg-gray-50\">\n                      <tr>\n                        <td colSpan=\"5\" className=\"px-3 py-3 text-sm font-bold text-gray-700 text-right\">\n                          Total Value:\n                        </td>\n                        <td className=\"px-3 py-3 whitespace-nowrap text-sm font-bold text-indigo-700\">\n                          ₹{totalValue.toFixed(2)}\n                        </td>\n                        <td></td>\n                      </tr>\n                    </tfoot>\n                  </table>\n                </div>\n              </div>\n            )}\n            \n            {/* Notes */}\n            <div className=\"mb-6\">\n              <label htmlFor=\"notes\" className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                Notes (Optional)\n              </label>\n              <textarea\n                id=\"notes\"\n                name=\"notes\"\n                value={formData.notes}\n                onChange={handleInputChange}\n                rows=\"2\"\n                className=\"w-full p-3 text-md border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200\"\n                placeholder=\"Any additional notes about this return\"\n              ></textarea>\n            </div>\n            \n            {/* Submit Button */}\n            <div className=\"flex justify-end\">\n              <button\n                type=\"submit\"\n                disabled={returnItems.length === 0 || isLoading}\n                className=\"px-6 py-3 bg-gradient-to-r from-green-500 to-teal-500 text-white font-medium rounded-lg hover:from-green-600 hover:to-teal-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-md\"\n              >\n                {isLoading ? (\n                  <span className=\"flex items-center\">\n                    <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    Processing...\n                  </span>\n                ) : (\n                  <span className=\"flex items-center\">\n                    <svg className=\"mr-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                    Create Client Expiry Return\n                  </span>\n                )}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ClientExpiryReturnForm; ","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsPDF } from 'jspdf';\nimport 'jspdf-autotable';\n\nconst API_BASE_URL = 'https://medicine-inventory-management-backend.onrender.com';\n\n// Set up axios auth interceptor\naxios.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\n// Handle authentication errors globally\naxios.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response && error.response.status === 401) {\n      console.log('Session expired: Redirecting to login');\n      localStorage.removeItem('token');\n      // Use window.location instead of useNavigate() in interceptors\n      // as useNavigate() is a hook that can only be used inside components\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst SupplierExpiryBillGenerator = () => {\n  const navigate = useNavigate();\n  \n  // State for form data\n  const [formData, setFormData] = useState({\n    partyName: '',\n    startDate: '',\n    endDate: new Date().toISOString().split('T')[0], // Today's date by default\n    items: [],\n    email: ''\n  });\n\n  // UI state\n  const [step, setStep] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [availableParties, setAvailableParties] = useState([]);\n  const [expiryItems, setExpiryItems] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [summary, setSummary] = useState({\n    totalItems: 0,\n    totalQuantity: 0,\n    totalValue: 0\n  });\n\n  // Check authentication on component mount\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userEmail = localStorage.getItem('email');\n    \n    if (token && userEmail) {\n      console.log('Loading data for email:', userEmail);\n      setIsAuthenticated(true);\n      setFormData(prev => ({ ...prev, email: userEmail }));\n      fetchSuppliers(userEmail);\n    } else {\n      navigate('/login', { state: { from: window.location.pathname } });\n    }\n  }, [navigate]);\n\n  // Fetch suppliers from inventory when component mounts\n  const fetchSuppliers = async (email) => {\n    try {\n      setIsLoading(true);\n      console.log(`Fetching suppliers for email: ${email}`);\n      \n      const response = await axios.get(`${API_BASE_URL}/api/inventory`, {\n        params: { email },\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      \n      console.log('Inventory API Response:', response.data);\n      \n      // Extract unique supplier names\n      const uniqueSuppliers = [...new Set(response.data.map(item => item.partyName).filter(Boolean))];\n      console.log('Unique suppliers found:', uniqueSuppliers);\n      \n      setAvailableParties(uniqueSuppliers.map(name => ({ name })));\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error fetching suppliers:', error);\n      if (error.response) {\n        console.error('Error response:', error.response.data);\n        console.error('Error status:', error.response.status);\n      }\n      setError('Failed to fetch suppliers. Please try again.');\n      setIsLoading(false);\n    }\n  };\n\n  // Fetch expiry items by party and date range\n  const fetchExpiryItems = async () => {\n    try {\n      setIsLoading(true);\n      setError('');\n      \n      // Create URL with explicitly encoded parameters to avoid parameter problems\n      const partyName = encodeURIComponent(formData.partyName);\n      const email = encodeURIComponent(formData.email);\n      const startDate = encodeURIComponent(formData.startDate);\n      const endDate = encodeURIComponent(formData.endDate);\n      \n      const url = `${API_BASE_URL}/api/expiry-bills/party-expiry?partyName=${partyName}&email=${email}&startDate=${startDate}&endDate=${endDate}`;\n      \n      console.log('Requesting URL:', url);\n      \n      const response = await axios.get(url);\n      \n      console.log('Expiry items response:', response.data);\n      \n      if (response.data.success && response.data.data.length > 0) {\n        // Filter out items with quantity 0 or less\n        const filteredItems = response.data.data\n          .filter(item => item.quantity > 0)\n          .map(item => ({\n            ...item,\n            returnQuantity: item.quantity, // Set initial return quantity equal to available quantity\n            isSelected: true // Select all items by default\n          }));\n        \n        console.log('Filtered items:', filteredItems.length);\n        \n        if (filteredItems.length === 0) {\n          setExpiryItems([]);\n          setSelectedItems([]);\n          setError('No items with quantity greater than zero found for the selected party and date range.');\n        } else {\n          setExpiryItems(filteredItems);\n          setSelectedItems(filteredItems.map(item => item._id));\n          calculateSummary(filteredItems);\n        }\n      } else {\n        setExpiryItems([]);\n        setSelectedItems([]);\n        \n        // Show more specific error message for user troubleshooting\n        if (response.data.success) {\n          const today = new Date();\n          const selectedStartDate = new Date(formData.startDate);\n          const selectedEndDate = new Date(formData.endDate);\n          \n          if (selectedStartDate > today) {\n            setError('Start date is in the future. Try selecting a past or current date.');\n          } else if (selectedEndDate < selectedStartDate) {\n            setError('End date must be after or equal to start date.');\n          } else {\n            setError(`No expiring items found for supplier \"${formData.partyName}\" in the selected date range. \n                     Check that the supplier has items with expiry dates between ${formData.startDate} and ${formData.endDate}.`);\n      }\n        } else {\n          setError(response.data.message || 'No expiring items found for the selected party and date range.');\n        }\n      }\n      \n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error fetching expiry items:', error);\n      if (error.response) {\n        console.error('Error response:', error.response.data);\n        console.error('Error status:', error.response.status);\n      }\n      setError(error.response?.data?.message || 'Failed to fetch expiring items. Please try again.');\n      setIsLoading(false);\n    }\n  };\n\n  // Calculate summary totals\n  const calculateSummary = (items = null) => {\n    const itemsToCalculate = items || expiryItems.filter(item => selectedItems.includes(item._id));\n    \n    const totalItems = itemsToCalculate.length;\n    const totalQuantity = itemsToCalculate.reduce((sum, item) => sum + (parseInt(item.returnQuantity) || 0), 0);\n    const totalValue = itemsToCalculate.reduce((sum, item) => sum + ((parseInt(item.returnQuantity) || 0) * item.purchaseRate), 0);\n    \n    setSummary({ totalItems, totalQuantity, totalValue });\n  };\n\n  // Handle input change\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Handle item selection/deselection\n  const handleItemSelection = (itemId) => {\n    if (selectedItems.includes(itemId)) {\n      setSelectedItems(selectedItems.filter(id => id !== itemId));\n    } else {\n      setSelectedItems([...selectedItems, itemId]);\n    }\n  };\n\n  // Handle expired quantity change\n  const handleQuantityChange = (itemId, value) => {\n    const updatedItems = expiryItems.map(item => {\n      if (item._id === itemId) {\n        const newQuantity = parseInt(value) || 0;\n        // Ensure quantity doesn't exceed available quantity\n        const validQuantity = Math.min(newQuantity, item.quantity);\n        return { ...item, returnQuantity: validQuantity };\n      }\n      return item;\n    });\n    \n    setExpiryItems(updatedItems);\n    calculateSummary(updatedItems.filter(item => selectedItems.includes(item._id)));\n  };\n\n  // Handle step navigation\n  const nextStep = () => {\n    if (step === 1) {\n      if (!formData.partyName || !formData.startDate || !formData.endDate) {\n        setError('Please select a party name, start date, and end date.');\n        return;\n      }\n      \n      // Validate that end date is after or equal to start date\n      const startDate = new Date(formData.startDate);\n      const endDate = new Date(formData.endDate);\n      \n      // Check for invalid dates\n      if (isNaN(startDate.getTime()) || isNaN(endDate.getTime())) {\n        setError('Please enter valid date values in YYYY-MM-DD format.');\n        return;\n      }\n      \n      if (endDate < startDate) {\n        setError('End date must be after or equal to start date.');\n        return;\n      }\n      \n      // Add one day to include the end date in the range (end of day)\n      const adjustedEndDate = new Date(endDate);\n      adjustedEndDate.setDate(adjustedEndDate.getDate() + 1);\n      setFormData(prev => ({\n        ...prev,\n        adjustedEndDate: adjustedEndDate.toISOString().split('T')[0]\n      }));\n      \n      fetchExpiryItems();\n    } else if (step === 2) {\n      if (selectedItems.length === 0) {\n        setError('Please select at least one item.');\n        return;\n      }\n    }\n    \n    setError('');\n    setStep(prevStep => prevStep + 1);\n  };\n\n  const prevStep = () => {\n    setError('');\n    setStep(prevStep => prevStep - 1);\n  };\n\n  // Handle form submission\n  const handleSubmit = async () => {\n    try {\n      setIsLoading(true);\n      setError('');\n      \n      const selectedExpiryItems = expiryItems\n        .filter(item => selectedItems.includes(item._id))\n        .map(item => ({\n          _id: item._id,\n          itemName: item.itemName,\n          batch: item.batch,\n          expiryDate: item.expiryDate,\n          quantity: item.quantity,\n          returnQuantity: item.returnQuantity,\n          mrp: item.mrp,\n          purchaseRate: item.purchaseRate,\n          gstPercentage: item.gstPercentage || 0\n        }));\n      \n      const payload = {\n        partyName: formData.partyName,\n        startDate: formData.startDate,\n        endDate: formData.endDate,\n        items: selectedExpiryItems,\n        email: formData.email\n      };\n      \n      console.log('Submitting supplier expiry return with payload:', payload);\n      \n      const response = await axios.post(`${API_BASE_URL}/api/expiry-bills/supplier`, payload, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      \n      if (response.data.success) {\n        // Generate and download PDF\n        generatePDF(response.data.data);\n        \n        setSuccess('Supplier expiry return bill created successfully!');\n        // Reset form after successful submission\n        setFormData({\n          partyName: '',\n          startDate: '',\n          endDate: new Date().toISOString().split('T')[0],\n          items: [],\n          email: formData.email\n        });\n        setExpiryItems([]);\n        setSelectedItems([]);\n        setStep(1);\n      }\n      \n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error creating supplier expiry return:', error);\n      setError(error.response?.data?.message || 'Failed to create supplier expiry return. Please try again.');\n      setIsLoading(false);\n    }\n  };\n\n  // Generate PDF function\n  const generatePDF = (billData) => {\n    try {\n      const doc = new jsPDF();\n      \n      // Set document properties\n      doc.setProperties({\n        title: `Supplier Expiry Return - ${billData.expiryBillNumber}`,\n        subject: 'Supplier Expiry Return Bill',\n        author: 'Medicine Inventory Management System',\n        creator: 'Medicine Inventory Management System'\n      });\n      \n      // Add heading\n      doc.setFont('helvetica', 'bold');\n      doc.setFontSize(20);\n      doc.setTextColor(63, 81, 181); // Indigo color\n      doc.text('SUPPLIER EXPIRY RETURN BILL', 105, 20, { align: 'center' });\n      \n      // Add bill number\n      doc.setFontSize(12);\n      doc.setTextColor(100, 100, 100);\n      doc.text(`Bill Number: ${billData.expiryBillNumber}`, 20, 30);\n\n      // Add date\n      const currentDate = new Date().toLocaleDateString();\n      doc.text(`Date: ${currentDate}`, 20, 36);\n      \n      // Add company details\n      doc.setFontSize(14);\n      doc.setFont('helvetica', 'bold');\n      doc.setTextColor(0, 0, 0);\n      doc.text('Medicine Inventory Management', 20, 50);\n      \n      doc.setFontSize(10);\n      doc.setFont('helvetica', 'normal');\n      doc.setTextColor(100, 100, 100);\n      doc.text('Your Address Line 1', 20, 56);\n      doc.text('Your Address Line 2', 20, 61);\n      doc.text('Phone: +91 XXXXXXXXXX', 20, 66);\n      doc.text('Email: contact@example.com', 20, 71);\n      \n      // Add party details\n      doc.setFontSize(12);\n      doc.setFont('helvetica', 'bold');\n      doc.setTextColor(0, 0, 0);\n      doc.text('Party Details:', 120, 50);\n      \n      doc.setFontSize(10);\n      doc.setFont('helvetica', 'normal');\n      doc.setTextColor(100, 100, 100);\n      doc.text(`Name: ${billData.partyName}`, 120, 56);\n      \n      // Date Range with clear separation of start and end dates\n      doc.text('Date Range:', 120, 61);\n      doc.text(`Start: ${new Date(billData.startDate).toLocaleDateString()}`, 120, 66);\n      doc.setTextColor(0, 100, 0); // Green color for end date\n      doc.text(`End: ${new Date(billData.endDate).toLocaleDateString()}`, 120, 71);\n      \n      // Add item table\n      doc.setFontSize(12);\n      doc.setFont('helvetica', 'bold');\n      doc.text('Item Details:', 20, 85);\n      \n      const tableColumn = [\n        'Sr. No.', \n        'Item Name', \n        'Batch', \n        'Expiry Date', \n        'Qty', \n        'Purchase Rate', \n        'Value'\n      ];\n      \n      const tableRows = billData.items.map((item, index) => [\n        index + 1,\n        item.itemName,\n        item.batch,\n        new Date(item.expiryDate).toLocaleDateString(),\n        item.returnQuantity,\n        `₹${item.purchaseRate.toFixed(2)}`,\n        `₹${(item.returnQuantity * item.purchaseRate).toFixed(2)}`\n      ]);\n      \n      doc.autoTable({\n        startY: 90,\n        head: [tableColumn],\n        body: tableRows,\n        theme: 'grid',\n        headStyles: { \n          fillColor: [63, 81, 181], \n          textColor: 255,\n          fontStyle: 'bold' \n        },\n        alternateRowStyles: { \n          fillColor: [240, 240, 250] \n        },\n        margin: { top: 20 }\n      });\n      \n      // Add summary\n      const finalY = doc.lastAutoTable.finalY + 10;\n      \n      doc.setFontSize(11);\n      doc.setFont('helvetica', 'bold');\n      doc.setTextColor(0, 0, 0);\n      doc.text(`Total Items: ${billData.totalItems}`, 130, finalY);\n      doc.text(`Total Quantity: ${billData.totalQuantity}`, 130, finalY + 6);\n      doc.text(`Total Value: ₹${billData.totalValue.toFixed(2)}`, 130, finalY + 12);\n      \n      // Add footer\n      doc.setFontSize(9);\n      doc.setFont('helvetica', 'normal');\n      doc.setTextColor(100, 100, 100);\n      doc.text('This is a computer-generated document. No signature is required.', 105, 280, { align: 'center' });\n      \n      // Save the PDF\n      doc.save(`SupplierExpiryReturn_${billData.expiryBillNumber}.pdf`);\n    } catch (error) {\n      console.error('Error generating PDF:', error);\n      setError('Error generating PDF. Please try again.');\n    }\n  };\n\n  // Render step 1: Party and date selection\n  const renderStepOne = () => (\n    <div className=\"bg-white rounded-xl shadow-lg p-8 border-t-4 border-indigo-500\">\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6 flex items-center\">\n        <span className=\"bg-indigo-100 text-indigo-800 p-2 rounded-full mr-3\">1</span>\n        Select Party and Date Range\n      </h2>\n      \n      <div className=\"space-y-6\">\n        <div className=\"bg-blue-50 p-4 rounded-lg mb-4 border border-blue-200\">\n          <div className=\"flex items-center text-blue-700\">\n            <svg className=\"h-5 w-5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\"></path>\n            </svg>\n            <p className=\"text-sm\">\n              Search for items with expiry dates in the selected range. Expiry items may come from inventory or purchase bills.\n            </p>\n          </div>\n              </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div className=\"col-span-1\">\n            <label htmlFor=\"partyName\" className=\"block text-sm font-semibold text-gray-700 mb-2\">\n              Party Name (Supplier) *\n              </label>\n            <div className=\"relative\">\n              <input\n                type=\"text\"\n                id=\"partyName\"\n                name=\"partyName\"\n                value={formData.partyName}\n                onChange={handleInputChange}\n                className=\"w-full p-4 text-lg border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200\"\n                placeholder=\"Enter party name\"\n                list=\"partyNamesList\"\n                required\n              />\n              <datalist id=\"partyNamesList\">\n                {availableParties.map((party, index) => (\n                  <option key={index} value={party.name} />\n                ))}\n              </datalist>\n            </div>\n            {availableParties.length > 0 && (\n              <p className=\"mt-1 text-xs text-gray-500\">\n                {availableParties.length} suppliers found. Type or select from the list.\n              </p>\n            )}\n            </div>\n            \n          <div className=\"col-span-1\">\n            <label htmlFor=\"startDate\" className=\"block text-sm font-semibold text-gray-700 mb-2\">\n              Start Date (Expiry Range) *\n              </label>\n              <input\n              type=\"date\"\n              id=\"startDate\"\n              name=\"startDate\"\n              value={formData.startDate}\n              onChange={handleInputChange}\n              className=\"w-full p-4 text-lg border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200\"\n                required\n              />\n              <p className=\"mt-1 text-xs text-gray-500\">\n                Select the earliest expiry date you want to search for\n              </p>\n            </div>\n            \n          <div className=\"col-span-1\">\n            <label htmlFor=\"endDate\" className=\"block text-sm font-semibold text-gray-700 mb-2\">\n              End Date (Expiry Range) *\n            </label>\n            <div className=\"relative\">\n              <input\n                type=\"date\"\n                id=\"endDate\"\n                name=\"endDate\"\n                value={formData.endDate}\n                onChange={handleInputChange}\n                className=\"w-full p-4 text-lg border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200\"\n              />\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-indigo-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n            </div>\n            <p className=\"mt-1 text-sm text-indigo-600\">Choose the latest expiry date to include in your search</p>\n          </div>\n            </div>\n            \n        <div className=\"flex justify-end pt-4\">\n          <button\n            type=\"button\"\n            onClick={nextStep}\n            disabled={isLoading}\n            className=\"px-8 py-4 text-lg bg-gradient-to-r from-indigo-600 to-purple-600 text-white font-medium rounded-lg hover:from-indigo-700 hover:to-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-md\"\n          >\n            {isLoading ? (\n              <span className=\"flex items-center\">\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Processing...\n              </span>\n            ) : (\n              <span className=\"flex items-center\">\n                Search for Expiry Items\n                <svg className=\"ml-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                </svg>\n              </span>\n            )}\n          </button>\n          </div>\n        </div>\n      </div>\n    );\n\n  // Render step 2: Item selection\n  const renderStepTwo = () => (\n    <div className=\"bg-white rounded-xl shadow-lg p-8 border-t-4 border-indigo-500\">\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6 flex items-center\">\n        <span className=\"bg-indigo-100 text-indigo-800 p-2 rounded-full mr-3\">2</span>\n        Select Expiring Items\n      </h2>\n      \n      {expiryItems.length === 0 ? (\n        <div className=\"text-center py-12 bg-gray-50 rounded-lg\">\n          <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n          </svg>\n          <p className=\"mt-4 text-lg text-gray-600\">No expiring items found for the selected criteria.</p>\n          <button\n            onClick={prevStep}\n            className=\"mt-6 px-6 py-3 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors duration-200 shadow\"\n          >\n            Go Back\n          </button>\n        </div>\n      ) : (\n        <>\n          <div className=\"bg-indigo-50 p-4 mb-6 rounded-lg border border-indigo-100\">\n            <div className=\"flex items-center text-indigo-700\">\n              <svg className=\"h-5 w-5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\"></path>\n              </svg>\n              <div>\n                <p className=\"text-sm\">Select items to include in the return bill and adjust quantities if needed.</p>\n                <p className=\"text-sm mt-1 font-medium\">Note: The available quantities shown reflect current inventory levels after sales and returns.</p>\n              </div>\n                  </div>\n                </div>\n          \n          <div className=\"overflow-x-auto rounded-lg shadow\">\n                        <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gradient-to-r from-indigo-600 to-purple-600\">\n                            <tr>\n                  <th scope=\"col\" className=\"px-6 py-4 text-left text-xs font-bold text-white uppercase tracking-wider\">\n                                Select\n                              </th>\n                  <th scope=\"col\" className=\"px-6 py-4 text-left text-xs font-bold text-white uppercase tracking-wider\">\n                                Item Name\n                              </th>\n                  <th scope=\"col\" className=\"px-6 py-4 text-left text-xs font-bold text-white uppercase tracking-wider\">\n                                Batch\n                              </th>\n                  <th scope=\"col\" className=\"px-6 py-4 text-left text-xs font-bold text-white uppercase tracking-wider\">\n                                Expiry Date\n                              </th>\n                  <th scope=\"col\" className=\"px-6 py-4 text-left text-xs font-bold text-white uppercase tracking-wider\">\n                    Available Qty\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-4 text-left text-xs font-bold text-white uppercase tracking-wider\">\n                    Return Qty\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-4 text-left text-xs font-bold text-white uppercase tracking-wider\">\n                    Purchase Rate\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-4 text-left text-xs font-bold text-white uppercase tracking-wider\">\n                    MRP\n                              </th>\n                            </tr>\n                          </thead>\n                          <tbody className=\"bg-white divide-y divide-gray-200\">\n                {expiryItems.map((item) => (\n                  <tr key={item._id} className={`${selectedItems.includes(item._id) ? 'bg-indigo-50' : ''} hover:bg-gray-50 transition-colors duration-150`}>\n                                <td className=\"px-6 py-4 whitespace-nowrap\">\n                                  <input\n                                    type=\"checkbox\"\n                        checked={selectedItems.includes(item._id)}\n                        onChange={() => handleItemSelection(item._id)}\n                        className=\"h-5 w-5 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500\"\n                                  />\n                                </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap font-medium text-gray-900\">\n                      {item.itemName}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-gray-700\">\n                      {item.batch}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-gray-700\">\n                      {new Date(item.expiryDate).toLocaleDateString()}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-gray-700\">\n                      {item.quantity}\n                                </td>\n                                <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <input\n                        type=\"number\"\n                        value={item.returnQuantity}\n                        onChange={(e) => handleQuantityChange(item._id, e.target.value)}\n                        min=\"1\"\n                        max={item.quantity}\n                        disabled={!selectedItems.includes(item._id)}\n                        className=\"w-24 p-2 border-2 border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 disabled:bg-gray-100 disabled:text-gray-500\"\n                      />\n                                </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-gray-700\">\n                      ₹{item.purchaseRate}\n                                </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-gray-700\">\n                      ₹{item.mrp}\n                                </td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </table>\n                      </div>\n          \n          <div className=\"mt-8 flex flex-col sm:flex-row justify-between items-center space-y-4 sm:space-y-0\">\n            <button\n              type=\"button\"\n              onClick={prevStep}\n              className=\"w-full sm:w-auto px-6 py-3 border-2 border-indigo-300 rounded-lg shadow-sm text-base font-medium text-indigo-700 bg-white hover:bg-indigo-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-200\"\n            >\n              <span className=\"flex items-center justify-center\">\n                <svg className=\"mr-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                </svg>\n                Back\n              </span>\n            </button>\n            <button\n              type=\"button\"\n              onClick={nextStep}\n              disabled={selectedItems.length === 0 || isLoading}\n              className=\"w-full sm:w-auto px-8 py-3 text-base bg-gradient-to-r from-indigo-600 to-purple-600 text-white font-medium rounded-lg hover:from-indigo-700 hover:to-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-md\"\n            >\n              <span className=\"flex items-center justify-center\">\n                Next\n                <svg className=\"ml-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                </svg>\n              </span>\n            </button>\n                      </div>\n        </>\n                    )}\n                  </div>\n  );\n\n  // Render step 3: Confirmation\n  const renderStepThree = () => (\n    <div className=\"bg-white rounded-xl shadow-lg p-8 border-t-4 border-indigo-500\">\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6 flex items-center\">\n        <span className=\"bg-indigo-100 text-indigo-800 p-2 rounded-full mr-3\">3</span>\n        Confirm and Submit\n      </h2>\n      \n      <div className=\"bg-gradient-to-r from-indigo-50 to-purple-50 p-6 rounded-lg mb-8 shadow-inner\">\n        <h3 className=\"text-xl font-bold text-indigo-700 mb-4\">Summary</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div className=\"bg-white p-5 rounded-lg shadow-sm border border-indigo-100\">\n            <div className=\"flex items-center\">\n              <div className=\"p-3 rounded-full bg-indigo-100 mr-4\">\n                <svg className=\"h-6 w-6 text-indigo-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"></path>\n                </svg>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-500\">Total Items</p>\n                <p className=\"text-2xl font-bold text-indigo-700\">{summary.totalItems}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-white p-5 rounded-lg shadow-sm border border-indigo-100\">\n            <div className=\"flex items-center\">\n              <div className=\"p-3 rounded-full bg-purple-100 mr-4\">\n                <svg className=\"h-6 w-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\"></path>\n                </svg>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-500\">Total Quantity</p>\n                <p className=\"text-2xl font-bold text-purple-700\">{summary.totalQuantity}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-white p-5 rounded-lg shadow-sm border border-indigo-100\">\n            <div className=\"flex items-center\">\n              <div className=\"p-3 rounded-full bg-green-100 mr-4\">\n                <svg className=\"h-6 w-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                </svg>\n                </div>\n                <div>\n                <p className=\"text-sm text-gray-500\">Total Value</p>\n                <p className=\"text-2xl font-bold text-green-700\">₹{summary.totalValue.toFixed(2)}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"mb-8\">\n        <h3 className=\"text-xl font-bold text-gray-800 mb-4\">Return Details</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 bg-white p-5 rounded-lg shadow-sm border border-gray-200\">\n                        <div>\n            <p className=\"text-sm font-medium text-gray-500 mb-1\">Party Name</p>\n            <p className=\"text-lg font-bold text-gray-900\">{formData.partyName}</p>\n                        </div>\n                        <div>\n            <p className=\"text-sm font-medium text-gray-500 mb-1\">Date Range</p>\n            <div className=\"flex flex-col\">\n              <div className=\"flex items-center mb-1\">\n                <span className=\"text-sm font-medium text-gray-500 w-24\">Start Date:</span>\n                <span className=\"text-lg font-bold text-gray-900\">{new Date(formData.startDate).toLocaleDateString()}</span>\n              </div>\n              <div className=\"flex items-center\">\n                <span className=\"text-sm font-medium text-gray-500 w-24\">End Date:</span>\n                <span className=\"text-lg font-bold text-indigo-700\">{new Date(formData.endDate).toLocaleDateString()}</span>\n              </div>\n            </div>\n                        </div>\n                      </div>\n                    </div>\n                    \n      <div className=\"mb-8\">\n        <h3 className=\"text-xl font-bold text-gray-800 mb-4\">Selected Items</h3>\n        <div className=\"overflow-x-auto rounded-lg shadow border border-gray-200\">\n                          <table className=\"min-w-full divide-y divide-gray-200\">\n                            <thead className=\"bg-gray-50\">\n                              <tr>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Item Name</th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Batch</th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Return Qty</th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Purchase Rate</th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Value</th>\n                              </tr>\n                            </thead>\n                            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {expiryItems\n                .filter(item => selectedItems.includes(item._id))\n                .map(item => (\n                  <tr key={item._id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap font-medium text-gray-900\">{item.itemName}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-gray-700\">{item.batch}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-gray-700\">{item.returnQuantity}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-gray-700\">₹{item.purchaseRate}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap font-medium text-indigo-700\">₹{(item.returnQuantity * item.purchaseRate).toFixed(2)}</td>\n                                  </tr>\n                                ))}\n                            </tbody>\n                          </table>\n                        </div>\n      </div>\n      \n      <div className=\"flex flex-col sm:flex-row justify-between items-center space-y-4 sm:space-y-0 mt-8\">\n        <button\n          type=\"button\"\n          onClick={prevStep}\n          className=\"w-full sm:w-auto px-6 py-3 border-2 border-indigo-300 rounded-lg shadow-sm text-base font-medium text-indigo-700 bg-white hover:bg-indigo-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-200\"\n        >\n          <span className=\"flex items-center justify-center\">\n            <svg className=\"mr-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n            </svg>\n            Back\n          </span>\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleSubmit}\n          disabled={isLoading}\n          className=\"w-full sm:w-auto px-8 py-4 text-base bg-gradient-to-r from-green-500 to-teal-500 text-white font-medium rounded-lg hover:from-green-600 hover:to-teal-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-md\"\n        >\n          {isLoading ? (\n            <span className=\"flex items-center justify-center\">\n              <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n              Processing...\n            </span>\n          ) : (\n            <span className=\"flex items-center justify-center\">\n              <svg className=\"mr-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              Create Supplier Expiry Return\n            </span>\n          )}\n        </button>\n      </div>\n    </div>\n  );\n\n  // If not authenticated, show loading or redirect\n  if (!isAuthenticated) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n        <div className=\"text-center\">\n          <p className=\"text-lg text-gray-600\">Checking authentication...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-indigo-50 to-purple-50 py-8\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-4xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-indigo-600 to-purple-600\">Supplier Expiry Return</h1>\n          <p className=\"mt-2 text-lg text-gray-600\">Create a return bill for expired items to supplier</p>\n        </div>\n        \n        {error && (\n          <div className=\"mb-6 bg-red-50 border-l-4 border-red-500 p-4 rounded-lg shadow-sm\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-red-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                </svg>\n                        </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm text-red-700 font-medium\">{error}</p>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n        {success && (\n          <div className=\"mb-6 bg-green-50 border-l-4 border-green-500 p-4 rounded-lg shadow-sm\">\n                  <div className=\"flex\">\n                    <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-green-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                </svg>\n                    </div>\n                    <div className=\"ml-3\">\n                <p className=\"text-sm text-green-700 font-medium\">{success}</p>\n                    </div>\n                  </div>\n                </div>\n              )}\n        \n        <div className=\"mb-8\">\n          <nav className=\"flex justify-center\">\n            <ol className=\"flex items-center\">\n              <li className=\"flex items-center\">\n                <div className={`flex items-center justify-center h-10 w-10 rounded-full ${step >= 1 ? 'bg-gradient-to-r from-indigo-600 to-purple-600 text-white shadow-md' : 'bg-gray-200 text-gray-500'}`}>\n                  1\n            </div>\n                <span className={`ml-2 text-sm font-medium ${step >= 1 ? 'text-indigo-600' : 'text-gray-500'}`}>Party & Date</span>\n              </li>\n              \n              <li className=\"flex items-center\">\n                <div className={`h-0.5 w-12 mx-2 ${step >= 2 ? 'bg-indigo-500' : 'bg-gray-300'}`}></div>\n              </li>\n              \n              <li className=\"flex items-center\">\n                <div className={`flex items-center justify-center h-10 w-10 rounded-full ${step >= 2 ? 'bg-gradient-to-r from-indigo-600 to-purple-600 text-white shadow-md' : 'bg-gray-200 text-gray-500'}`}>\n                  2\n            </div>\n                <span className={`ml-2 text-sm font-medium ${step >= 2 ? 'text-indigo-600' : 'text-gray-500'}`}>Select Items</span>\n              </li>\n              \n              <li className=\"flex items-center\">\n                <div className={`h-0.5 w-12 mx-2 ${step >= 3 ? 'bg-indigo-500' : 'bg-gray-300'}`}></div>\n              </li>\n              \n              <li className=\"flex items-center\">\n                <div className={`flex items-center justify-center h-10 w-10 rounded-full ${step >= 3 ? 'bg-gradient-to-r from-indigo-600 to-purple-600 text-white shadow-md' : 'bg-gray-200 text-gray-500'}`}>\n                  3\n          </div>\n                <span className={`ml-2 text-sm font-medium ${step >= 3 ? 'text-indigo-600' : 'text-gray-500'}`}>Confirm</span>\n              </li>\n            </ol>\n          </nav>\n        </div>\n        \n        {step === 1 && renderStepOne()}\n        {step === 2 && renderStepTwo()}\n        {step === 3 && renderStepThree()}\n      </div>\n    </div>\n  );\n};\n\nexport default SupplierExpiryBillGenerator;","import React from 'react';\n\nconst ExpiryBillDocs = () => (\n  <div className=\"max-w-4xl mx-auto p-8 bg-white rounded-3xl shadow-xl mt-10 font-sans\">\n    <h1 className=\"text-4xl font-extrabold text-blue-700 mb-6\">Expiry Bill Documentation</h1>\n    <p className=\"text-lg text-gray-700 mb-6\">\n      <b>Expiry Bills</b> help you manage medicines that are expired or near expiry, either returned by clients or sent back to suppliers. This system ensures proper documentation, inventory updates, and regulatory compliance.\n    </p>\n    <h2 className=\"text-2xl font-bold text-blue-600 mb-4\">Types of Expiry Returns</h2>\n    <ul className=\"list-disc ml-8 mb-6 text-gray-700\">\n      <li><b>Client Expiry Return:</b> When a customer returns expired medicines. You record the customer details and generate a return bill.</li>\n      <li><b>Supplier Expiry Return:</b> When you return expired stock to your supplier. You record the supplier/party details and generate a return bill.</li>\n    </ul>\n    <h2 className=\"text-2xl font-bold text-blue-600 mb-4\">How to Use the Smart Bill Generator</h2>\n    <ol className=\"list-decimal ml-8 mb-6 text-gray-700\">\n      <li>Go to <b>Expiry Bill Management</b> and choose either <b>Client Expiry Return</b> or <b>Supplier Expiry Return</b>.</li>\n      <li>Fill in the required header details (Email, Bill Number, Date, Customer/Supplier Name).</li>\n      <li>Add all expired medicines, entering all required fields for each row.</li>\n      <li>Click <b>Create Bill & Download PDF</b> to save and download your expiry bill.</li>\n    </ol>\n    <h2 className=\"text-2xl font-bold text-blue-600 mb-4\">Fields in Expiry Bill</h2>\n    <div className=\"overflow-x-auto mb-6\">\n      <table className=\"min-w-full bg-white border border-gray-200 rounded-xl\">\n        <thead className=\"bg-blue-100\">\n          <tr>\n            <th className=\"py-2 px-4 border-b text-left\">Field</th>\n            <th className=\"py-2 px-4 border-b text-left\">Description</th>\n            <th className=\"py-2 px-4 border-b text-left\">Client Return</th>\n            <th className=\"py-2 px-4 border-b text-left\">Supplier Return</th>\n          </tr>\n        </thead>\n        <tbody className=\"text-gray-700\">\n          <tr><td className=\"py-2 px-4 border-b\">Email ID</td><td className=\"py-2 px-4 border-b\">Your email for record</td><td>✔️</td><td>✔️</td></tr>\n          <tr><td className=\"py-2 px-4 border-b\">Bill Number</td><td className=\"py-2 px-4 border-b\">Unique bill/invoice number</td><td>✔️</td><td>✔️</td></tr>\n          <tr><td className=\"py-2 px-4 border-b\">Date</td><td className=\"py-2 px-4 border-b\">Bill date</td><td>✔️</td><td>✔️</td></tr>\n          <tr><td className=\"py-2 px-4 border-b\">Customer Name</td><td className=\"py-2 px-4 border-b\">Client's name</td><td>✔️</td><td></td></tr>\n          <tr><td className=\"py-2 px-4 border-b\">Party Name</td><td className=\"py-2 px-4 border-b\">Supplier/party name</td><td></td><td>✔️</td></tr>\n          <tr><td className=\"py-2 px-4 border-b\">Medicine Name</td><td className=\"py-2 px-4 border-b\">Name of the medicine</td><td>✔️</td><td>✔️</td></tr>\n          <tr><td className=\"py-2 px-4 border-b\">Purchase Rate</td><td className=\"py-2 px-4 border-b\">Rate at which medicine was purchased</td><td>✔️</td><td>✔️</td></tr>\n          <tr><td className=\"py-2 px-4 border-b\">Expiry</td><td className=\"py-2 px-4 border-b\">Expiry date of medicine</td><td>✔️</td><td>✔️</td></tr>\n          <tr><td className=\"py-2 px-4 border-b\">Qty</td><td className=\"py-2 px-4 border-b\">Quantity being returned</td><td>✔️</td><td>✔️</td></tr>\n          <tr><td className=\"py-2 px-4 border-b\">Returnable Qty</td><td className=\"py-2 px-4 border-b\">How much can be returned</td><td>✔️</td><td>✔️</td></tr>\n          <tr><td className=\"py-2 px-4 border-b\">MRP</td><td className=\"py-2 px-4 border-b\">Maximum retail price</td><td>✔️</td><td>✔️</td></tr>\n          <tr><td className=\"py-2 px-4 border-b\">GST</td><td className=\"py-2 px-4 border-b\">GST percentage</td><td>✔️</td><td>✔️</td></tr>\n          <tr><td className=\"py-2 px-4 border-b\">Discount</td><td className=\"py-2 px-4 border-b\">Discount applied</td><td>✔️</td><td>✔️</td></tr>\n          <tr><td className=\"py-2 px-4 border-b\">Amount</td><td className=\"py-2 px-4 border-b\">Total amount</td><td>✔️</td><td>✔️</td></tr>\n          <tr><td className=\"py-2 px-4 border-b\">Net Amount</td><td className=\"py-2 px-4 border-b\">Final amount after discount/GST</td><td>✔️</td><td>✔️</td></tr>\n        </tbody>\n      </table>\n    </div>\n    <h2 className=\"text-xl font-bold text-blue-600 mb-2\">Tips</h2>\n    <ul className=\"list-disc ml-8 text-gray-700 mb-4\">\n      <li>Always double-check expiry dates and quantities before submitting.</li>\n      <li>Download and save the PDF for your records and compliance.</li>\n      <li>Contact support if you need help with expiry returns or documentation.</li>\n    </ul>\n  </div>\n);\n\nexport default ExpiryBillDocs; ","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { SocketProvider } from './context/SocketContext';\nimport Dashboard from './components/Dashboard';\nimport Inventory from './components/Inventory';\nimport Alerts from './components/Alerts';\n\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Layout from './components/Layout';\nimport ViewInventory from './components/ViewInventory';\nimport GenerateBillOptions from './components/GenerateBillOptions';\nimport PurchaseBillForm from './components/PurchaseBillForm'; // Ensure this is created\nimport SellBillForm from './components/SellBillForm'; // Ensure this is created\nimport ReturnBillOptions from './components/ReturnBillOptions';\nimport PurchaseReturnForm from './components/PurchaseReturnForm';\nimport PurchaseReturnSearch from './components/PurchaseReturnSearch';\nimport SaleReturnForm from './components/SaleReturnForm';\nimport ExpiryBillForm from './components/ExpiryBillForm';\nimport BillGenerationDocs from './components/BillGenerationDocs';\nimport PurchaseHistory from './components/PurchaseHistory';\nimport PartyInvoiceSearch from './components/PartyInvoiceSearch';\nimport { Toaster } from 'react-hot-toast';\nimport MedicineSalesSummary from './components/Report';\nimport ClientExpiryReturnForm from './components/ClientExpiryReturnForm';\nimport ClientExpiryBillGenerator from './components/ClientExpiryBillGenerator';\nimport SupplierExpiryBillGenerator from './components/SupplierExpiryBillGenerator';\nimport ExpiryBillDocs from './components/ExpiryBillDocs';\n// import ExpiryBillList from './components/ExpiryBills/ExpiryBillList.js';\n// import CreateExpiryBill from './components/ExpiryBills/CreateExpiryBill.js';\n// import ViewExpiryBill from './components/ExpiryBills/ViewExpiryBill.js';\n// import DeleteExpiryBill from './components/ExpiryBills/DeleteExpiryBill.js';\n\nfunction App() {\n  return (\n    <SocketProvider>\n      <Router>\n        <div className=\"App\">\n          <Toaster position=\"top-right\" reverseOrder={false} />\n          <Routes>\n            <Route path=\"/\" element={<Layout />} />\n            <Route path=\"/dashboard\" element={<Dashboard />} />\n            <Route path=\"/inventory\" element={<Inventory />} />\n            <Route path=\"/view-inventory\" element={<ViewInventory />} />\n            <Route path=\"/alerts\" element={<Alerts />} />\n            \n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/register\" element={<Register />} />\n            <Route path=\"/generate-bill\" element={<GenerateBillOptions />} />\n            <Route \n          path=\"/documentation/bill-generation\" \n          element={<BillGenerationDocs />} \n        />\n            <Route path=\"/purchase-bill\" element={<PurchaseBillForm />} />\n            <Route path=\"/sell-bill\" element={<SellBillForm />} />\n            <Route path=\"/return-bill\" element={<ReturnBillOptions />} />\n            <Route path=\"/purchase-return\" element={<PurchaseReturnForm />} />\n            <Route path=\"/purchase-return-search\" element={<PurchaseReturnSearch />} />\n            <Route path=\"/sale-return\" element={<SaleReturnForm />} />\n            <Route path=\"/expiry-bill\" element={<ExpiryBillForm />} />\n            <Route path=\"/purchase-history\" element={<PurchaseHistory />} />\n            <Route path=\"/party-invoices\" element={<PartyInvoiceSearch />} />\n            <Route path=\"/medicine-sales-summary\" element={<MedicineSalesSummary />} />\n            <Route path=\"/expiry/client\" element={<ClientExpiryReturnForm />} />\n            <Route path=\"/expiry-bill/client\" element={<ClientExpiryBillGenerator />} />\n            <Route path=\"/expiry-bill/supplier\" element={<SupplierExpiryBillGenerator />} />\n            <Route path=\"/docs/expiry-bill\" element={<ExpiryBillDocs />} />\n          </Routes>\n        </div>\n      </Router>\n    </SocketProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}